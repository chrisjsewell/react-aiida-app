{"version":3,"sources":["reportWebVitals.ts","clients/aiidaClient.ts","styles.ts","icons.tsx","constants.ts","hooks.tsx","PageHome.tsx","components/aiidaListItems.tsx","components/nodeList.tsx","PageNodeExplorer.tsx","components/provenanceGraph.tsx","PageProvenanceGraph.tsx","components/structureUtils.ts","components/structure3DViewer.tsx","components/structureTable.tsx","clients/optimadeClient.ts","components/structurePanel.tsx","components/optimadePanel.tsx","PageStructures.tsx","PageGroups.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryAiidaClient","QueryClient","defaultRestUrl","urlPattern","RegExp","uuidPattern","AiidaSettingsContext","React","createContext","baseUrl","a","fetch","response","ok","nodeType","page","perPage","nodeTypeQuery","totalCount","parseInt","headers","get","json","responseJson","nodes","data","getNode","uuid","test","TypeError","undefined","Object","values","repo_list","getNodeIncoming","incoming","getNodeOutgoing","outgoing","groups","drawerWidth","useStyles","makeStyles","theme","createStyles","landingIcon","marginLeft","spacing","float","breakpoints","down","display","justifyContent","featureCard","height","flexDirection","flexGrow","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","enteringScreen","menuButton","marginRight","up","aiidaIcon","inputRestUrl","position","minWidth","inputRestUrlText","color","palette","primary","contrastText","hide","overflowAuto","overflow","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","alignItems","padding","mixins","mainGrid","paddingTop","paddingLeft","paper","accordSumContent","margin","InlineIcon","verticalAlign","padTop","pagination","paddingBottom","nodeTree","backgroundColor","background","nodeItemChip","marginBottom","nodeListItem","aiidaBlue","aiidaGreen","aiidaOrange","AiiDAIcon200","arcColor","viewBox","xmlns","preserveAspectRatio","fill","id","y","x","opacity","transform","d","defaultProps","ElementIconMap","default","folder","RocketIcon","GitBranchIcon","SvgIcon","fillRule","OptimadeIcon","singleColor","version","y2","x2","y1","x1","style","stroke","strokeWidth","r","cy","cx","PageKeys","LocalStorageKeys","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","setItem","stringify","nullSnackbarMessenger","message","action","handleAction","warn","SnackbarContext","SnackbarProvider","props","open","state","setState","handleClose","Provider","children","SnackbarComponent","ButtonProps","onClick","event","SnackbarProps","onClose","LinkInternal","LinkExternal","Link","target","rel","PageHome","classes","Grid","container","className","xs","Header","Features","sm","md","Paper","variant","GettingStartedBox","DetailedBox","useTheme","matches","useMediaQuery","Box","text","Typography","align","child","Snackbar","Button","size","featuresList","name","description","icon","justify","map","FeatureCard","lg","ListItem","ListItemAvatar","Avatar","alt","getContrastText","ListItemText","secondary","Alert","severity","href","language","type","AiidaNodeListItem","menuOpen","setmenuOpen","anchorEl","setAnchorEl","childOpen","setchildOpen","elementName","node_type","split","slice","join","title","pk","label","process","main","includes","exitStatus","success","Chip","toUpperCase","borderColor","link","info","mtime","process_type","Collapse","in","timeout","mountOnEnter","unmountOnExit","indent","button","IconButton","stopPropagation","currentTarget","contextMenu","Divider","light","AiidaNodeTree","nodePrefix","setPage","aiidaSettings","useContext","result","useQuery","getNodes","enabled","keepPreviousData","element","CircularProgress","pages","isIdle","Math","ceil","isPreviousData","List","component","aria-label","attributes","process_label","process_state","exit_status","AiidaNodeChildren","isError","updateInfo","dataUpdatedAt","date","Date","noWrap","toLocaleString","startIcon","refetch","Pagination","disabled","count","onChange","resultRepo","getNodeRepoList","resultIncoming","resultOutgoing","marginStyle","disablePadding","length","AiidaRepoList","AiidaLinksList","direction","isLoading","Skeleton","setOpen","ListItemIcon","textTransform","link_type","link_label","PageNodeExplorer","setnodePrefix","nodeFieldsUUID","setnodeFieldsUUID","expandedTabs","setExpandedTabs","changeExpanded","tab","expanded","tabs","Set","add","delete","Array","from","Accordion","defaultExpanded","AccordionSummary","content","expandIcon","AccordionDetails","NodeExplorerIntroduction","NodeExplorerFilters","NodeExplorerAttributes","to","snackbarMessenger","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","MenuItem","copy","current","Error","err","nodePrefixesDefault","getNodeStatistics","nodePrefixes","types","total","FormControl","fullWidth","InputLabel","Select","labelId","entries","sort","view","src","collapseStringsAfterLength","isFetching","TextField","helperText","AiidaProvenanceGraph","nodeUUID","dagMode","dagLevelDistance","fgRef","useRef","useEffect","fg","d3Force","forceCollide","val","fillColor","selected","links","push","node","createNodeData","source","ref","graphData","nodeCanvasObject","linkDirectionalArrowLength","linkDirectionalArrowRelPos","pop","dark","ctx","globalScale","fontSize","font","bckgDimensions","measureText","n","textAlign","textBaseline","strokeStyle","fillStyle","fillRect","strokeRect","fillText","__bckgDimensions","PageProvenanceGraph","rootUUID","setrootUUID","setdagMode","setdagLevelDistance","ProvenanceGraphIntroduction","gutterBottom","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","vectorLength","point","Vector3","toFixed","kinds2elMap","kinds","reduce","prev","symbols","element2colorThree","Color","atomData","XX","H","He","Li","Be","B","C","N","O","F","Ne","Na","Mg","Al","Si","P","S","Cl","Ar","K","Ca","Sc","Ti","V","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","Te","I","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Bi","Po","At","Rn","Fr","Ra","Ac","Th","Pa","U","Np","Pu","Am","Structure3DViewer","OrbitControls","castShadow","Center","alignTop","Structure","images","withBox","boxColor","cell","ax","ay","az","bx","by","bz","cz","sites","kindMap","boxes","na","nb","nc","newCell","BoundingBox","site","px","py","pz","Atom","radius","kind_name","mesh","args","transparent","v1","v2","z","root","Line","points","lineWidth","dashed","StructureTable","columns","field","headerName","renderCell","params","g","b","element2colorCss","rows","index","kind","autoHeight","StructureURLs","cod","omdb","tcod","oqmd","odbx","formulaPattern","appendUrl","url","tail","replace","addCorsProxy","proxy","providersResponse2Map","providers","OptimadeClient","defaultProviders","versionPath","this","meta","api_version","charAt","getApiVersionPath","Promise","resolve","keys","providerId","filterFormula","exactFilter","pageLimit","structures","urlBase","urlFull","filter","fields","origin","data_returned","structureId","query","representation","more_data_available","schema","data_available","base_url","homepage","StructurePanel","initTab","tabIndex","setTabIndex","Tabs","indicatorColor","textColor","Tab","TabPanel","StructurePanelAiiDA","StructurePanelOptimade","other","role","hidden","p","uuidErrorMessage","StructurePanelBase","provider","setProvider","setID","resultProviders","getStructureProviders","resultStructure","getStructureView","providerItems","pbc","dimension_types","nodeData","lattice_vectors","pbc1","pbc2","pbc3","cartesian_site_positions","i","species_at_sites","species","s","mass","chemical_symbols","weights","concentration","boundingBox","setboundingBox","aImages","setaImages","bImages","setbImages","cImages","setcImages","an","bn","cn","viewerSize","setviewerSize","viewerContainer","RepeatSlider","setter","marginTop","maxConstraints","offsetWidth","Infinity","resizeHandles","onResize","e","FormControlLabel","control","Checkbox","checked","labelPlacement","OptimadePanel","formulaFilter","setformulaFilter","setexactFilter","resultStructures","getStructures","items","Tooltip","Launch","tableElement","minHeight","OptimadeTable","Table","TableHead","TableRow","TableCell","TableBody","row","chemical_formula_descriptive","nsites","last_modified","PageStructures","PageGroups","GroupTree","Bookmarks","openWipeDialog","setOpenWipeDialog","bookmarkTable","BookmarkItem","Dialog","DialogTitle","DialogContent","DialogActions","removeItem","autoFocus","initialOpen","BookmarkNodeItem","getGroups","groupTable","time","type_string","ListItemLink","location","useLocation","renderLink","useMemo","forwardRef","itemProps","pathname","App","showDevTools","darkMode","setDarkMode","createMuiTheme","setDrawerOpen","handleDrawerClose","restUrlBase","setRestUrlBase","ThemeProvider","QueryClientProvider","client","autoHideDuration","TopBar","Drawer","clsx","exact","path","NotFound","initialIsOpen","AppBar","Toolbar","edge","autoComplete","InputProps","endAdornment","InputAdornment","RestUrlConnection","isConnected","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ac7a64e.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport { QueryClient } from 'react-query'\n\nexport const queryAiidaClient = new QueryClient()\nexport const defaultRestUrl = 'http://127.0.0.1:5000/api/v4'\n// TODO move validation to aiidaClient functions?\nexport const urlPattern = new RegExp('^https?:\\\\/\\\\/[^\\\\?]+$')\nexport const uuidPattern = new RegExp('^[-a-zA-Z0-9]+$')\n\nexport const AiidaSettingsContext = React.createContext({\n  baseUrl: defaultRestUrl\n} as { baseUrl: null | string })\n\nexport interface IAiidaRestResponse {\n  // The base attributes for the rest response\n  data: any\n  id: null\n  method: 'GET' | 'POST'\n  path: string\n  query_string: string\n  resource_type: string\n  url: string\n  url_root: string\n}\n\nexport interface IAiidaRestNode {\n  ctime: string\n  full_type: string\n  id: number\n  label: string\n  mtime: string\n  node_type: string\n  process_type: string\n  user_id: number\n  uuid: string\n  attributes: { [key: string]: any }\n}\n\nexport interface IAiidaRestProcess extends IAiidaRestNode {\n  attributes: {\n    process_state:\n      | 'created'\n      | 'running'\n      | 'waiting'\n      | 'finished'\n      | 'excepted'\n      | 'killed'\n    process_label: string\n    exit_status: number\n  }\n}\n\nexport interface IAiidaRestResponseNode extends IAiidaRestResponse {\n  data: { nodes: IAiidaRestNode[] }\n}\n\nexport interface IAiidaRestNodeStatistics {\n  total: number\n  ctime_by_day: { [key: string]: number }\n  types: { [key: string]: number }\n}\n\nexport interface IAiidaRestResponseNodeStatistics extends IAiidaRestResponse {\n  data: IAiidaRestNodeStatistics\n}\n\nexport async function isConnected(baseUrl: string | null): Promise<boolean> {\n  if (baseUrl === null) {\n    return false\n  }\n  const response = await fetch(`${baseUrl}`)\n  return response.ok\n}\n\nexport async function getNodes(\n  baseUrl: string | null,\n  nodeType: string,\n  page: number\n): Promise<null | {\n  nodes: IAiidaRestNode[]\n  totalCount: number\n  perPage: number\n}> {\n  if (baseUrl === null) {\n    return null\n  }\n  const perPage = 20\n  const nodeTypeQuery = nodeType ? `node_type=like=%22${nodeType}%%22&` : ''\n  // TODO better url join?\n  const response = await fetch(\n    `${baseUrl}/nodes/page/${page}?perpage=${perPage}&orderby=-mtime&${nodeTypeQuery}attributes=true&attributes_filter=process_label,process_state,exit_status`\n  )\n  // TODO handle errors\n  const totalCount = parseInt(response.headers.get('x-total-count') || '0')\n  const responseJson = (await response.json()) as IAiidaRestResponseNode\n  return { nodes: responseJson.data.nodes, totalCount, perPage }\n}\n\nexport async function getNodeStatistics(\n  baseUrl: string | null\n): Promise<null | IAiidaRestNodeStatistics> {\n  if (baseUrl === null) {\n    return null\n  }\n  const response = await fetch(`${baseUrl}/nodes/statistics/`)\n  const responseJson = (await response.json()) as IAiidaRestResponseNodeStatistics\n  return responseJson.data\n}\n\nexport async function getNode(\n  baseUrl: string | null,\n  uuid: string | null\n): Promise<null | IAiidaRestNode> {\n  if (baseUrl === null || !uuid) {\n    return null\n  }\n  if (!uuidPattern.test(uuid)) {\n    throw new TypeError('UUID does not match required format')\n  }\n  const response = await fetch(`${baseUrl}/nodes/${uuid}?attributes=true&extras=true`)\n  const responseJson = (await response.json()) as IAiidaRestResponse\n  return responseJson.data?.nodes === undefined\n    ? null\n    : (Object.values(responseJson.data?.nodes)[0] as IAiidaRestNode)\n}\n\nexport interface IAiidaRestNodeRepoListItem {\n  name: string\n  type: 'FILE' | 'DIRECTORY'\n}\n\nexport interface IAiidaRestResponseNodeRepoList extends IAiidaRestResponse {\n  data: { repo_list: { [key: number]: IAiidaRestNodeRepoListItem } }\n}\n\nexport async function getNodeRepoList(\n  baseUrl: string | null,\n  uuid: string | null\n): Promise<null | IAiidaRestNodeRepoListItem[]> {\n  if (baseUrl === null || !uuid) {\n    return null\n  }\n  if (!uuidPattern.test(uuid)) {\n    throw new TypeError('UUID does not match required format')\n  }\n  const response = await fetch(`${baseUrl}/nodes/${uuid}/repo/list`)\n  const responseJson = (await response.json()) as IAiidaRestResponseNodeRepoList\n  return responseJson.data?.repo_list === undefined\n    ? null\n    : (Object.values(responseJson.data?.repo_list) as IAiidaRestNodeRepoListItem[])\n}\n\nexport interface IAiidaRestNodeLinkItem {\n  ctime: string\n  full_type: string\n  id: number\n  label: string\n  mtime: string\n  node_type: string\n  process_type: string\n  user_id: number\n  uuid: string\n  link_label: string\n  link_type: string\n}\n\nexport interface IAiidaRestResponseNodeIncoming extends IAiidaRestResponse {\n  data: { incoming: { [key: number]: IAiidaRestNodeLinkItem } }\n}\n\nexport async function getNodeIncoming(\n  baseUrl: string | null,\n  uuid: string | null\n): Promise<null | IAiidaRestNodeLinkItem[]> {\n  if (baseUrl === null || !uuid) {\n    return null\n  }\n  if (!uuidPattern.test(uuid)) {\n    throw new TypeError('UUID does not match required format')\n  }\n  // TODO deal with pagination\n  const response = await fetch(`${baseUrl}/nodes/${uuid}/links/incoming/page/1`)\n  const responseJson = (await response.json()) as IAiidaRestResponseNodeIncoming\n  return responseJson.data?.incoming === undefined\n    ? null\n    : (Object.values(responseJson.data?.incoming) as IAiidaRestNodeLinkItem[])\n}\n\nexport interface IAiidaRestResponseNodeOutgoing extends IAiidaRestResponse {\n  data: { outgoing: { [key: number]: IAiidaRestNodeLinkItem } }\n}\n\nexport async function getNodeOutgoing(\n  baseUrl: string | null,\n  uuid: string | null\n): Promise<null | IAiidaRestNodeLinkItem[]> {\n  if (baseUrl === null || !uuid) {\n    return null\n  }\n  if (!uuidPattern.test(uuid)) {\n    throw new TypeError('UUID does not match required format')\n  }\n  // TODO deal with pagination\n  const response = await fetch(`${baseUrl}/nodes/${uuid}/links/outgoing/page/1`)\n  const responseJson = (await response.json()) as IAiidaRestResponseNodeOutgoing\n  return responseJson.data?.outgoing === undefined\n    ? null\n    : (Object.values(responseJson.data?.outgoing) as IAiidaRestNodeLinkItem[])\n}\n\nexport interface IAiidaRestGroupItem {\n  description: string\n  extras: { [key: string]: any }\n  id: number\n  label: string\n  time: string\n  type_string: string\n  user_id: number\n  uuid: string\n}\nexport interface IAiidaRestResponseGroups extends IAiidaRestResponse {\n  data: { groups: { [key: number]: IAiidaRestGroupItem } }\n}\n\nexport async function getGroups(\n  baseUrl: string | null\n): Promise<null | IAiidaRestGroupItem[]> {\n  if (baseUrl === null) {\n    return null\n  }\n  // TODO deal with pagination\n  const response = await fetch(`${baseUrl}/groups?orderby=type_string`)\n  const responseJson = (await response.json()) as IAiidaRestResponseGroups\n  return responseJson.data?.groups === undefined\n    ? null\n    : (Object.values(responseJson.data?.groups) as IAiidaRestGroupItem[])\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nconst drawerWidth = 240\n\n// TODO use a spacer component instead of margins etc\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    landingIcon: {\n      marginLeft: theme.spacing(2),\n      float: 'right',\n      [theme.breakpoints.down('xs')]: {\n        float: 'none',\n        display: 'flex',\n        justifyContent: 'center'\n      }\n    },\n    featureCard: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    flexGrow: {\n      flexGrow: 1\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: theme.spacing(0),\n      [theme.breakpoints.up('sm')]: {\n        marginRight: theme.spacing(2)\n      }\n    },\n    aiidaIcon: {\n      marginRight: theme.spacing(1)\n    },\n    inputRestUrl: {\n      position: 'relative',\n      marginRight: theme.spacing(1),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n        minWidth: 250\n      },\n      [theme.breakpoints.up('md')]: {\n        minWidth: 300\n      }\n    },\n    inputRestUrlText: {\n      color: theme.palette.primary.contrastText\n    },\n    hide: {\n      display: 'none'\n    },\n    overflowAuto: {\n      overflow: 'auto'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap'\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(9) + 1,\n      [theme.breakpoints.down('sm')]: {\n        width: theme.spacing(7) + 1\n      },\n      [theme.breakpoints.down('xs')]: {\n        width: 0\n      }\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar\n    },\n    mainGrid: {\n      paddingTop: theme.spacing(1),\n      paddingLeft: theme.spacing(10),\n      [theme.breakpoints.down('sm')]: {\n        paddingLeft: theme.spacing(8)\n      },\n      [theme.breakpoints.down('xs')]: {\n        paddingLeft: theme.spacing(1)\n      },\n      paddingRight: theme.spacing(1)\n    },\n    paper: {\n      padding: theme.spacing(2)\n      // color: theme.palette.text.secondary\n    },\n    accordSumContent: {\n      margin: '0 12px!important'\n    },\n    InlineIcon: {\n      verticalAlign: 'middle',\n      display: 'inline-flex'\n    },\n    padTop: {\n      paddingTop: theme.spacing(2)\n    },\n    pagination: {\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(1)\n    },\n    nodeTree: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper\n    },\n    nodeItemChip: {\n      marginLeft: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      float: 'right'\n    },\n    nodeListItem: {\n      // maxWidth: 480,\n      overflow: 'hidden'\n    }\n  })\n)\n","// From https://primer.style/octicons\nimport React from 'react'\nimport SvgIcon from '@material-ui/core/SvgIcon'\nimport * as MuiIcons from '@material-ui/icons'\n\nexport const aiidaBlue = '#84D3DB'\nexport const aiidaGreen = '#A0D58A'\nexport const aiidaOrange = '#FFB27C'\n\nexport function AiiDAIcon200({\n  width,\n  height,\n  arcColor\n}: {\n  width: number\n  height: number\n  arcColor: string\n}): JSX.Element {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 -21 200 221\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      preserveAspectRatio=\"xMidYMid meet\"\n    >\n      <g>\n        <title>background</title>\n        <rect\n          fill=\"none\"\n          id=\"canvas_background\"\n          height=\"402\"\n          width=\"582\"\n          y=\"-1\"\n          x=\"-1\"\n        />\n      </g>\n      <g>\n        <title>Dashboard Arc</title>\n        <g\n          id=\"svg_7\"\n          fill={arcColor}\n          opacity=\"0.8\"\n          transform=\"rotate(180) translate(-170,32) scale(0.29, -0.28)\"\n        >\n          <path\n            d=\"M492.719,207.208c-0.108-0.575-0.27-1.146-0.492-1.702c-0.223-0.558-0.507-1.069-0.837-1.537\n\t\t\t\tc-12.787-30.616-31.365-58.265-54.348-81.565c-0.324-0.482-0.701-0.944-1.135-1.378s-0.896-0.811-1.378-1.135\n\t\t\t\tC388.233,74.226,324.764,45.933,255,45.933c-33.418,0-65.389,6.5-94.725,18.281c-0.575,0.108-1.146,0.27-1.701,0.492\n\t\t\t\tc-0.557,0.223-1.069,0.507-1.537,0.837c-30.616,12.787-58.265,31.365-81.565,54.348c-0.482,0.324-0.944,0.701-1.378,1.135\n\t\t\t\ts-0.812,0.896-1.135,1.378C27.293,168.7-1,232.169-1,301.933c0,58.027,18.773,113.493,55.467,158.72\n\t\t\t\tc1.707,2.56,4.267,3.413,6.827,3.413h387.413c2.56,0,5.12-0.853,6.827-3.413C492.227,415.427,511,359.96,511,301.933\n\t\t\t\tC511,268.515,504.5,236.544,492.719,207.208z M445.293,447H65.56c-11.539-14.88-21.122-30.844-28.695-47.616l23.575-9.557\n\t\t\t\tc4.267-1.707,5.973-6.827,4.267-11.093c-1.707-4.267-6.827-5.973-11.093-4.267l-23.11,9.369\n\t\t\t\tc-8.574-23.342-13.394-48.021-14.278-73.369H75.8c5.12,0,8.533-3.413,8.533-8.533S80.92,293.4,75.8,293.4H16.237\n\t\t\t\tc0.957-26.907,6.416-52.715,15.648-76.694L55.32,226.84c0.853,0.853,2.56,0.853,3.413,0.853c3.413,0,5.973-1.707,7.68-5.12\n\t\t\t\tc1.707-4.267,0-9.387-4.267-11.093l-23.672-10.237c10.699-22.831,24.906-43.721,41.922-61.967l17.59,17.59\n\t\t\t\tc1.707,1.707,3.413,2.56,5.973,2.56s4.267-0.853,5.973-2.56c3.413-3.413,3.413-8.533,0-11.947l-17.59-17.59\n\t\t\t\tc19.117-17.828,41.131-32.581,65.244-43.438l9.52,23.482c0.853,3.413,4.267,5.12,7.68,5.12c0.853,0,1.707,0,3.413-0.853\n\t\t\t\tc4.267-1.707,5.973-6.827,4.267-11.093l-9.329-23.012c23.021-8.463,47.679-13.452,73.329-14.364v59.563\n\t\t\t\tc0,5.12,3.413,8.533,8.533,8.533s8.533-3.413,8.533-8.533V63.17c26.907,0.957,52.715,6.416,76.694,15.648l-10.134,23.436\n\t\t\t\tc-1.707,4.267,0,9.387,4.267,11.093c0.853,0.853,2.56,0.853,3.413,0.853c3.413,0,6.827-2.56,7.68-5.12l10.237-23.672\n\t\t\t\tc22.831,10.699,43.721,24.906,61.967,41.922l-17.59,17.59c-3.413,3.413-3.413,8.533,0,11.947c1.707,1.707,3.413,2.56,5.973,2.56\n\t\t\t\tc1.707,0,4.267-0.853,5.973-2.56l17.59-17.59c17.828,19.117,32.581,41.131,43.438,65.244l-23.482,9.52\n\t\t\t\tc-4.267,1.707-5.973,6.827-4.267,11.093c0.853,3.413,4.267,5.12,7.68,5.12c0.853,0,1.707-0.853,3.413-0.853l23.013-9.329\n\t\t\t\tc8.463,23.021,13.452,47.679,14.364,73.329H434.2c-5.12,0-8.533,3.413-8.533,8.533s3.413,8.533,8.533,8.533h59.575\n\t\t\t\tc-0.927,26.593-6.172,52.45-15.418,76.799l-23.677-10.239c-4.267-1.707-9.387,0-11.093,4.267c-1.707,4.267,0,9.387,4.267,11.093\n\t\t\t\tl23.981,10.37C464.644,418.298,455.773,433.121,445.293,447z\"\n          />\n        </g>\n      </g>\n      <g>\n        <title>Main Icon</title>\n        <g id=\"svg_1\" fill=\"#000000\" transform=\"translate(0, 200) scale(0.1, -0.1)\">\n          <path\n            fill=\"#84D3DB\"\n            id=\"svg_2\"\n            d=\"m1369.99536,994.72168c-75,-21.00024 -101,-34.00024 -161,-80.00024c-68,-51.99976 -135,-150.99976 -153,-222.99976l-6,-28l150,0l150,0l0,60c0,33 4,60 9,60c5,0 43,-20 85,-45c42,-24 106,-61 143,-81c81,-45.00006 143,-83.00006 143,-88.00006c0,-3 -24,-18 -52,-33c-71,-39 -116,-65 -225,-129c-51,-30 -94,-54 -97,-54c-3,0 -6,29 -6,65l0,65l-151,0c-166,0 -152,6 -133,-61c14,-50 82,-144.99988 135,-188.99988c87,-72 151,-94 279,-95c88,0 115,4 163,23c119,48 224,165.99988 261,290.99988c30,102 13,250.00006 -36,323.00006c-10,14 -18,31 -18,36c0,16 -127,129.99976 -168,150.99976c-49,24 -158,51.00024 -208,50.00024c-21,0 -68,-8 -104,-18z\"\n          />\n        </g>\n        <g\n          id=\"svg_4\"\n          fill=\"#000000\"\n          transform=\"rotate(-120, 96.4437, 55.2508) translate(0, 200) scale(0.1, -0.1)\"\n        >\n          <path\n            fill=\"#FFB27C\"\n            id=\"svg_3\"\n            d=\"m849.99731,1866.47681c-75,-21 -101,-34 -161,-80c-68,-52 -135,-150.99988 -153,-222.99988l-6,-28l150,0l150,0l0,60c0,33 4,59.99988 9,59.99988c5,0 43,-19.99988 85,-44.99988c42,-24 105.99805,-61 142.99805,-81c81,-45 143,-83 143,-88c0,-3 -24,-18 -52,-33c-71,-39 -116,-65 -224.99805,-129c-51,-30 -94,-54 -97,-54c-3,0 -6,29 -6,65l0,65l-151,0c-166,0 -152,6 -133,-61c14,-50 82,-145 135,-189c87,-72 151,-93.99939 279,-94.99939c87.99805,0 114.99805,4 162.99805,22.99939c119,48 224,166 261,291c30,102 13,250 -36,322.99988c-10,14 -18,31 -18,36c0,16 -127,130 -168,151c-49,24 -158,51 -207.99805,50c-21,0 -68,-8 -104,-18z\"\n          />\n        </g>\n        <g\n          id=\"svg_6\"\n          fill=\"#000000\"\n          transform=\"rotate(120, 50.1463, 142.426) translate(0, 200) scale(0.1, -0.1)\"\n        >\n          <path\n            fill=\"#A0D58A\"\n            id=\"svg_5\"\n            d=\"m387.00516,994.72168c-75,-21.00024 -101,-34.00024 -161,-80.00024c-68,-51.99976 -135,-150.99976 -153,-222.99976l-6,-28l150,0l150,0l0,60c0,33 4,60 9,60c5,0 43,-20 85,-45c42,-24 105.99997,-61 142.99997,-81c81,-45.00006 143,-83.00006 143,-88.00006c0,-3 -24,-18 -52,-33c-71,-39 -116,-65 -224.99997,-129c-51,-30 -94,-54 -97,-54c-3,0 -6,29 -6,65l0,65l-151,0c-166,0 -152,6 -133,-61c14,-50 82,-144.99988 135,-188.99988c87,-72 151,-94 279,-95c87.99997,0 114.99997,4 162.99997,23c119,48 224,165.99988 261,290.99988c30,102 13,250.00006 -36,323.00006c-10,14 -18,31 -18,36c0,16 -127,129.99976 -168,150.99976c-49,24 -158,51.00024 -207.99997,50.00024c-21,0 -68,-8 -104,-18z\"\n          />\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nAiiDAIcon200.defaultProps = {\n  width: 200,\n  height: 200,\n  arcColor: 'black'\n}\n\n// TODO better value type, custom icons (https://primer.style/octicons/packages/react)\nexport const ElementIconMap: { [key: string]: JSX.Element } = {\n  default: <MuiIcons.DeviceUnknown />,\n  folder: <MuiIcons.Inbox />,\n  'data.array': <MuiIcons.GridOn />,\n  'data.bool': <MuiIcons.CheckCircle />,\n  'data.cif': <MuiIcons.ScatterPlot />,\n  'data.code': <MuiIcons.Code />,\n  'data.dict': <MuiIcons.ViewList />,\n  'data.float': <MuiIcons.AllInclusive />,\n  'data.folder': <MuiIcons.Inbox />,\n  'data.int': <MuiIcons.LooksOne />,\n  'data.list': <MuiIcons.List />,\n  'data.numeric': <MuiIcons.PlusOne />,\n  'data.orbital': <MuiIcons.BlurOn />,\n  'data.remote': <MuiIcons.OpenInNew />,\n  'data.str': <MuiIcons.FormatColorText />,\n  'data.structure': <MuiIcons.Grain />,\n  'process.calculation': <RocketIcon />,\n  'process.process': <RocketIcon />,\n  'process.workflow': <GitBranchIcon /> // <MuiIcons.Share />,\n}\n\nexport function RocketIcon(): JSX.Element {\n  return (\n    <SvgIcon>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M20.322.75a10.75 10.75 0 00-7.373 2.926l-1.304 1.23A23.743 23.743 0 0010.103 6.5H5.066a1.75 1.75 0 00-1.5.85l-2.71 4.514a.75.75 0 00.49 1.12l4.571.963c.039.049.082.096.129.14L8.04 15.96l1.872 1.994c.044.047.091.09.14.129l.963 4.572a.75.75 0 001.12.488l4.514-2.709a1.75 1.75 0 00.85-1.5v-5.038a23.741 23.741 0 001.596-1.542l1.228-1.304a10.75 10.75 0 002.925-7.374V2.499A1.75 1.75 0 0021.498.75h-1.177zM16 15.112c-.333.248-.672.487-1.018.718l-3.393 2.262.678 3.223 3.612-2.167a.25.25 0 00.121-.214v-3.822zm-10.092-2.7L8.17 9.017c.23-.346.47-.685.717-1.017H5.066a.25.25 0 00-.214.121l-2.167 3.612 3.223.679zm8.07-7.644a9.25 9.25 0 016.344-2.518h1.177a.25.25 0 01.25.25v1.176a9.25 9.25 0 01-2.517 6.346l-1.228 1.303a22.248 22.248 0 01-3.854 3.257l-3.288 2.192-1.743-1.858a.764.764 0 00-.034-.034l-1.859-1.744 2.193-3.29a22.248 22.248 0 013.255-3.851l1.304-1.23zM17.5 8a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm-11 13c.9-.9.9-2.6 0-3.5-.9-.9-2.6-.9-3.5 0-1.209 1.209-1.445 3.901-1.49 4.743a.232.232 0 00.247.247c.842-.045 3.534-.281 4.743-1.49z\"\n      ></path>\n    </SvgIcon>\n  )\n}\n\nexport function GitBranchIcon(): JSX.Element {\n  return (\n    <SvgIcon>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.75 21a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM2.5 19.25a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zM5.75 6.5a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM2.5 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zM18.25 6.5a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM15 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0z\"\n      ></path>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M5.75 16.75A.75.75 0 006.5 16V8A.75.75 0 005 8v8c0 .414.336.75.75.75z\"\n      ></path>\n      <path\n        fillRule=\"evenodd\"\n        d=\"M17.5 8.75v-1H19v1a3.75 3.75 0 01-3.75 3.75h-7a1.75 1.75 0 00-1.75 1.75H5A3.25 3.25 0 018.25 11h7a2.25 2.25 0 002.25-2.25z\"\n      ></path>\n    </SvgIcon>\n  )\n}\n\nexport function OptimadeIcon({\n  width = 180,\n  height = 180,\n  singleColor\n}: {\n  width?: number\n  height?: number\n  singleColor?: string\n}): JSX.Element {\n  return (\n    <SvgIcon>\n      <svg\n        version=\"1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 400 400\"\n        width={width}\n        height={height}\n      >\n        <g\n        // transform=\"matrix(3.5294118,0,0,3.5294118,-5.2941176,-5.2938861)\"\n        >\n          <line\n            y2=\"7.9474411\"\n            x2=\"38\"\n            y1=\"14.5\"\n            x1=\"27\"\n            style={{\n              stroke: singleColor ? singleColor : '#9ed700',\n              strokeWidth: 1.14999998\n            }}\n          />\n          <line\n            y2=\"46.052559\"\n            x2=\"38\"\n            y1=\"33.25\"\n            x1=\"37.825317\"\n            style={{\n              stroke: singleColor ? singleColor : '#00acd9',\n              strokeWidth: 1.14999998\n            }}\n          />\n          <line\n            y2=\"27\"\n            x2=\"5\"\n            y1=\"33.25\"\n            x1=\"16.174683\"\n            style={{\n              stroke: singleColor ? singleColor : '#7a2dd0',\n              strokeWidth: 1.14999998\n            }}\n          />\n          <line\n            y2=\"46.052559\"\n            x2=\"38\"\n            y1=\"27\"\n            x1=\"49\"\n            style={{\n              stroke: singleColor ? singleColor : '#00acd9',\n              strokeWidth: 1.14999998\n            }}\n          />\n          <line\n            y2=\"46.052559\"\n            x2=\"16\"\n            y1=\"46.052559\"\n            x1=\"38\"\n            style={{ stroke: singleColor ? singleColor : '#e8e8e8', strokeWidth: 2 }}\n          />\n          <line\n            y2=\"27\"\n            x2=\"5\"\n            y1=\"46.052559\"\n            x1=\"16\"\n            style={{\n              stroke: singleColor ? singleColor : '#7a2dd0',\n              strokeWidth: 1.14999998\n            }}\n          />\n          <line\n            y2=\"7.9474411\"\n            x2=\"16\"\n            y1=\"27\"\n            x1=\"5\"\n            style={{ stroke: singleColor ? singleColor : '#e8e8e8', strokeWidth: 2 }}\n          />\n          <line\n            y2=\"7.9474411\"\n            x2=\"38\"\n            y1=\"7.9474411\"\n            x1=\"16\"\n            style={{\n              stroke: singleColor ? singleColor : '#9ed700',\n              strokeWidth: 1.14999998\n            }}\n          />\n          <line\n            y2=\"27\"\n            x2=\"49\"\n            y1=\"7.9474411\"\n            x1=\"38\"\n            style={{ stroke: singleColor ? singleColor : '#e8e8e8', strokeWidth: 2 }}\n          />\n          <circle\n            r=\"3.5\"\n            cy=\"27\"\n            cx=\"49\"\n            style={{ fill: singleColor ? singleColor : '#00acd9' }}\n          />\n          <circle\n            r=\"3.5\"\n            cy=\"46.052559\"\n            cx=\"38\"\n            style={{ fill: singleColor ? singleColor : '#00acd9' }}\n          />\n          <circle\n            id=\"circle367\"\n            r=\"3.5\"\n            cy=\"46.052559\"\n            cx=\"16\"\n            style={{ fill: singleColor ? singleColor : '#7a2dd0' }}\n          />\n          <circle\n            r=\"3.5\"\n            cy=\"27\"\n            cx=\"5\"\n            style={{ fill: singleColor ? singleColor : '#7a2dd0' }}\n          />\n          <circle\n            r=\"3.5\"\n            cy=\"7.9474411\"\n            cx=\"16\"\n            style={{ fill: singleColor ? singleColor : '#9ed700' }}\n          />\n          <circle\n            r=\"3.5\"\n            cy=\"7.9474411\"\n            cx=\"38\"\n            style={{ fill: singleColor ? singleColor : '#9ed700' }}\n          />\n          <line\n            y2=\"33.25\"\n            x2=\"16.174683\"\n            y1=\"39.5\"\n            x1=\"27\"\n            style={{ stroke: singleColor ? singleColor : '#ff414d', strokeWidth: 1 }}\n          />\n          <line\n            y2=\"20.75\"\n            x2=\"16.174683\"\n            y1=\"33.25\"\n            x1=\"16.174683\"\n            style={{ stroke: singleColor ? singleColor : '#ff414d', strokeWidth: 1 }}\n          />\n          <line\n            y2=\"14.5\"\n            x2=\"27\"\n            y1=\"20.75\"\n            x1=\"16.174683\"\n            style={{ stroke: singleColor ? singleColor : '#ff414d', strokeWidth: 1 }}\n          />\n          <line\n            y2=\"20.75\"\n            x2=\"37.825317\"\n            y1=\"14.5\"\n            x1=\"27\"\n            style={{ stroke: singleColor ? singleColor : '#ff414d', strokeWidth: 1 }}\n          />\n          <line\n            y2=\"33.25\"\n            x2=\"37.825317\"\n            y1=\"20.75\"\n            x1=\"37.825317\"\n            style={{ stroke: singleColor ? singleColor : '#ff414d', strokeWidth: 1 }}\n          />\n          <line\n            y2=\"39.5\"\n            x2=\"27\"\n            y1=\"33.25\"\n            x1=\"37.825317\"\n            style={{ stroke: singleColor ? singleColor : '#ff414d', strokeWidth: 1 }}\n          />\n          <circle\n            r=\"2.5\"\n            cy=\"39.5\"\n            cx=\"27\"\n            style={{ fill: singleColor ? singleColor : '#ff414d' }}\n          />\n          <circle\n            r=\"2.5\"\n            cy=\"33.25\"\n            cx=\"16.174683\"\n            style={{ fill: singleColor ? singleColor : '#ff414d' }}\n          />\n          <circle\n            r=\"2.5\"\n            cy=\"20.75\"\n            cx=\"16.174683\"\n            style={{ fill: singleColor ? singleColor : '#ff414d' }}\n          />\n          <circle\n            r=\"2.5\"\n            cy=\"14.5\"\n            cx=\"27\"\n            style={{ fill: singleColor ? singleColor : '#ff414d' }}\n          />\n          <circle\n            r=\"2.5\"\n            cy=\"20.75\"\n            cx=\"37.825317\"\n            style={{ fill: singleColor ? singleColor : '#ff414d' }}\n          />\n          <circle\n            r=\"2.5\"\n            cy=\"33.25\"\n            cx=\"37.825317\"\n            style={{ fill: singleColor ? singleColor : '#ff414d' }}\n          />\n        </g>\n      </svg>\n    </SvgIcon>\n  )\n}\n\n// \"#61DAFB\"\nexport function ReactIcon(): JSX.Element {\n  return (\n    <SvgIcon>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"48\"\n        height=\"46\"\n        viewBox=\"6 2.6 24 24\"\n        version=\"1.1\"\n      >\n        <g id=\"surface1\" fill=\"black\">\n          <path\n            // style=\" stroke:none;fill-rule:nonzero;fill:rgb(38.039216%,85.490196%,98.431373%);fill-opacity:1;\"\n            d=\"M 18.988281 8.46875 C 18.988281 7.539062 17.832031 6.660156 16.050781 6.113281 C 16.460938 4.296875 16.28125 2.851562 15.476562 2.390625 C 15.292969 2.28125 15.074219 2.230469 14.839844 2.230469 L 14.839844 2.867188 C 14.96875 2.867188 15.074219 2.894531 15.164062 2.941406 C 15.550781 3.164062 15.71875 4.011719 15.589844 5.101562 C 15.558594 5.371094 15.503906 5.652344 15.441406 5.941406 C 14.882812 5.804688 14.273438 5.699219 13.632812 5.632812 C 13.25 5.101562 12.851562 4.625 12.449219 4.203125 C 13.378906 3.339844 14.25 2.863281 14.84375 2.863281 L 14.84375 2.226562 C 14.058594 2.226562 13.03125 2.789062 11.996094 3.757812 C 10.957031 2.792969 9.933594 2.238281 9.148438 2.238281 L 9.148438 2.875 C 9.738281 2.875 10.613281 3.347656 11.542969 4.207031 C 11.144531 4.625 10.746094 5.101562 10.367188 5.632812 C 9.722656 5.699219 9.113281 5.804688 8.554688 5.945312 C 8.488281 5.660156 8.441406 5.382812 8.40625 5.117188 C 8.273438 4.027344 8.4375 3.179688 8.820312 2.953125 C 8.90625 2.902344 9.019531 2.878906 9.148438 2.878906 L 9.148438 2.242188 C 8.910156 2.242188 8.695312 2.292969 8.503906 2.402344 C 7.707031 2.863281 7.527344 4.304688 7.9375 6.117188 C 6.167969 6.664062 5.011719 7.542969 5.011719 8.46875 C 5.011719 9.394531 6.171875 10.273438 7.949219 10.820312 C 7.539062 12.636719 7.722656 14.082031 8.527344 14.542969 C 8.710938 14.652344 8.925781 14.703125 9.167969 14.703125 C 9.949219 14.703125 10.976562 14.144531 12.011719 13.171875 C 13.050781 14.136719 14.074219 14.691406 14.859375 14.691406 C 15.097656 14.691406 15.316406 14.640625 15.503906 14.53125 C 16.304688 14.070312 16.484375 12.628906 16.070312 10.816406 C 17.835938 10.273438 18.988281 9.390625 18.988281 8.46875 Z M 15.28125 6.5625 C 15.175781 6.929688 15.042969 7.3125 14.894531 7.691406 C 14.777344 7.460938 14.65625 7.234375 14.523438 7.003906 C 14.390625 6.777344 14.253906 6.554688 14.113281 6.335938 C 14.515625 6.398438 14.90625 6.472656 15.28125 6.5625 Z M 13.976562 9.605469 C 13.753906 9.988281 13.527344 10.355469 13.289062 10.695312 C 12.863281 10.730469 12.433594 10.75 12 10.75 C 11.570312 10.75 11.140625 10.730469 10.71875 10.699219 C 10.484375 10.359375 10.253906 9.996094 10.03125 9.613281 C 9.8125 9.238281 9.617188 8.859375 9.4375 8.476562 C 9.613281 8.09375 9.8125 7.710938 10.027344 7.335938 C 10.25 6.949219 10.476562 6.585938 10.714844 6.246094 C 11.136719 6.207031 11.570312 6.1875 12 6.1875 C 12.429688 6.1875 12.863281 6.207031 13.285156 6.242188 C 13.519531 6.582031 13.75 6.945312 13.972656 7.328125 C 14.1875 7.703125 14.386719 8.082031 14.566406 8.464844 C 14.386719 8.847656 14.1875 9.230469 13.976562 9.605469 Z M 14.894531 9.234375 C 15.050781 9.613281 15.179688 9.996094 15.289062 10.367188 C 14.914062 10.460938 14.523438 10.539062 14.117188 10.597656 C 14.253906 10.378906 14.394531 10.152344 14.527344 9.921875 C 14.65625 9.691406 14.777344 9.460938 14.894531 9.234375 Z M 12.007812 12.28125 C 11.742188 12.003906 11.476562 11.699219 11.214844 11.367188 C 11.472656 11.378906 11.734375 11.386719 12 11.386719 C 12.265625 11.386719 12.53125 11.378906 12.789062 11.367188 C 12.535156 11.699219 12.269531 12.003906 12.007812 12.28125 Z M 9.886719 10.597656 C 9.484375 10.539062 9.09375 10.464844 8.71875 10.371094 C 8.824219 10.003906 8.957031 9.625 9.105469 9.242188 C 9.222656 9.472656 9.34375 9.699219 9.476562 9.929688 C 9.609375 10.15625 9.746094 10.378906 9.886719 10.597656 Z M 11.992188 4.65625 C 12.257812 4.929688 12.523438 5.234375 12.785156 5.570312 C 12.527344 5.558594 12.265625 5.546875 12 5.546875 C 11.734375 5.546875 11.46875 5.554688 11.210938 5.570312 C 11.464844 5.234375 11.730469 4.929688 11.992188 4.65625 Z M 9.882812 6.335938 C 9.746094 6.558594 9.605469 6.78125 9.472656 7.011719 C 9.34375 7.242188 9.222656 7.46875 9.105469 7.699219 C 8.949219 7.316406 8.820312 6.933594 8.710938 6.5625 C 9.085938 6.472656 9.476562 6.398438 9.882812 6.335938 Z M 7.304688 9.914062 C 6.296875 9.480469 5.644531 8.914062 5.644531 8.46875 C 5.644531 8.019531 6.296875 7.449219 7.304688 7.023438 C 7.550781 6.917969 7.820312 6.824219 8.09375 6.734375 C 8.257812 7.292969 8.472656 7.875 8.738281 8.472656 C 8.472656 9.066406 8.261719 9.648438 8.105469 10.203125 C 7.820312 10.113281 7.554688 10.019531 7.304688 9.914062 Z M 8.839844 13.992188 C 8.453125 13.769531 8.285156 12.921875 8.414062 11.832031 C 8.445312 11.5625 8.496094 11.28125 8.558594 10.992188 C 9.117188 11.128906 9.726562 11.234375 10.367188 11.304688 C 10.753906 11.832031 11.152344 12.3125 11.554688 12.730469 C 10.625 13.597656 9.753906 14.070312 9.160156 14.070312 C 9.03125 14.066406 8.925781 14.042969 8.839844 13.992188 Z M 15.597656 11.816406 C 15.730469 12.90625 15.566406 13.757812 15.179688 13.980469 C 15.09375 14.03125 14.984375 14.054688 14.851562 14.054688 C 14.261719 14.054688 13.390625 13.585938 12.460938 12.726562 C 12.859375 12.304688 13.257812 11.828125 13.636719 11.300781 C 14.28125 11.230469 14.890625 11.125 15.449219 10.984375 C 15.515625 11.273438 15.566406 11.550781 15.597656 11.816406 Z M 16.695312 9.914062 C 16.449219 10.019531 16.179688 10.113281 15.90625 10.199219 C 15.742188 9.640625 15.527344 9.058594 15.261719 8.460938 C 15.527344 7.867188 15.738281 7.289062 15.894531 6.730469 C 16.179688 6.820312 16.445312 6.917969 16.695312 7.023438 C 17.703125 7.453125 18.355469 8.019531 18.355469 8.46875 C 18.355469 8.914062 17.703125 9.484375 16.695312 9.914062 Z M 9.148438 2.238281 Z M 9.148438 2.238281 \"\n          />\n          <path\n            // style=\" stroke:none;fill-rule:nonzero;fill:rgb(38.039216%,85.490196%,98.431373%);fill-opacity:1;\"\n            d=\"M 13.300781 8.46875 C 13.300781 9.1875 12.71875 9.773438 12 9.773438 C 11.28125 9.773438 10.695312 9.1875 10.695312 8.46875 C 10.695312 7.746094 11.28125 7.160156 12 7.160156 C 12.71875 7.160156 13.300781 7.746094 13.300781 8.46875 Z M 13.300781 8.46875 \"\n          />\n        </g>\n      </svg>\n    </SvgIcon>\n  )\n}\n","export const PageKeys = {\n  home: '/',\n  unknown: '/404',\n  nodeExplorer: '/nodes',\n  groups: '/groups',\n  provenanceGraph: '/graph',\n  structures: '/structures'\n}\n\nexport const LocalStorageKeys = {\n  restUrlBase: 'react-aiida-rest-url',\n  aiidaUUIDbookmarks: 'aiida-uuid-bookmarks',\n  aiidaNodeXTypePrefix: 'aiida-node-explorer-type-prefix',\n  aiidaNodeXFieldUUID: 'aiida-node-explorer-field-uuid',\n  aiidaNodeXExpanded: 'aiida-node-explorer-expanded',\n  aiidaProvenanceRootUUID: 'aiida-provenence-graph-root-uuid',\n  aiidaProvenanceDagMode: 'aiida-provenence-graph-dag-mode',\n  aiidaProvenanceDagLevel: 'aiida-provenence-graph-dag-level-dist',\n  aiidaStructureUUID: 'aiida-structure-uuid',\n  optimadeStructureProvider: 'optimade-structure-provider',\n  optimadeStructureId: 'optimade-structure-id'\n}\n","import React, { createContext, useContext, useState } from 'react'\nimport { ReactElementLike } from 'prop-types'\nimport {\n  Button,\n  ButtonProps,\n  Link,\n  LinkProps,\n  Snackbar,\n  SnackbarProps\n} from '@material-ui/core'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\n/**\n * A wrapper for useState, which syncs the state to local storage,\n * so that it persists through a page change/refresh\n */\nexport function useLocalStorage<T>(\n  key: string,\n  initialValue: T\n): readonly [T, (value: T | ((val: T) => T)) => void] {\n  // see https://usehooks.com/useLocalStorage/\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key)\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error)\n      return initialValue\n    }\n  })\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value\n      // Save state\n      setStoredValue(valueToStore)\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore))\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [storedValue, setValue] as const\n}\n\n// Adapted from https://github.com/TeamWertarbyte/material-ui-snackbar-provider\n\ntype snackbarMessenger = (\n  message: string | ReactElementLike,\n  action?: string,\n  handleAction?: React.MouseEventHandler<unknown>\n) => void\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nfunction nullSnackbarMessenger(\n  message: string | ReactElementLike,\n  action?: string,\n  handleAction?: React.MouseEventHandler<unknown>\n) {\n  console.warn('no SnackbarProvider set')\n}\n/* eslint-disable no-unused-vars */\n\nexport const SnackbarContext = createContext(nullSnackbarMessenger as snackbarMessenger)\n\ninterface IDefaultSnackbarProps {\n  message?: string | ReactElementLike\n  action?: React.ReactNode\n  ButtonProps: ButtonProps\n  SnackbarProps: SnackbarProps\n}\n\nfunction DefaultSnackbar(props: IDefaultSnackbarProps): JSX.Element {\n  const child = typeof props.message !== 'string' ? props.message : undefined\n  return (\n    <Snackbar\n      {...props.SnackbarProps}\n      message={typeof props.message === 'string' ? props.message || '' : undefined}\n      action={\n        props.action != null && (\n          <Button color=\"secondary\" size=\"small\" {...props.ButtonProps}>\n            {props.action}\n          </Button>\n        )\n      }\n    >\n      {child}\n    </Snackbar>\n  )\n}\n\ninterface ISnackbarProviderProps {\n  children?: React.ReactNode\n  SnackbarComponent: (props: IDefaultSnackbarProps) => JSX.Element\n  SnackbarProps?: SnackbarProps\n  ButtonProps?: ButtonProps\n}\n\n/** A provider to show only a single Snackbar at a time\n *\n * Use together with the useSnackbar hook\n */\nexport function SnackbarProvider(props: ISnackbarProviderProps): JSX.Element {\n  const [state, setState] = useState({ open: false } as {\n    open: boolean\n    message?: string | ReactElementLike\n    action?: string\n    handleAction?: React.MouseEventHandler<unknown>\n  })\n  const showMessage = (\n    message: string | ReactElementLike,\n    action?: string,\n    handleAction?: React.MouseEventHandler<unknown>\n  ): void => {\n    setState({ open: true, message, action, handleAction })\n  }\n  const handleClose = (): void => {\n    setState({ open: false })\n  }\n  const handleActionClick = (event: React.MouseEvent<unknown>): void => {\n    handleClose()\n    if (state.handleAction) {\n      state.handleAction(event)\n    }\n  }\n\n  return (\n    <>\n      <SnackbarContext.Provider value={showMessage}>\n        {props.children}\n      </SnackbarContext.Provider>\n      <props.SnackbarComponent\n        message={state.message}\n        action={state.action}\n        ButtonProps={{\n          ...props.ButtonProps,\n          onClick: handleActionClick\n        }}\n        SnackbarProps={{\n          ...props.SnackbarProps,\n          open: state.open,\n          onClose: handleClose\n        }}\n      />\n    </>\n  )\n}\n\nSnackbarProvider.defaultProps = {\n  SnackbarComponent: DefaultSnackbar\n}\n\n/** Return a snackbar messenger\n *\n * Either the one set by SnackbarProvider or a \"null\" messenger,\n * that will log a warning that no provider has been set\n */\nexport function useSnackbar(): snackbarMessenger {\n  return useContext(SnackbarContext)\n}\n\n// TODO better colors for dark mode?\n\nexport function LinkInternal(props: RouterLinkProps): JSX.Element {\n  return <RouterLink {...props}>{props.children}</RouterLink>\n}\n\nexport function LinkExternal(props: LinkProps): JSX.Element {\n  return (\n    <Link target=\"_blank\" rel=\"noopener\" {...props}>\n      {props.children}\n    </Link>\n  )\n}\n","import React from 'react'\n\nimport {\n  Avatar,\n  Box,\n  Grid,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Paper,\n  Typography,\n  useMediaQuery\n} from '@material-ui/core'\n// import { blue } from '@material-ui/core/colors'\nimport { useTheme } from '@material-ui/core/styles'\nimport * as MuiIcons from '@material-ui/icons'\nimport Alert from '@material-ui/lab/Alert'\n\nimport SyntaxHighlighter from 'react-syntax-highlighter'\n\nimport { useStyles } from './styles'\nimport { LinkExternal } from './hooks'\nimport {\n  AiiDAIcon200,\n  aiidaBlue,\n  aiidaGreen,\n  aiidaOrange,\n  OptimadeIcon\n  // ReactIcon\n} from './icons'\n\nexport function PageHome(): JSX.Element {\n  const classes = useStyles()\n  return (\n    <Grid container spacing={2} className={classes.mainGrid}>\n      <Grid item xs={12} alignItems=\"center\">\n        <Header />\n      </Grid>\n      <Grid item xs={12}>\n        <Features />\n      </Grid>\n      <Grid item xs={12} sm={12} md={12}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <GettingStartedBox />\n        </Paper>\n      </Grid>\n      <Grid item xs={12} sm={12} md={12}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <DetailedBox />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nfunction Header(): JSX.Element {\n  const classes = useStyles()\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.down('xs'))\n  return (\n    <>\n      <Grid container alignItems=\"center\" spacing={matches ? 1 : 2}>\n        <Grid item xs={12} sm={4}>\n          <Box className={classes.landingIcon}>\n            <AiiDAIcon200 arcColor={theme.palette.text.primary} />\n          </Box>\n        </Grid>\n        <Grid item xs={12} sm={8}>\n          <Typography\n            variant={matches ? 'h6' : 'h4'}\n            align={matches ? 'center' : 'left'}\n          >\n            A web-based UI for interfacing with AiiDA.\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nconst featuresList = [\n  {\n    name: 'Quick Setup',\n    description: 'Start AiiDA REST, connect and go',\n    icon: <MuiIcons.FlashOn />,\n    color: aiidaOrange\n  },\n  {\n    name: 'Access anywhere',\n    description: 'Access AiiDA from any cloud/HPC service',\n    icon: <MuiIcons.CloudOutlined />,\n    color: aiidaGreen\n  },\n  {\n    name: 'Cached queries',\n    description: 'Fast access to data as you work',\n    icon: <MuiIcons.Cached />,\n    color: aiidaBlue\n  },\n  {\n    name: 'Persisted inputs',\n    description: 'Key fields saved over page changes and multiple sessions',\n    icon: <MuiIcons.Bookmarks />,\n    color: aiidaOrange\n  },\n  {\n    name: 'Optimade Integration',\n    description: 'For structure searching and visualisation',\n    icon: <OptimadeIcon width={200} height={200} singleColor=\"black\" />,\n    color: aiidaGreen\n  },\n  {\n    name: 'Mobile Friendly',\n    description: 'Responsive layout that adapts to any window size',\n    icon: <MuiIcons.MobileFriendly />,\n    color: aiidaBlue\n  },\n  {\n    name: 'Dark Mode',\n    description: 'Accessed in the menu bar.',\n    icon: <MuiIcons.Brightness4 />,\n    color: aiidaOrange\n  }\n  // {\n  //   name: 'Server-less App',\n  //   description: 'Means quick and inexpensive deployment',\n  //   icon: <ReactIcon />,\n  //   color: aiidaGreen\n  // }\n]\n\nfunction Features(): JSX.Element {\n  return (\n    <Grid container spacing={1} justify=\"center\">\n      {featuresList.map(value => (\n        <FeatureCard {...value} />\n      ))}\n    </Grid>\n  )\n}\n\nfunction FeatureCard({\n  icon,\n  name,\n  description,\n  color\n}: {\n  icon: JSX.Element\n  name: string\n  description: string\n  color: string\n}): JSX.Element {\n  const classes = useStyles()\n  const theme = useTheme()\n  const matches = useMediaQuery(theme.breakpoints.down('xs'))\n  return (\n    <Grid item xs={12} sm={6} md={4} lg={3}>\n      <Paper variant=\"outlined\" className={classes.featureCard}>\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar\n              alt={name}\n              style={{\n                color: theme.palette.getContrastText(color),\n                backgroundColor: color,\n                width: theme.spacing(matches ? 5 : 7),\n                height: theme.spacing(matches ? 5 : 7),\n                marginRight: theme.spacing(2)\n              }}\n            >\n              {icon}\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={name} secondary={matches ? undefined : description} />\n        </ListItem>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport function GettingStartedBox(): JSX.Element {\n  const classes = useStyles()\n  return (\n    <div>\n      <h2 id=\"getting-started\">Getting Started</h2>\n      <p>\n        To use this application, you simply need to be able to connect to a running\n        AiiDA REST API server.\n      </p>\n      <Alert variant=\"outlined\" severity=\"info\">\n        <p>\n          If you want to try out this app but don't have your own AiiDA profile, you can\n          use this demonstration server:{' '}\n          <LinkExternal href=\"https://15.188.110.176:5000/api/v4\">\n            https://15.188.110.176:5000/api/v4\n          </LinkExternal>\n        </p>\n        <p>\n          Although note currently you will first need to open this address in a separate\n          tab and accept the security certificate (under Advanced).\n        </p>\n      </Alert>\n      <p>\n        To start a server for your own profile, you must have aiida-core installed with\n        the REST dependencies:\n      </p>\n      <SyntaxHighlighter language=\"bash\">\n        {'$ pip install aiida-core[rest]~=1.6.3'}\n      </SyntaxHighlighter>\n      <p>Then you can start your REST server:</p>\n      <SyntaxHighlighter language=\"bash\">\n        {\n          '$ verdi -p myprofile restapi\\n * REST API running on http://127.0.0.1:5000/api/v4'\n        }\n      </SyntaxHighlighter>\n      <p>\n        Take this URL and paste it into the \"REST URL\" box at the top-right of this\n        page. If a connection is available, then you should see the icon turn to:{' '}\n        <MuiIcons.CheckCircle className={classes.InlineIcon} />\n      </p>\n      <p>Now try the tabs on the left of this page!</p>\n    </div>\n  )\n}\n\nexport function DetailedBox(): JSX.Element {\n  return (\n    <div>\n      <h2>Project Details</h2>\n      <p>\n        <b>Source repository:</b>{' '}\n        <LinkExternal href=\"https://github.com/chrisjsewell/react-aiida-app\">\n          https://github.com/chrisjsewell/react-aiida-app\n        </LinkExternal>\n      </p>\n      <h3>Project History</h3>\n      <p>\n        This project is a continuation of{' '}\n        <LinkExternal href=\"https://github.com/chrisjsewell/jlab_aiidatree\">\n          jlab_aiidatree\n        </LinkExternal>\n        , in which we built a working prototype for a JupyterLab extension to interact\n        with AiiDA.\n      </p>\n      <p>\n        During development of <code>jlab_aiidatree</code> it was noted that you can\n        embed <a href=\"https://reactjs.org/\">React components</a> inside of JupyterLab\n        (see{' '}\n        <LinkExternal href=\"https://jupyterlab.readthedocs.io/en/stable/extension/virtualdom.html\">\n          JupyterLab/React\n        </LinkExternal>\n        ).\n      </p>\n      <p>\n        The goal, therefore, is that we can develop this package as a standalone app\n        (which could also be utilised directly via a web server), but also use it as a\n        dependency to generate most of the JupyterLab extension, via React components.\n      </p>\n      <p>The benefit of also using th app within JupyterLab, is:</p>\n      <ol type=\"1\">\n        <li>\n          It provides a platform within which to run the app locally, without having to\n          host it directly\n        </li>\n        <li>\n          It allows us an alternate route to interface with AiiDA: via the “private”\n          REST API interface between the JupyterLab backend and frontend. Using this\n          REST API, will allow us easy access to parts of the AiiDA API that are yet to\n          be exposed in REST, whilst maintaining that formal protocol (enforcing\n          separation of concerns). We can then use this to essentially prototype\n          additions to the AiiDA REST API.\n        </li>\n        <li>\n          It provides the possible to integrate with other aspects of the Jupyter\n          framework (e.g. Notebooks)\n        </li>\n      </ol>\n      <p>\n        Alongside work on an{' '}\n        <LinkExternal href=\"https://github.com/aiidateam/AEP/pull/24\">\n          Extended REST API\n        </LinkExternal>\n        , it is hoped that this will offer not just ways to explore your profiles, but\n        also to actively interact them: creating/adding to groups, composing/running\n        workchains, etc.\n      </p>\n      <h3 id=\"about-react\">App Technologies</h3>\n      <p>\n        AiiDA Dashboard uses React, an industry leading library, for creating beautiful\n        and responsive UIs, maintained by Facebook and with users including Whatsapp,\n        Dropbox, Uber and Netflix. We also utilise other “best-practice” React\n        components:\n      </p>\n      <ul>\n        <li>\n          <LinkExternal href=\"https://material-ui.com\">Material-UI</LinkExternal>: A\n          React component library that implements Google’s{' '}\n          <LinkExternal href=\"https://material.io/design\">\n            Material Design guidelines\n          </LinkExternal>\n        </li>\n        <li>\n          <LinkExternal href=\"https://react-query.tanstack.com/\">\n            react-query\n          </LinkExternal>\n          : A React component for synchronizing server data (from AiiDA) with the UI.\n        </li>\n      </ul>\n      <p>\n        React itself is really user-friendly to get started with, even with only a small\n        familiarity with HTML and JavaScript, see{' '}\n        <LinkExternal href=\"https://reactjs.org/tutorial/tutorial.html\">\n          https://reactjs.org/tutorial/tutorial.html\n        </LinkExternal>\n        . Once learned, it is also incredibly intuitive to generate web elements with,\n        using the{' '}\n        <LinkExternal href=\"https://reactjs.org/docs/introducing-jsx.html\">\n          <code>.jsx</code> file format\n        </LinkExternal>\n        . For example a simple React component would look like:\n      </p>\n      <SyntaxHighlighter language=\"jsx\">\n        {`function MyComponent(props) {\n  return (\n    <div>\n      <h1>Hello, world!</h1>\n      <p>Here is a dynamic value: {props.value}</p>\n    </div>\n  )\n}`}\n      </SyntaxHighlighter>\n      <h3 id=\"this-app-vs-materials-cloud-explore\">\n        This app vs Materials Cloud Explore\n      </h3>\n      <p>\n        <b>Update:</b> Materials Cloud is in fact now also looking to move to React.\n      </p>\n      <p>\n        Note, initial features of this app are quite similar to{' '}\n        <LinkExternal href=\"https://www.materialscloud.org/explore/connect\">\n          https://www.materialscloud.org/explore/connect\n        </LinkExternal>\n        : using the AiiDA REST API as a backend for visualising its data. However, this\n        is built with{' '}\n        <LinkExternal href=\"https://angularjs.org/\">\n          https://angularjs.org/\n        </LinkExternal>{' '}\n        which, although also well used in industry, has two major drawbacks for our use\n        case:\n      </p>\n      <ol type=\"1\">\n        <li>You cannot integrate it with JupyterLab (see benefits above)</li>\n        <li>\n          It does not have the re-usable component infrastructure of React, which should\n          allow us to eventually build an extensible app with “pluggable” extensions.\n        </li>\n      </ol>\n      <p>\n        Materials Cloud is also more focussed on access to pre-existing data (stored in\n        their archive), whereas this application is focussed on interaction with\n        \"in-use\" databases.\n      </p>\n      <h3 id=\"this-app-vs-aiidalab\">This app vs AiiDALab</h3>\n      <p>\n        <LinkExternal href=\"https://www.materialscloud.org/work/aiidalab\">\n          AiiDALab\n        </LinkExternal>{' '}\n        uses the Jupyter Notebook server to build its frontend, via{' '}\n        <LinkExternal href=\"https://ipywidgets.readthedocs.io\">ipywidgets</LinkExternal>\n        , which dynamically generates the HTML/Javascript from python code cells, and\n        appmode/voila which executes the Notebook on page load, then converts the\n        notebook interface to look more like a web app (hiding code cells, etc). Note,\n        despite its name, it does not use JupyterLab per se.\n      </p>\n      <p>The benefits of this approach, is that:</p>\n      <ol type=\"1\">\n        <li>\n          You can, in theory, code everything in Python/Jupyter Notebooks, the same\n          language which aiida itself is written in (in practice some HTML/JavaScript is\n          required).\n        </li>\n        <li>You can interface directly with the AiiDA Python API</li>\n      </ol>\n      <p>The disadvantage though are:</p>\n      <ol type=\"1\">\n        <li>\n          AiiDALab is strongly coupled to an aiida python environment, making\n          deployments more complex and costly, compared to the free and unlimited\n          scaling of this apps deployment on Github Pages.\n        </li>\n        <li>\n          Because the notebooks must first be executed, then rendered, on every page\n          load, page load times are very poor, negatively impacting the user experience.\n        </li>\n        <li>\n          The user interface is restricted by the semantics/layout of the Notebook,\n          i.e. each app has to be a set of separate pages and in each page you have a\n          set of vertically sequential cells.\n        </li>\n        <li>\n          ipywidgets is a relatively niche/bespoke tool (by industry standard), meaning\n          limited user/developer support and existing packages, in comparison to the\n          massive React ecosystem of libraries and components.\n        </li>\n      </ol>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport {\n  Avatar,\n  Chip,\n  Collapse,\n  Divider,\n  IconButton,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Typography\n} from '@material-ui/core'\nimport { useTheme } from '@material-ui/core/styles'\nimport * as MuiIcons from '@material-ui/icons'\nimport { Alert } from '@material-ui/lab'\n\nimport copy from 'copy-to-clipboard'\n\nimport { LocalStorageKeys } from '../constants'\nimport { useSnackbar } from '../hooks'\nimport { ElementIconMap } from '../icons'\nimport { useStyles } from '../styles'\n\nexport interface IAiidaNodeListItemProps {\n  pk: number\n  uuid: string\n  mtime: string\n  node_type: string\n  process_type?: string\n  label: string\n  process?: {\n    label: string\n    state: 'created' | 'running' | 'waiting' | 'finished' | 'excepted' | 'killed'\n    exitStatus?: number\n  }\n  link?: {\n    direction: 'incoming' | 'outgoing'\n    type: string\n    label: string\n  }\n  indent: number\n  contextMenu: (props: IContextMenuNodeProps) => JSX.Element\n  child?: (props: { uuid: string; indent: number }) => JSX.Element\n}\n\n/** A list item for a single AiiDA Node (with prefetched data) */\nexport function AiidaNodeListItem(props: IAiidaNodeListItemProps): JSX.Element {\n  // setup style hooks\n  const theme = useTheme()\n  const classes = useStyles()\n\n  // setup context menu state\n  const [menuOpen, setmenuOpen] = useState(false)\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    setmenuOpen(true)\n    setAnchorEl(event.currentTarget)\n  }\n  const handleMenuClose = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    setAnchorEl(null)\n    setmenuOpen(false)\n  }\n\n  // setup child state\n  const [childOpen, setchildOpen] = useState(false)\n  const handleChildrenOpen = () => {\n    setchildOpen(!childOpen)\n  }\n\n  // set the node icon\n  const elementName = props.node_type.split('.').slice(0, 2).join('.')\n  const icon = ElementIconMap[!elementName ? 'default' : elementName] || (\n    <MuiIcons.DeviceUnknown />\n  )\n\n  // set the primary text\n  const variant = 'subtitle1'\n  let title = (\n    <Typography variant={variant}>{`${props.pk} ${props.label || ''}`}</Typography>\n  )\n  if (props.process) {\n    let color = theme.palette.primary.main\n    if (['excepted', 'killed'].includes(props.process.state || '')) {\n      color = theme.palette.error.main\n    } else if (props.process.exitStatus === 0) {\n      color = theme.palette.success.main\n    }\n\n    title = (\n      <Typography variant={variant}>\n        {`${props.pk} ${props.process.label || props.label || ''}`}\n        <Chip\n          className={classes.nodeItemChip}\n          label={\n            props.process.exitStatus === 0 || props.process.exitStatus\n              ? `${(props.process.state || '').toUpperCase()} [${\n                  props.process.exitStatus\n                }]`\n              : `${(props.process.state || '').toUpperCase()}`\n          }\n          variant=\"outlined\"\n          // note only primary/secondary allow for actual color attribute\n          style={{\n            color: color,\n            borderColor: color\n          }}\n        />\n      </Typography>\n    )\n  }\n  if (props.link) {\n    title = (\n      <Typography variant={variant}>{`${props.pk} ${props.link.type.toUpperCase()} ${\n        props.link.label\n      }`}</Typography>\n    )\n  }\n\n  // set the secondary text\n  let info = `${props.mtime}, ${props.node_type}`\n  if (props.process_type) {\n    info = info + `, ${props.process_type}`\n  }\n\n  let child\n  if (props.child) {\n    child = (\n      <Collapse in={childOpen} timeout=\"auto\" mountOnEnter unmountOnExit>\n        <props.child uuid={props.uuid} indent={props.indent + 4} />\n      </Collapse>\n    )\n  }\n\n  return (\n    <>\n      <ListItem\n        button\n        onClick={handleChildrenOpen}\n        style={props.indent ? { paddingLeft: theme.spacing(props.indent) } : {}}\n      >\n        <ListItemAvatar>\n          <IconButton onClick={handleMenuOpen}>\n            <Avatar>{icon}</Avatar>\n          </IconButton>\n        </ListItemAvatar>\n        <props.contextMenu\n          open={menuOpen}\n          uuid={props.uuid}\n          anchorEl={anchorEl}\n          handleClose={handleMenuClose}\n        />\n        <ListItemText\n          className={classes.nodeListItem}\n          primary={title}\n          secondary={info}\n        />\n        {!child ? null : childOpen ? (\n          <MuiIcons.ExpandMore style={{ marginLeft: theme.spacing(1) }} />\n        ) : (\n          <MuiIcons.ExpandLess style={{ marginLeft: theme.spacing(1) }} />\n        )}\n      </ListItem>\n      {child}\n      <Divider light />\n    </>\n  )\n}\n\nAiidaNodeListItem.defaultProps = {\n  contextMenu: contextMenuNode,\n  indent: 0\n}\n\nexport interface IContextMenuNodeProps {\n  uuid: string\n  open: boolean\n  anchorEl: Element | ((element: Element) => Element) | null | undefined\n  handleClose: React.MouseEventHandler<HTMLElement>\n}\n\n/** A context menu for a node */\nfunction contextMenuNode({\n  open,\n  uuid,\n  anchorEl,\n  handleClose\n}: IContextMenuNodeProps): JSX.Element {\n  const snackbarMessenger = useSnackbar()\n\n  const copyUUIDtoClipboard = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    copy(`${uuid}`)\n    snackbarMessenger(<Alert severity=\"success\">{`Copied ${uuid}`}</Alert>)\n    handleClose(event)\n  }\n\n  const bookmarkUUID = (event: React.MouseEvent<HTMLElement>) => {\n    let current = new Set()\n    try {\n      const value = window.localStorage.getItem(LocalStorageKeys.aiidaUUIDbookmarks)\n      if (!value) {\n        throw new Error()\n      }\n      current = new Set(JSON.parse(value))\n    } catch (err) {}\n    current.add(uuid)\n    window.localStorage.setItem(\n      LocalStorageKeys.aiidaUUIDbookmarks,\n      JSON.stringify(Array.from(current))\n    )\n    snackbarMessenger(<Alert severity=\"success\">{`Bookmarked ${uuid}`}</Alert>)\n    handleClose(event)\n  }\n\n  return (\n    <Menu\n      keepMounted\n      open={open}\n      onClose={handleClose}\n      anchorEl={anchorEl}\n      getContentAnchorEl={null}\n      anchorOrigin={{ vertical: 'center', horizontal: 'center' }}\n      // transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n    >\n      <MenuItem onClick={copyUUIDtoClipboard}>Copy UUID to Clipboard</MenuItem>\n      <MenuItem onClick={bookmarkUUID}>Bookmark UUID</MenuItem>\n      <MenuItem onClick={handleClose}>\n        <b>Close</b>\n      </MenuItem>\n      {/* Open Data, Add to Group */}\n    </Menu>\n  )\n}\n","import React, { useContext, useState } from 'react'\n\nimport {\n  Button,\n  CircularProgress,\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  // Tooltip,\n  Typography\n} from '@material-ui/core'\nimport { useTheme } from '@material-ui/core/styles'\nimport * as MuiIcons from '@material-ui/icons'\n\nimport { Alert, Pagination, Skeleton } from '@material-ui/lab'\n\nimport { useQuery } from 'react-query'\n\nimport {\n  AiidaSettingsContext,\n  getNodes,\n  getNodeIncoming,\n  getNodeOutgoing,\n  getNodeRepoList,\n  IAiidaRestNodeRepoListItem,\n  IAiidaRestNodeLinkItem\n} from '../clients/aiidaClient'\nimport { useStyles } from '../styles'\nimport { AiidaNodeListItem } from './aiidaListItems'\n\n/**\n * A component housing a list of AiiDA elements\n */\nexport function AiidaNodeTree({ nodePrefix }: { nodePrefix: string }): JSX.Element {\n  const classes = useStyles()\n  const theme = useTheme()\n\n  const [page, setPage] = useState(1)\n  const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    setPage(value)\n  }\n  const aiidaSettings = useContext(AiidaSettingsContext)\n\n  const result = useQuery(\n    [aiidaSettings.baseUrl, 'nodes', nodePrefix, page],\n    () => getNodes(aiidaSettings.baseUrl, nodePrefix, page),\n    { enabled: aiidaSettings.baseUrl !== null, keepPreviousData: true }\n  )\n\n  let element = <CircularProgress />\n  let pages = 1\n  if (result.isIdle || result.data === null) {\n    element = (\n      <Alert severity=\"info\" icon={<MuiIcons.SyncDisabled />}>\n        Disabled\n      </Alert>\n    )\n  } else if (result.data !== undefined) {\n    pages = Math.ceil(result.data.totalCount / result.data.perPage)\n    if (!result.isPreviousData) {\n      element = (\n        <List component=\"nav\" aria-label=\"main aiida tree\">\n          <Divider />\n          {result.data.nodes.map(value => {\n            const process = {\n              label: value.attributes?.process_label,\n              state: value.attributes?.process_state,\n              exitStatus: value.attributes?.exit_status\n            }\n            return (\n              <AiidaNodeListItem\n                key={`aiida-tree-el-${value.uuid}`}\n                pk={value.id}\n                uuid={value.uuid}\n                mtime={value.mtime}\n                node_type={value.node_type}\n                process_type={value.process_type}\n                label={value.label}\n                process={value.attributes?.process_state ? process : undefined}\n                child={AiidaNodeChildren}\n              />\n            )\n          })}\n        </List>\n      )\n    }\n  } else if (result.isError) {\n    const error = result.error as { message: string }\n    element = <Alert severity=\"error\">{error.message}</Alert>\n    // TODO if we don't reset the page here, then changing the filter parameters\n    // can query for a page that does not exist,\n    // but ideally a change in filters would always reset the page number\n    setPage(1)\n  }\n  let updateInfo = null\n  if (!!result.dataUpdatedAt) {\n    const date = new Date(result.dataUpdatedAt)\n    updateInfo = (\n      <Typography display=\"inline\" noWrap>\n        Updated: {date.toLocaleString()}\n      </Typography>\n    )\n  }\n\n  return (\n    <div className={classes.nodeTree}>\n      <Button\n        variant=\"outlined\"\n        color=\"default\"\n        style={{ marginRight: theme.spacing(1) }}\n        startIcon={<MuiIcons.Refresh />}\n        onClick={() => {\n          result.refetch()\n        }}\n      >\n        Refresh\n      </Button>\n      {updateInfo}\n      <Pagination\n        disabled={result.isPreviousData}\n        className={classes.pagination}\n        color=\"primary\"\n        count={pages}\n        page={page}\n        onChange={handlePageChange}\n      />\n      {element}\n    </div>\n  )\n}\n\nfunction AiidaNodeChildren({\n  uuid,\n  indent\n}: {\n  uuid: string | null\n  indent: number\n}): JSX.Element {\n  const theme = useTheme()\n  const aiidaSettings = useContext(AiidaSettingsContext)\n\n  // TODO use https://react-query.tanstack.com/guides/infinite-queries\n  const resultRepo = useQuery(\n    [aiidaSettings.baseUrl, 'nodeRepolist', uuid],\n    () => getNodeRepoList(aiidaSettings.baseUrl, uuid),\n    { enabled: aiidaSettings.baseUrl !== null }\n  )\n  const resultIncoming = useQuery(\n    [aiidaSettings.baseUrl, 'nodeIncoming', uuid],\n    () => getNodeIncoming(aiidaSettings.baseUrl, uuid),\n    { enabled: aiidaSettings.baseUrl !== null }\n  )\n  const resultOutgoing = useQuery(\n    [aiidaSettings.baseUrl, 'nodeOutgoing', uuid],\n    () => getNodeOutgoing(aiidaSettings.baseUrl, uuid),\n    { enabled: aiidaSettings.baseUrl !== null }\n  )\n\n  const marginStyle = { marginLeft: theme.spacing(indent + 4) }\n\n  return (\n    <List component=\"div\" disablePadding>\n      {resultRepo.data?.length ? (\n        <AiidaRepoList data={resultRepo.data} indent={indent + 4} />\n      ) : resultRepo.isError ? (\n        <Alert\n          severity=\"error\"\n          style={marginStyle}\n        >{`Repository error: ${resultRepo.error}`}</Alert>\n      ) : null}\n      {resultIncoming.data?.length ? (\n        <AiidaLinksList\n          direction=\"incoming\"\n          data={resultIncoming.data}\n          indent={indent + 4}\n        />\n      ) : resultIncoming.isError ? (\n        <Alert\n          severity=\"error\"\n          style={marginStyle}\n        >{`Incoming error: ${resultIncoming.error}`}</Alert>\n      ) : null}\n      {resultOutgoing.data?.length ? (\n        <AiidaLinksList\n          direction=\"outgoing\"\n          data={resultOutgoing.data}\n          indent={indent + 4}\n        />\n      ) : resultOutgoing.isError ? (\n        <Alert\n          severity=\"error\"\n          style={marginStyle}\n        >{`Outgoing error: ${resultOutgoing.error}`}</Alert>\n      ) : null}\n      {resultRepo.isLoading || resultIncoming.isLoading || resultOutgoing.isLoading ? (\n        <Typography variant=\"h3\">\n          <Skeleton style={marginStyle} />\n        </Typography>\n      ) : null}\n    </List>\n  )\n}\n\nfunction AiidaRepoList({\n  data,\n  indent\n}: {\n  data: IAiidaRestNodeRepoListItem[]\n  indent: number\n}): JSX.Element {\n  const theme = useTheme()\n\n  const [open, setOpen] = useState(false)\n  const handleRepoClick = () => {\n    setOpen(!open)\n  }\n\n  return (\n    <>\n      <ListItem\n        button\n        onClick={handleRepoClick}\n        style={indent ? { paddingLeft: theme.spacing(indent) } : {}}\n      >\n        <ListItemIcon>\n          <MuiIcons.Inbox />\n        </ListItemIcon>\n        <ListItemText primary=\"Repository\" />\n        {open ? <MuiIcons.ExpandMore /> : <MuiIcons.ExpandLess />}\n      </ListItem>\n      <Collapse in={open}>\n        <List component=\"nav\" aria-label=\"main aiida repo\">\n          {data.map(value => {\n            return (\n              <ListItem style={{ paddingLeft: theme.spacing(indent + 4) }}>\n                <ListItemIcon>\n                  {value.type === 'DIRECTORY' ? (\n                    <MuiIcons.Folder />\n                  ) : (\n                    <MuiIcons.Description />\n                  )}\n                </ListItemIcon>\n                <ListItemText primary={value.name} />\n              </ListItem>\n            )\n          })}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n\nfunction AiidaLinksList({\n  direction,\n  data,\n  indent\n}: {\n  direction: 'incoming' | 'outgoing'\n  data: IAiidaRestNodeLinkItem[]\n  indent: number\n}): JSX.Element {\n  const theme = useTheme()\n  const [open, setOpen] = useState(false)\n  const handleIncomingClick = () => {\n    setOpen(!open)\n  }\n\n  return (\n    <>\n      {' '}\n      <ListItem\n        button\n        onClick={handleIncomingClick}\n        style={indent ? { paddingLeft: theme.spacing(indent) } : {}}\n      >\n        <ListItemIcon>\n          {direction === 'incoming' ? (\n            <MuiIcons.ArrowForward />\n          ) : (\n            <MuiIcons.ArrowBack />\n          )}\n        </ListItemIcon>\n        <ListItemText primary={direction} style={{ textTransform: 'capitalize' }} />\n        {open ? <MuiIcons.ExpandMore /> : <MuiIcons.ExpandLess />}\n      </ListItem>\n      <Collapse in={open}>\n        <List component=\"nav\" aria-label=\"main aiida links\">\n          {data.map(value => {\n            return (\n              <AiidaNodeListItem\n                key={`aiida-tree-el-${value.uuid}`}\n                pk={value.id}\n                uuid={value.uuid}\n                mtime={value.mtime}\n                node_type={value.node_type}\n                process_type={value.process_type}\n                label={value.label}\n                link={{\n                  direction: direction,\n                  type: value.link_type,\n                  label: value.link_label\n                }}\n                indent={indent + 2}\n              />\n            )\n          })}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n","import React, { useContext } from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n// import Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField'\n\nimport { useQuery } from 'react-query'\nimport ReactJson from 'react-json-view'\n\nimport { AiidaSettingsContext, getNodeStatistics, getNode } from './clients/aiidaClient'\nimport { AiidaNodeTree } from './components/nodeList'\nimport { useStyles } from './styles'\nimport { LinkInternal, useLocalStorage } from './hooks'\nimport { LocalStorageKeys, PageKeys } from './constants'\n\nexport function PageNodeExplorer(): JSX.Element {\n  const classes = useStyles()\n  const [nodePrefix, setnodePrefix] = useLocalStorage(\n    LocalStorageKeys.aiidaNodeXTypePrefix,\n    ''\n  )\n  const [nodeFieldsUUID, setnodeFieldsUUID] = useLocalStorage(\n    LocalStorageKeys.aiidaNodeXFieldUUID,\n    null as string | null\n  )\n  const [expandedTabs, setExpandedTabs] = useLocalStorage(\n    LocalStorageKeys.aiidaNodeXExpanded,\n    ['intro']\n  )\n  function changeExpanded(tab: string, expanded: boolean) {\n    const tabs = new Set(expandedTabs)\n    if (expanded) {\n      tabs.add(tab)\n    } else {\n      tabs.delete(tab)\n    }\n    setExpandedTabs(Array.from(tabs))\n  }\n\n  return (\n    <Grid container spacing={2} className={classes.mainGrid} direction=\"row-reverse\">\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <Accordion\n            defaultExpanded={expandedTabs.includes('intro')}\n            onChange={(event: React.ChangeEvent<unknown>, expanded: boolean) => {\n              changeExpanded('intro', expanded)\n            }}\n          >\n            <AccordionSummary\n              classes={{ content: classes.accordSumContent }}\n              expandIcon={<ExpandMoreIcon />}\n            >\n              <h2>AiiDA Node Explorer</h2>\n            </AccordionSummary>\n            <AccordionDetails>\n              <NodeExplorerIntroduction />\n            </AccordionDetails>\n          </Accordion>\n          <Accordion\n            defaultExpanded={expandedTabs.includes('filters')}\n            onChange={(event: React.ChangeEvent<unknown>, expanded: boolean) => {\n              changeExpanded('filters', expanded)\n            }}\n          >\n            <AccordionSummary\n              classes={{ content: classes.accordSumContent }}\n              expandIcon={<ExpandMoreIcon />}\n            >\n              <h2>Filters</h2>\n            </AccordionSummary>\n            <AccordionDetails>\n              <NodeExplorerFilters\n                nodePrefix={nodePrefix}\n                setnodePrefix={setnodePrefix}\n              />\n            </AccordionDetails>\n          </Accordion>\n          <Accordion\n            defaultExpanded={expandedTabs.includes('fields')}\n            onChange={(event: React.ChangeEvent<unknown>, expanded: boolean) => {\n              changeExpanded('fields', expanded)\n            }}\n          >\n            <AccordionSummary\n              classes={{ content: classes.accordSumContent }}\n              expandIcon={<ExpandMoreIcon />}\n            >\n              <h2>Database Fields</h2>\n            </AccordionSummary>\n            <AccordionDetails className={classes.overflowAuto}>\n              <NodeExplorerAttributes\n                nodeFieldsUUID={nodeFieldsUUID}\n                setnodeFieldsUUID={setnodeFieldsUUID}\n              />\n            </AccordionDetails>\n          </Accordion>\n          <Accordion\n            defaultExpanded={expandedTabs.includes('files')}\n            onChange={(event: React.ChangeEvent<unknown>, expanded: boolean) => {\n              changeExpanded('files', expanded)\n            }}\n          >\n            <AccordionSummary\n              classes={{ content: classes.accordSumContent }}\n              expandIcon={<ExpandMoreIcon />}\n            >\n              <h2>File Contents</h2>\n            </AccordionSummary>\n            <AccordionDetails>TODO ...</AccordionDetails>\n          </Accordion>\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <AiidaNodeTree nodePrefix={nodePrefix} />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport function NodeExplorerIntroduction(): JSX.Element {\n  return (\n    <div>\n      <p>\n        The node explorer allows you to visualise the nodes in your AiiDA profile as a\n        filtered tree. Click on the right-hand <code>^</code> to reveal its child links.\n      </p>\n      <p>Use the filter section below to select which node type you want to explore.</p>\n      <p>\n        You can click on a node's icon to see additional actions, including bookmarking\n        the node (see <LinkInternal to={PageKeys.groups}>Node groups</LinkInternal>) and\n        copying its UUID to the clipboard. You can use the UUID to show all of if its\n        content in the \"Database Fields\" section.\n      </p>\n    </div>\n  )\n}\n\nconst nodePrefixesDefault = {\n  '': null,\n  'data.': null,\n  'data.array.': null,\n  'data.bool.': null,\n  'data.cif.': null,\n  'data.code.': null,\n  'data.dict.': null,\n  'data.float.': null,\n  'data.folder.': null,\n  'data.int.': null,\n  'data.list.': null,\n  'data.numeric.': null,\n  'data.orbital.': null,\n  'data.remote.': null,\n  'data.structure.': null,\n  'process.': null,\n  'process.calculation.': null,\n  'process.workflow.': null\n} as { [key: string]: null | number }\n\nexport function NodeExplorerFilters({\n  nodePrefix,\n  setnodePrefix\n}: {\n  nodePrefix: string\n  setnodePrefix: React.Dispatch<React.SetStateAction<string>>\n}): JSX.Element {\n  const aiidaSettings = useContext(AiidaSettingsContext)\n  const result = useQuery(\n    [aiidaSettings.baseUrl, 'statistics'],\n    () => getNodeStatistics(aiidaSettings.baseUrl),\n    { enabled: aiidaSettings.baseUrl !== null }\n  )\n\n  let nodePrefixes = nodePrefixesDefault\n  if (result.data) {\n    nodePrefixes = result.data.types\n    // TODO do this programmatically\n    nodePrefixes[''] = result.data.total\n    nodePrefixes['data.'] = null\n    nodePrefixes['process.'] = null\n    nodePrefixes['process.calculation.'] = null\n    nodePrefixes['process.workflow.'] = null\n  }\n\n  return (\n    <>\n      <FormControl fullWidth>\n        <InputLabel id=\"node-prefix-select-label\">Node Type Prefix</InputLabel>\n        <Select\n          labelId=\"node-prefix-select-label\"\n          id=\"node-prefix-select\"\n          value={nodePrefix}\n          onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n            setnodePrefix(event.target.value as string)\n          }}\n        >\n          {Object.entries(nodePrefixes)\n            .sort()\n            .map(([name, count]) => (\n              <MenuItem value={name}>\n                {count === null ? name : `${name || 'ALL'} (${count})`}\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n    </>\n  )\n}\n\nexport function NodeExplorerAttributes({\n  nodeFieldsUUID,\n  setnodeFieldsUUID\n}: {\n  nodeFieldsUUID: null | string\n  setnodeFieldsUUID: React.Dispatch<React.SetStateAction<string | null>>\n}): JSX.Element {\n  const classes = useStyles()\n  const aiidaSettings = useContext(AiidaSettingsContext)\n  const result = useQuery(\n    [aiidaSettings.baseUrl, 'node', nodeFieldsUUID],\n    () => getNode(aiidaSettings.baseUrl, nodeFieldsUUID),\n    { enabled: aiidaSettings.baseUrl !== null }\n  )\n  const handleUUIDChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setnodeFieldsUUID(event.target.value)\n  }\n  let view = null as null | JSX.Element\n  if (result.data) {\n    view = <ReactJson src={result.data} collapseStringsAfterLength={40} />\n  } else if (result.isFetching) {\n    view = <CircularProgress />\n  }\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <TextField\n          label=\"UUID\"\n          value={nodeFieldsUUID}\n          onChange={handleUUIDChange}\n          error={!!result.error}\n          helperText={!result.error ? undefined : `${result.error}`}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.padTop}>\n        {view}\n      </Grid>\n    </Grid>\n  )\n}\n","import React, { useContext, useEffect, useRef } from 'react'\n\nimport { Theme, useTheme } from '@material-ui/core/styles'\n\nimport ForceGraph2D, {\n  NodeObject,\n  LinkObject\n  // ForceGraphMethods\n} from 'react-force-graph-2d'\nimport { forceCollide } from 'd3-force'\nimport { useQuery } from 'react-query'\nimport { SizeMe } from 'react-sizeme'\n\nimport {\n  AiidaSettingsContext,\n  IAiidaRestNodeLinkItem,\n  getNodeOutgoing,\n  getNodeIncoming\n} from '../clients/aiidaClient'\n\nexport type DagType = 'td' | 'bu' | 'lr' | 'rl' | 'radialout' | 'radialin'\n\ninterface Node2dObject extends NodeObject {\n  name?: string\n  label?: string\n  color?: string\n  fillColor?: string\n  val?: number\n  __bckgDimensions?: number[]\n}\n\nexport function AiidaProvenanceGraph({\n  nodeUUID,\n  dagMode,\n  dagLevelDistance\n}: {\n  nodeUUID: string | null\n  dagMode: DagType\n  dagLevelDistance: number\n}): JSX.Element {\n  const theme = useTheme()\n  const fgRef = useRef()\n  const aiidaSettings = useContext(AiidaSettingsContext)\n  const resultIncoming = useQuery(\n    [aiidaSettings.baseUrl, 'nodeIncoming', nodeUUID],\n    () => getNodeIncoming(aiidaSettings.baseUrl, nodeUUID),\n    { enabled: aiidaSettings.baseUrl !== null }\n  )\n  const resultOutgoing = useQuery(\n    [aiidaSettings.baseUrl, 'nodeOutgoing', nodeUUID],\n    () => getNodeOutgoing(aiidaSettings.baseUrl, nodeUUID),\n    { enabled: aiidaSettings.baseUrl !== null }\n  )\n\n  useEffect(() => {\n    // add collision force\n    const fg = fgRef.current as undefined | any // ForceGraphMethods\n    if (fg !== undefined) {\n      // Deactivate existing forces\n      fg.d3Force('charge', null)\n      fg.d3Force('collision', forceCollide(15))\n      // fg.d3Force('box' ...\n    }\n  }, [resultIncoming, resultOutgoing])\n\n  const rootNode = {\n    id: 'root',\n    name: 'root',\n    label: 'ROOT',\n    val: 2,\n    color: 'red',\n    fillColor: theme.palette.action.selected\n  } as Node2dObject\n  const nodes = [rootNode] as Node2dObject[]\n  const links = [] as LinkObject[]\n\n  if (resultIncoming.data) {\n    nodes.push(\n      ...resultIncoming.data.map(node => {\n        return createNodeData(node, theme)\n      })\n    )\n    links.push(\n      ...resultIncoming.data.map(node => {\n        return {\n          target: 'root',\n          source: `${node.id}`,\n          name: `${node.link_label}`,\n          color: theme.palette.text.secondary\n        }\n      })\n    )\n  }\n  if (resultOutgoing.data) {\n    nodes.push(\n      ...resultOutgoing.data.map(node => {\n        return createNodeData(node, theme)\n      })\n    )\n    links.push(\n      ...resultOutgoing.data.map(node => {\n        return {\n          source: 'root',\n          target: `${node.id}`,\n          name: `${node.link_label}`,\n          color: theme.palette.text.secondary\n        }\n      })\n    )\n  }\n\n  const data = {\n    nodes: nodes,\n    links: links\n  }\n  return (\n    <SizeMe>\n      {({ size }) => (\n        <ForceGraph2D\n          ref={fgRef}\n          graphData={data}\n          width={size.width === null ? undefined : size.width}\n          height={size.height === null ? undefined : size.height}\n          dagMode={dagMode}\n          dagLevelDistance={dagLevelDistance}\n          nodeCanvasObject={nodeCanvasObject}\n          linkDirectionalArrowLength={3.5}\n          linkDirectionalArrowRelPos={1}\n        />\n      )}\n    </SizeMe>\n  )\n}\n\nfunction createNodeData(node: IAiidaRestNodeLinkItem, theme: Theme): Node2dObject {\n  const node_type = node.node_type.split('.')\n  node_type.pop()\n  return {\n    id: `${node.id}`,\n    name: `${node.id}${node.process_type ? ', ' + node.process_type : ''}`,\n    label: node_type.pop(),\n    val: 40,\n    color:\n      theme.palette.type === 'dark'\n        ? theme.palette.primary.light\n        : theme.palette.primary.dark,\n    fillColor: theme.palette.action.selected\n  }\n}\n\nfunction nodeCanvasObject(\n  node: Node2dObject,\n  ctx: CanvasRenderingContext2D,\n  globalScale: number\n): void {\n  const label = `${node.label || ''}`\n  const fontSize = 12 / globalScale\n  ctx.font = `${fontSize}px Sans-Serif`\n  const textWidth = ctx.measureText(label).width\n  const bckgDimensions = [textWidth, fontSize].map(n => n + fontSize * 0.5) // some padding\n\n  ctx.textAlign = 'center'\n  ctx.textBaseline = 'middle'\n  ctx.strokeStyle = 'rgba(0, 0, 0, 0.1)'\n  if (node.x !== undefined && node.y !== undefined) {\n    if (node.fillColor) {\n      ctx.fillStyle = node.fillColor\n      ctx.fillRect(\n        node.x - bckgDimensions[0] / 2,\n        node.y - bckgDimensions[1] / 2,\n        bckgDimensions[0],\n        bckgDimensions[1]\n      )\n    }\n    ctx.strokeRect(\n      node.x - bckgDimensions[0] / 2,\n      node.y - bckgDimensions[1] / 2,\n      bckgDimensions[0],\n      bckgDimensions[1]\n    )\n    ctx.fillStyle = node.color || 'white'\n    ctx.fillText(label, node.x, node.y)\n  }\n\n  node.__bckgDimensions = bckgDimensions // to re-use in nodePointerAreaPaint\n}\n","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport Typography from '@material-ui/core/Typography'\nimport Slider from '@material-ui/core/Slider'\n\nimport { uuidPattern } from './clients/aiidaClient'\nimport { useStyles } from './styles'\nimport { LocalStorageKeys, PageKeys } from './constants'\nimport { LinkInternal, useLocalStorage } from './hooks'\nimport { AiidaProvenanceGraph, DagType } from './components/provenanceGraph'\n\nexport function PageProvenanceGraph(): JSX.Element {\n  const classes = useStyles()\n  const [rootUUID, setrootUUID] = useLocalStorage(\n    LocalStorageKeys.aiidaProvenanceRootUUID,\n    null as null | string\n  )\n  const [dagMode, setdagMode] = useLocalStorage(\n    LocalStorageKeys.aiidaProvenanceDagMode,\n    'lr' as DagType\n  )\n  const [dagLevelDistance, setdagLevelDistance] = useLocalStorage(\n    LocalStorageKeys.aiidaProvenanceDagLevel,\n    50\n  )\n\n  const handleUUIDChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setrootUUID(event.target.value)\n  }\n\n  return (\n    <Grid container spacing={2} className={classes.mainGrid} direction=\"row-reverse\">\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <Accordion defaultExpanded>\n            <AccordionSummary\n              classes={{ content: classes.accordSumContent }}\n              expandIcon={<ExpandMoreIcon />}\n            >\n              <h2>Provenance Graph Visualisation</h2>\n            </AccordionSummary>\n            <AccordionDetails>\n              <ProvenanceGraphIntroduction />\n            </AccordionDetails>\n          </Accordion>\n        </Paper>\n      </Grid>\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <TextField\n            label=\"Root UUID\"\n            value={rootUUID || ''}\n            onChange={handleUUIDChange}\n            error={rootUUID ? !uuidPattern.test(rootUUID) : false}\n            // helperText={!result.error ? undefined : `${result.error}`}\n            fullWidth\n          />\n          <FormControl fullWidth>\n            <InputLabel id=\"dag-mode-select-label\">DAG Mode</InputLabel>\n            <Select\n              labelId=\"dag-mode-select-label\"\n              id=\"dag-mode-select\"\n              value={dagMode}\n              onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                setdagMode(event.target.value as DagType)\n              }}\n            >\n              {['td', 'bu', 'lr', 'rl', 'radialout', 'radialin'].map(name => (\n                <MenuItem value={name}>{name}</MenuItem>\n              ))}\n            </Select>\n\n            <Typography id=\"discrete-slider\" gutterBottom>\n              DAG Level Distance\n            </Typography>\n            <Slider\n              defaultValue={dagLevelDistance}\n              aria-labelledby=\"discrete-slider\"\n              valueLabelDisplay=\"auto\"\n              step={10}\n              marks\n              min={10}\n              max={200}\n              onChange={(\n                event: React.ChangeEvent<unknown>,\n                value: number | number[]\n              ) => {\n                setdagLevelDistance(value as number)\n              }}\n            />\n          </FormControl>\n          <AiidaProvenanceGraph\n            nodeUUID={rootUUID}\n            dagMode={dagMode}\n            dagLevelDistance={dagLevelDistance}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport function ProvenanceGraphIntroduction(): JSX.Element {\n  return (\n    <div>\n      <p>This is a work in progress!</p>\n      <p>\n        Input a root node UUID (you can copy one from the{' '}\n        <LinkInternal to={PageKeys.nodeExplorer}>Node explorer</LinkInternal>) and you\n        will see a visualisation of its local provenance graph.\n      </p>\n      <p>\n        Hover over a node or link to see more information about it (you may have to\n        click on the area first).\n      </p>\n      <p>Eventually it is intended to add features like click-to-expand.</p>\n    </div>\n  )\n}\n","import get from 'lodash.get'\nimport { Color, Vector3 } from 'three'\n\nimport { IAiidaRestNode } from '../clients/aiidaClient'\n\nexport interface IStructureKind {\n  name: string\n  mass: number\n  symbols: string[]\n  weights: number[]\n  [key: string]: any\n}\n\nexport type IStructureCell = [\n  [number, number, number],\n  [number, number, number],\n  [number, number, number]\n]\n\nexport interface IStructureDataAttrs {\n  cell: IStructureCell\n  kinds: IStructureKind[]\n  pbc1: boolean\n  pbc2: boolean\n  pbc3: boolean\n  sites: {\n    kind_name: string\n    position: [number, number, number]\n  }[]\n}\n\nexport interface IStructureData extends IAiidaRestNode {\n  attributes: IStructureDataAttrs\n}\n\n/** Get the length of a 3D vector */\nexport function vectorLength(point: [number, number, number]): string {\n  const vector = new Vector3(...point)\n  return vector.length().toFixed(2)\n}\n\n/** Convert list of kinds to a mapping of the kind name to the element name.\n * We take only the first element name in the list\n */\nexport function kinds2elMap(kinds: IStructureKind[]): {\n  [key: string]: string\n} {\n  return kinds.reduce((prev, current) => {\n    prev[current.name] = current.symbols.length ? current.symbols[0] : 'XX'\n    return prev\n  }, {} as { [key: string]: string })\n}\n\n/** Convert element to a color for use with CSS */\nexport function element2colorCss(elementName: string): string {\n  const color = new Color(...get(atomData, elementName, [1, 0, 1, 0]).slice(1, 4))\n  return `rgb(${color.r * 255},${color.g * 255},${color.b * 255})`\n}\n\n/** Convert element to a color for use with Three JS */\nexport function element2colorThree(elementName: string): Color {\n  return new Color(...get(atomData, elementName, [1, 0, 1, 0]).slice(1, 4))\n}\n\n/** Convert element to a radius */\nexport function element2radius(elementName: string): number {\n  return get(atomData, elementName, [1])[0]\n}\n\n/** element name -> (radius, red, blue, green) */\nexport const atomData = {\n  XX: [0.8, 0.3, 0.3, 0.3],\n  H: [0.46, 1.0, 0.8, 0.8],\n  He: [1.22, 0.98907, 0.91312, 0.81091],\n  Li: [1.57, 0.52731, 0.87953, 0.4567],\n  Be: [1.12, 0.37147, 0.8459, 0.48292],\n  B: [0.81, 0.1249, 0.63612, 0.05948],\n  C: [0.77, 0.5043, 0.28659, 0.16236],\n  N: [0.74, 0.69139, 0.72934, 0.9028],\n  O: [0.74, 0.99997, 0.01328, 0.0],\n  F: [0.72, 0.69139, 0.72934, 0.9028],\n  Ne: [1.6, 0.99954, 0.21788, 0.71035],\n  Na: [1.91, 0.97955, 0.86618, 0.23787],\n  Mg: [1.6, 0.98773, 0.48452, 0.0847],\n  Al: [1.43, 0.50718, 0.70056, 0.84062],\n  Si: [1.18, 0.10596, 0.23226, 0.98096],\n  P: [1.1, 0.75557, 0.61256, 0.76425],\n  S: [1.04, 1.0, 0.98071, 0.0],\n  Cl: [0.99, 0.19583, 0.98828, 0.01167],\n  Ar: [1.92, 0.81349, 0.99731, 0.77075],\n  K: [2.35, 0.63255, 0.13281, 0.96858],\n  Ca: [1.97, 0.35642, 0.58863, 0.74498],\n  Sc: [1.64, 0.71209, 0.3893, 0.67279],\n  Ti: [1.47, 0.47237, 0.79393, 1.0],\n  V: [1.35, 0.9, 0.1, 0.0],\n  Cr: [1.29, 0.0, 0.0, 0.62],\n  Mn: [1.37, 0.66148, 0.03412, 0.62036],\n  Fe: [1.26, 0.71051, 0.44662, 0.00136],\n  Co: [1.25, 0.0, 0.0, 0.68666],\n  Ni: [1.25, 0.72032, 0.73631, 0.74339],\n  Cu: [1.28, 0.1339, 0.28022, 0.86606],\n  Zn: [1.37, 0.56123, 0.56445, 0.50799],\n  Ga: [1.53, 0.62292, 0.89293, 0.45486],\n  Ge: [1.22, 0.49557, 0.43499, 0.65193],\n  As: [1.21, 0.45814, 0.81694, 0.34249],\n  Se: [1.04, 0.6042, 0.93874, 0.06122],\n  Br: [1.14, 0.49645, 0.19333, 0.01076],\n  Kr: [1.98, 0.98102, 0.75805, 0.95413],\n  Rb: [2.5, 1.0, 0.0, 0.6],\n  Sr: [2.15, 0.0, 1.0, 0.15259],\n  Y: [1.82, 0.40259, 0.59739, 0.55813],\n  Zr: [1.6, 0.0, 1.0, 0.0],\n  Nb: [1.47, 0.29992, 0.70007, 0.46459],\n  Mo: [1.4, 0.70584, 0.52602, 0.68925],\n  Tc: [1.35, 0.80574, 0.68699, 0.79478],\n  Ru: [1.34, 0.81184, 0.72113, 0.68089],\n  Rh: [1.34, 0.80748, 0.82205, 0.67068],\n  Pd: [1.37, 0.75978, 0.76818, 0.72454],\n  Ag: [1.44, 0.72032, 0.73631, 0.74339],\n  Cd: [1.52, 0.95145, 0.12102, 0.86354],\n  In: [1.67, 0.84378, 0.50401, 0.73483],\n  Sn: [1.58, 0.60764, 0.56052, 0.72926],\n  Sb: [1.41, 0.84627, 0.51498, 0.31315],\n  Te: [1.37, 0.67958, 0.63586, 0.32038],\n  I: [1.33, 0.55914, 0.122, 0.54453],\n  Xe: [2.18, 0.60662, 0.63218, 0.97305],\n  Cs: [2.72, 0.05872, 0.99922, 0.72578],\n  Ba: [2.24, 0.11835, 0.93959, 0.17565],\n  La: [1.88, 0.3534, 0.77057, 0.28737],\n  Ce: [1.82, 0.82055, 0.99071, 0.02374],\n  Pr: [1.82, 0.9913, 0.88559, 0.02315],\n  Nd: [1.82, 0.98701, 0.5556, 0.02744],\n  Pm: [1.81, 0.0, 0.0, 0.96],\n  Sm: [1.81, 0.99042, 0.02403, 0.49195],\n  Eu: [2.06, 0.98367, 0.03078, 0.83615],\n  Gd: [1.79, 0.75325, 0.01445, 1.0],\n  Tb: [1.77, 0.44315, 0.01663, 0.99782],\n  Dy: [1.77, 0.1939, 0.02374, 0.99071],\n  Ho: [1.76, 0.02837, 0.25876, 0.98608],\n  Er: [1.75, 0.28688, 0.45071, 0.23043],\n  Tm: [1.0, 0.0, 0.0, 0.88],\n  Yb: [1.94, 0.15323, 0.99165, 0.95836],\n  Lu: [1.72, 0.15097, 0.99391, 0.71032],\n  Hf: [1.59, 0.70704, 0.70552, 0.3509],\n  Ta: [1.47, 0.71952, 0.60694, 0.33841],\n  W: [1.41, 0.55616, 0.54257, 0.50178],\n  Re: [1.37, 0.70294, 0.69401, 0.55789],\n  Os: [1.35, 0.78703, 0.69512, 0.47379],\n  Ir: [1.36, 0.78975, 0.81033, 0.45049],\n  Pt: [1.39, 0.79997, 0.77511, 0.75068],\n  Au: [1.44, 0.99628, 0.70149, 0.22106],\n  Hg: [1.55, 0.8294, 0.72125, 0.79823],\n  Tl: [1.71, 0.58798, 0.53854, 0.42649],\n  Pb: [1.75, 0.32386, 0.32592, 0.35729],\n  Bi: [1.82, 0.82428, 0.18732, 0.97211],\n  Po: [1.77, 0.0, 0.0, 1.0],\n  At: [0.62, 0.0, 0.0, 1.0],\n  Rn: [0.8, 1.0, 1.0, 0.0],\n  Fr: [1.0, 0.0, 0.0, 0.0],\n  Ra: [2.35, 0.42959, 0.66659, 0.34786],\n  Ac: [2.03, 0.39344, 0.62101, 0.45034],\n  Th: [1.8, 0.14893, 0.99596, 0.47106],\n  Pa: [1.63, 0.16101, 0.98387, 0.20855],\n  U: [1.56, 0.47774, 0.63362, 0.66714],\n  Np: [1.56, 0.3, 0.3, 0.3],\n  Pu: [1.64, 0.3, 0.3, 0.3],\n  Am: [1.73, 0.3, 0.3, 0.3]\n}\n","import React, { useRef } from 'react'\n\nimport { useTheme } from '@material-ui/core/styles'\n\nimport { Canvas } from '@react-three/fiber'\nimport { Center, Line, OrbitControls } from '@react-three/drei'\nimport { Vector3 } from 'three'\n\nimport {\n  IStructureDataAttrs,\n  IStructureCell,\n  element2radius,\n  element2colorThree,\n  kinds2elMap\n} from './structureUtils'\n\n/** Create a 3D scene for a single StructureData  */\nexport function Structure3DViewer(props: {\n  data: IStructureDataAttrs\n  withBox: boolean\n  images: [number, number, number][]\n  height?: number | undefined\n  width?: number | undefined\n}): JSX.Element {\n  const theme = useTheme()\n\n  // TODO I would like to add a PerspectiveCamera, to change the FoV,\n  // but can't work out how to integrate it with the OrbitControls\n  // https://github.com/pmndrs/drei/issues/402\n\n  // Note contexts are not forwarded to the canvas, unless you use https://github.com/pmndrs/drei#usecontextbridge\n  return (\n    <Canvas\n      className=\"structure-3d-viewer\"\n      style={{ height: props.height, width: props.width }}\n    >\n      <OrbitControls />\n\n      <ambientLight castShadow />\n      <pointLight position={[10, 10, 10]} />\n\n      <Center alignTop={false}>\n        <Structure\n          data={props.data}\n          images={props.images}\n          withBox={props.withBox}\n          boxColor={theme.palette.text.primary}\n        />\n      </Center>\n    </Canvas>\n  )\n}\n\nStructure3DViewer.defaultProps = {\n  withBox: true,\n  images: [[0, 0, 0]]\n}\n\n/** Render a single AiiDA StructureData */\nexport function Structure(props: {\n  data: IStructureDataAttrs\n  images: [number, number, number][]\n  withBox: boolean\n  boxColor: string\n}): JSX.Element {\n  const [[ax, ay, az], [bx, by, bz], [cx, cy, cz]] = props.data.cell\n  const sites = props.data.sites\n  const kindMap = kinds2elMap(props.data.kinds)\n  let boxes = null\n  if (props.withBox) {\n    boxes = (\n      <>\n        {props.images.map(([na, nb, nc]) => {\n          const newCell = [\n            [ax + ax * na, ay + ay * na, az + az * na],\n            [bx + bx * nb, by + by * nb, bz + bz * nb],\n            [cx + cx * nc, cy + cy * nc, cz + cz * nc]\n          ]\n          return <BoundingBox cell={newCell as IStructureCell} color={props.boxColor} />\n        })}\n      </>\n    )\n  }\n  return (\n    <>\n      {boxes}\n      {props.images.map(([na, nb, nc]) => {\n        return sites.map(site => {\n          const [px, py, pz] = site.position\n          return (\n            <Atom\n              position={\n                new Vector3(\n                  px + ax * na + bx * nb + cx * nc,\n                  py + ay * na + by * nb + cy * nc,\n                  pz + az * na + bz * nb + cz * nc\n                )\n              }\n              radius={element2radius(kindMap[site.kind_name])}\n              color={element2colorThree(kindMap[site.kind_name])}\n            />\n          )\n        })\n      })}\n    </>\n  )\n}\n\nStructure.defaultProps = {\n  withBox: true,\n  images: [[0, 0, 0]]\n}\n\n/** Render a single atoms as a sphere */\nexport function Atom(props: {\n  position: Vector3\n  radius: number\n  color: string | number | THREE.Color\n  opacity: number\n}): JSX.Element {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef() as any\n  return (\n    <mesh ref={mesh} position={props.position}>\n      <sphereBufferGeometry args={[props.radius, 30, 30]} />\n      <meshLambertMaterial\n        color={props.color}\n        transparent={true}\n        opacity={props.opacity}\n      />\n    </mesh>\n  )\n}\n\nAtom.defaultProps = {\n  radius: 1,\n  color: 'blue',\n  opacity: 0.9\n}\n\nfunction add(v1: Vector3, v2: Vector3): Vector3 {\n  return new Vector3(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z)\n}\n\n/** Draw the boundary box for the unit cell */\nfunction BoundingBox({\n  cell,\n  color\n}: {\n  cell: IStructureCell\n  color: string\n}): JSX.Element {\n  const root = new Vector3(0, 0, 0)\n  const x = new Vector3(...cell[0])\n  const y = new Vector3(...cell[1])\n  const z = new Vector3(...cell[2])\n  return (\n    <>\n      <Line\n        points={[\n          root,\n          x,\n          add(x, z),\n          z,\n          root,\n          y,\n          add(y, x),\n          add(add(y, x), z),\n          add(y, z),\n          y,\n          root\n        ]}\n        color={color}\n        lineWidth={1}\n        transparent={true}\n        opacity={0.9}\n        dashed={true}\n      />\n      <Line points={[z, add(y, z)]} color={color} lineWidth={1} dashed={true} />\n      <Line\n        points={[add(x, z), add(add(y, x), z)]}\n        color={color}\n        lineWidth={1}\n        dashed={true}\n      />\n    </>\n  )\n}\n\nBoundingBox.defaultProps = {\n  color: 'black'\n}\n","import { DataGrid, GridColDef, GridCellParams } from '@material-ui/data-grid'\nimport { useTheme } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\n\nimport { IStructureDataAttrs, element2colorCss, kinds2elMap } from './structureUtils'\n\n/** Create a table of the atoms */\nexport function StructureTable({ data }: { data: IStructureDataAttrs }): JSX.Element {\n  const theme = useTheme()\n  const kindMap = kinds2elMap(data.kinds)\n  const columns: GridColDef[] = [\n    {\n      field: 'element',\n      headerName: 'Element',\n      width: 140,\n      renderCell: (params: GridCellParams) => {\n        const color = element2colorCss(`${params.value}`)\n        return (\n          <Avatar\n            style={{\n              backgroundColor: color,\n              color: theme.palette.getContrastText(color)\n            }}\n          >\n            {params.value}\n          </Avatar>\n        )\n      }\n    },\n    { field: 'kind', headerName: 'Kind', width: 120 },\n    { field: 'x', headerName: 'X', type: 'number' },\n    { field: 'y', headerName: 'Y', type: 'number' },\n    { field: 'z', headerName: 'Z', type: 'number' }\n  ]\n  const rows = data.sites.map((site, index) => {\n    return {\n      id: index,\n      element: kindMap[site.kind_name],\n      kind: site.kind_name,\n      x: site.position[0],\n      y: site.position[0],\n      z: site.position[0]\n    }\n  })\n  return (\n    <div style={{ width: '100%' }} className=\"structure-table\">\n      <DataGrid autoHeight rows={rows} columns={columns} />\n    </div>\n  )\n}\n","// Implementation of https://github.com/Materials-Consortia/OPTIMADE/blob/master/optimade.rst\n\n// we take the types from https://github.com/tilde-lab/optimade-client/blob/main/src/types.ts\n// but the actual API is not exactly what we want\nimport { Types } from 'optimade'\n\n// This is the whole process:\n// 1. Get provider JSON (https://providers.optimade.org/providers.json)\n// 2. Get version from `meta.api_version`\n// 3. For each provider in `data`, if they have a non-null `attributes.base_url`\n// 4. Go to `attributes.base_url` + version + '/info' and check they have 'links' in attributes.available_endpoints, if so\n// 5. Go to `attributes.base_url` + version + '/links' go though `data` to find `attributes.base_url` (but note the last one is usually a backward link to https://providers.optimade.org)\n// 6. For these now go to `attributes.base_url` + version + '/structures'\n\n// but to start we will skip a few steps, and provide only some know final URLS\nconst StructureURLs = {\n  cod: 'https://www.crystallography.net/cod/optimade',\n  omdb: 'http://optimade.openmaterialsdb.se/',\n  tcod: 'https://www.crystallography.net/tcod/optimade',\n  oqmd: 'http://oqmd.org/optimade',\n  odbx: 'https://optimade.odbx.science'\n} as { [key: string]: string }\n\nexport const formulaPattern = new RegExp('^[\\\\sa-zA-Z0-9]+$')\n\nfunction appendUrl(url: string, tail: string): string {\n  return url.replace(/\\/$/, '') + '/' + tail.replace(/^\\//, '')\n}\n\n// A number of optimade providers do not supply the header `Access-Control-Allow-Origin $http_origin` in their responses\n// So we must go through a proxy (see https://javascript.info/fetch-crossorigin)\nfunction addCorsProxy(url: string, proxy = 'https://cors.optimade.org/'): string {\n  return appendUrl(proxy, url.replace(/^https?:\\/\\//, ''))\n}\n\nfunction getApiVersionPath(providers: Types.ProvidersResponse): string {\n  if (!providers.meta?.api_version) {\n    return ''\n  }\n  return `/v${providers.meta.api_version.charAt(0)}`\n}\n\nfunction providersResponse2Map(providers: Types.ProvidersResponse): Types.ProvidersMap {\n  return providers.data.reduce((prev, current) => {\n    prev[current.id] = current\n    return prev\n  }, {} as Types.ProvidersMap)\n}\n\nexport interface IStructureViewResponse {\n  data: {\n    type: string\n    id: string\n    attributes: {\n      dimension_types: [number, number, number]\n      lattice_vectors: [\n        [number, number, number],\n        [number, number, number],\n        [number, number, number]\n      ]\n      cartesian_site_positions: [number, number, number][]\n      species: {\n        name: string\n        chemical_symbols: string[]\n        concentration: number[]\n        mass?: number\n        original_name?: string\n      }[]\n      species_at_sites: string[]\n    }\n  }\n  links?: Types.Links\n  meta?: Types.Meta\n}\n\nexport class OptimadeClient {\n  // Class for interfacing with Optimade\n\n  private providers: Types.ProvidersResponse = defaultProviders\n  private versionPath: string\n\n  constructor(providers?: Types.ProvidersResponse) {\n    if (providers) {\n      this.providers = providers\n    }\n    this.versionPath = getApiVersionPath(this.providers)\n  }\n\n  async getStructureProviders(): Promise<Types.Provider[]> {\n    const providers = providersResponse2Map(this.providers)\n    return new Promise(function (resolve) {\n      resolve(Object.keys(StructureURLs).map(value => providers[value]))\n    })\n  }\n\n  async getStructures(\n    providerId?: string,\n    filterFormula: string | null = null,\n    exactFilter = false,\n    page = 1,\n    pageLimit = 10\n  ): Promise<{\n    structures: Types.Structure[]\n    url?: string\n    total?: number\n  }> {\n    // Note COD errors for a page limit greater than 10\n    if (!providerId) {\n      return { structures: [] }\n    }\n    const urlBase = addCorsProxy(StructureURLs[providerId]) // TODO if does not exist\n    const urlFull = appendUrl(appendUrl(urlBase, this.versionPath), '/structures')\n\n    // see https://github.com/Materials-Consortia/OPTIMADE/blob/master/optimade.rst#the-filter-language-syntax\n    let filter = ''\n    if (!filterFormula) {\n    } else if (!formulaPattern.test(filterFormula)) {\n      console.error(`Formula filter disallowed: ${filterFormula}`)\n    } else if (exactFilter) {\n      filter = `&filter=chemical_formula_descriptive%20=%20%22${filterFormula}%22`\n    } else {\n      filter = `&filter=chemical_formula_descriptive%20CONTAINS%20%22${filterFormula}%22`\n    }\n    const fields = 'last_modified,dimension_types,nsites,chemical_formula_descriptive'\n\n    const response = await fetch(\n      `${urlFull}?page_number=${page}&page_limit=${pageLimit}${filter}&sort=attributes.chemical_formula_descriptive&response_fields=${fields}`,\n      { headers: { origin: 'https://chrisjsewell.github.io/react-aiida-app' } } // required for the cors proxy\n    )\n    const responseJson = (await response.json()) as Types.StructuresResponse\n\n    return {\n      url: response.url,\n      structures: responseJson.data,\n      total: responseJson?.meta?.data_returned\n    }\n  }\n\n  /** Return single structure with attributes required for 3D rendering */\n  async getStructureView(\n    providerId: string,\n    structureId: string\n  ): Promise<{\n    data: IStructureViewResponse\n    url?: string\n  } | null> {\n    if (!providerId || !structureId) {\n      return null\n    }\n    const urlBase = addCorsProxy(StructureURLs[providerId]) // TODO if does not exist\n    const urlFull = appendUrl(\n      appendUrl(urlBase, this.versionPath),\n      `/structures/${structureId}`\n    )\n\n    const fields =\n      'dimension_types,lattice_vectors,cartesian_site_positions,species,species_at_sites'\n\n    const response = await fetch(\n      `${urlFull}?response_fields=${fields}`,\n      { headers: { origin: 'https://chrisjsewell.github.io/react-aiida-app' } } // required for the cors proxy\n    )\n    const responseJson = (await response.json()) as IStructureViewResponse\n\n    return {\n      url: response.url,\n      data: responseJson\n    }\n  }\n}\n\n// <link>/structures/<id>?response_fields=lattice_vectors,cartesian_site_positions,structure_features,species,species_at_sites\n\n// Copied from https://providers.optimade.org/providers.json\nconst defaultProviders = {\n  meta: {\n    api_version: '1.0.0',\n    query: {\n      representation: '/links'\n    },\n    more_data_available: false,\n    schema: 'https://schemas.optimade.org/openapi/v1.0/optimade_index.json',\n    data_returned: 0,\n    data_available: 0\n  },\n  data: [\n    {\n      type: 'links',\n      id: 'aiida',\n      attributes: {\n        name: 'AiiDA',\n        description:\n          'Automated Interactive Infrastructure and Database for Computational Science (AiiDA)',\n        base_url: null,\n        homepage: 'http://www.aiida.net',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'aflow',\n      attributes: {\n        name: 'AFLOW',\n        description:\n          'Automatic FLOW (AFLOW) database for computational materials science',\n        base_url: 'https://providers.optimade.org/index-metadbs/aflow',\n        homepage: 'http://aflow.org',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'cod',\n      attributes: {\n        name: 'Crystallography Open Database',\n        description:\n          'Open-access collection of crystal structures of organic, inorganic, metal-organics compounds and minerals, excluding biopolymers',\n        base_url: 'http://providers.optimade.org/index-metadbs/cod',\n        homepage: 'https://www.crystallography.net/cod',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'exmpl',\n      attributes: {\n        name: 'Example provider',\n        description:\n          'Provider used for examples, not to be assigned to a real database',\n        base_url: 'http://providers.optimade.org/index-metadbs/exmpl',\n        homepage: 'https://example.com',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'httk',\n      attributes: {\n        name: 'The High-Throughput Toolkit',\n        description:\n          'Prefix for implementation-specific identifiers used in the httk implementation at http://httk.org/',\n        base_url: null,\n        homepage: null,\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'matcloud',\n      attributes: {\n        name: 'MatCloud',\n        description:\n          'A high-throughput computing platform integrating data, simulation and supercomputing.',\n        base_url: 'https://providers.optimade.org/index-metadbs/matcloud',\n        homepage: 'http://matcloud.cnic.cn',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'mcloud',\n      attributes: {\n        name: 'Materials Cloud',\n        description:\n          'A platform for Open Science built for seamless sharing of resources in computational materials science',\n        base_url: 'https://www.materialscloud.org/optimade',\n        homepage: 'https://www.materialscloud.org',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'mp',\n      attributes: {\n        name: 'The Materials Project',\n        description:\n          'An open database of computed materials properties to accelerate materials discovery and design',\n        base_url: 'http://providers.optimade.org/index-metadbs/mp',\n        homepage: 'https://www.materialsproject.org',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'mpds',\n      attributes: {\n        name: 'Materials Platform for Data Science',\n        description:\n          'A highly curated Pauling File dataset based on ~0.5M publications and backing up Springer Materials, ICDD PDF, ASM APD, MedeA, Pearson Crystal Data, AtomWork Advanced, etc.',\n        base_url: 'https://providers.optimade.org/index-metadbs/mpds',\n        homepage: 'https://mpds.io',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'nmd',\n      attributes: {\n        name: 'novel materials discovery (NOMAD)',\n        description: 'A FAIR data sharing platform for materials science data',\n        base_url: 'https://nomad-lab.eu/prod/rae/optimade/index',\n        homepage: 'https://nomad-lab.eu',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'odbx',\n      attributes: {\n        name: 'open database of xtals',\n        description:\n          'A public database of crystal structures mostly derived from ab initio structure prediction from the group of Dr Andrew Morris at the University of Birmingham https://ajm143.github.io',\n        base_url: 'https://optimade-index.odbx.science',\n        homepage: 'https://odbx.science',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'omdb',\n      attributes: {\n        name: 'Open Materials Database',\n        description:\n          'The Open Materials Database (omdb) is a database of materials properties maintained by the developers of the High-Throughput Toolkit (httk). It enables easy access to useful materials data, in particular via programmatic interaction using this toolkit.',\n        base_url: 'https://optimade-index.openmaterialsdb.se',\n        homepage: 'http://openmaterialsdb.se',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'optimade',\n      attributes: {\n        name: 'OPTIMADE implementations and libraries',\n        description:\n          'Prefix for implementation-specific identifiers used in API implementations and libraries provided at https://github.com/Materials-Consortia',\n        base_url: null,\n        homepage: 'https://www.optimade.org',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'oqmd',\n      attributes: {\n        name: 'The Open Quantum Materials Database (OQMD)',\n        description:\n          'The OQMD is a database of DFT calculated thermodynamic and structural properties of materials',\n        base_url: 'http://providers.optimade.org/index-metadbs/oqmd',\n        homepage: 'http://oqmd.org',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'jarvis',\n      attributes: {\n        name: 'Joint Automated Repository for Various Integrated Simulations (JARVIS)',\n        description:\n          'JARVIS is a repository designed to automate materials discovery using classical force-field, density functional theory, machine learning calculations and experiments.',\n        base_url: null,\n        homepage: 'https://jarvis.nist.gov',\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'pcod',\n      attributes: {\n        name: 'Predicted Crystallography Open Database',\n        description: '',\n        base_url: null,\n        homepage: null,\n        link_type: 'external'\n      }\n    },\n    {\n      type: 'links',\n      id: 'tcod',\n      attributes: {\n        name: 'Theoretical Crystallography Open Database',\n        description:\n          'Open-access collection of theoretically calculated or refined crystal structures of organic, inorganic, metal-organic compounds and minerals, excluding biopolymers',\n        base_url: 'http://providers.optimade.org/index-metadbs/tcod',\n        homepage: 'https://www.crystallography.net/tcod',\n        link_type: 'external'\n      }\n    }\n  ]\n} as Types.ProvidersResponse\n\nexport default OptimadeClient\n","import React, { useContext, useState, useRef } from 'react'\n\nimport {\n  Box,\n  Checkbox,\n  CircularProgress,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Slider,\n  Tabs,\n  Tab,\n  TextField,\n  Typography\n} from '@material-ui/core'\n\nimport { useQuery } from 'react-query'\nimport { ResizableBox, ResizeCallbackData } from 'react-resizable'\n\nimport { AiidaSettingsContext, getNode, uuidPattern } from '../clients/aiidaClient'\nimport { useLocalStorage } from '../hooks'\nimport { LocalStorageKeys } from '../constants'\nimport { IStructureDataAttrs, vectorLength } from './structureUtils'\nimport { Structure3DViewer } from './structure3DViewer'\nimport { StructureTable } from './structureTable'\nimport OptimadeClient from '../clients/optimadeClient'\n\n/** Selector for a structure, plus visualisers */\nexport function StructurePanel({ initTab }: { initTab?: number }): JSX.Element {\n  const [tabIndex, setTabIndex] = React.useState(initTab || 0)\n\n  const handleChange = (event: React.ChangeEvent<any>, value: number) => {\n    setTabIndex(value)\n  }\n\n  return (\n    <>\n      <Tabs\n        value={tabIndex}\n        onChange={handleChange}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        variant=\"fullWidth\"\n        aria-label=\"full width tabs example\"\n      >\n        <Tab label=\"AiiDA\" />\n        <Tab label=\"Optimade\" />\n      </Tabs>\n      <TabPanel value={tabIndex} index={0}>\n        <StructurePanelAiiDA />\n      </TabPanel>\n      <TabPanel value={tabIndex} index={1}>\n        <StructurePanelOptimade />\n      </TabPanel>\n    </>\n  )\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  )\n}\n\nexport function StructurePanelAiiDA(): JSX.Element {\n  const [rootUUID, setrootUUID] = useLocalStorage(\n    LocalStorageKeys.aiidaStructureUUID,\n    null as null | string\n  )\n  const handleUUIDChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setrootUUID(event.target.value)\n  }\n\n  const aiidaSettings = useContext(AiidaSettingsContext)\n\n  const result = useQuery(\n    [aiidaSettings.baseUrl, 'node', rootUUID],\n    () => getNode(aiidaSettings.baseUrl, rootUUID),\n    { enabled: aiidaSettings.baseUrl !== null }\n  )\n\n  let view = null as null | JSX.Element\n  let uuidErrorMessage: string | undefined = undefined\n  if (result.data) {\n    // check the data is actually StructureData\n    if (result.data.attributes.cell && result.data.attributes.sites) {\n      view = <StructurePanelBase node={result.data.attributes as IStructureDataAttrs} />\n    } else {\n      uuidErrorMessage = 'UUID is not a StructureData'\n    }\n  } else if (result.isLoading) {\n    view = <CircularProgress />\n  } else if (result.isError) {\n    uuidErrorMessage = `${result.error}`\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"StructureData UUID\"\n        value={rootUUID || ''}\n        onChange={handleUUIDChange}\n        error={rootUUID ? !uuidPattern.test(rootUUID) || !!uuidErrorMessage : false}\n        helperText={uuidErrorMessage}\n        fullWidth\n        style={{ paddingBottom: 10 }}\n      />\n      {view}\n    </>\n  )\n}\n\nexport function StructurePanelOptimade(): JSX.Element {\n  const [provider, setProvider] = useLocalStorage(\n    LocalStorageKeys.optimadeStructureProvider,\n    ''\n  )\n  const [id, setID] = useLocalStorage(LocalStorageKeys.optimadeStructureId, '')\n\n  const resultProviders = useQuery(['optimade', 'providers'], () =>\n    new OptimadeClient().getStructureProviders()\n  )\n  const resultStructure = useQuery(['optimade', 'structure', provider, id], () =>\n    new OptimadeClient().getStructureView(provider, id)\n  )\n\n  let providerItems = [] as JSX.Element[]\n  if (resultProviders.data) {\n    providerItems = resultProviders.data.map(value => (\n      <MenuItem key={value.id} value={value.id}>\n        {value.attributes.name}\n      </MenuItem>\n    ))\n  }\n\n  let view = null as null | JSX.Element\n  let uuidErrorMessage: string | undefined = undefined\n  if (resultStructure.data?.data) {\n    try {\n      const data = resultStructure.data.data.data\n      const pbc = data.attributes.dimension_types || [1, 1, 1]\n      const nodeData = {\n        cell: data.attributes.lattice_vectors,\n        pbc1: !!pbc[0],\n        pbc2: !!pbc[1],\n        pbc3: !!pbc[2],\n        sites: data.attributes.cartesian_site_positions.map((p, i) => {\n          return { position: p, kind_name: data.attributes.species_at_sites[i] }\n        }),\n        kinds: data.attributes.species.map(s => {\n          return {\n            name: s.name,\n            mass: s.mass || 0,\n            symbols: s.chemical_symbols,\n            weights: s.concentration\n          }\n        })\n      }\n      view = <StructurePanelBase node={nodeData as IStructureDataAttrs} />\n    } catch (err) {\n      uuidErrorMessage = `Fetch failed: ${err}`\n    }\n  } else if (resultStructure.isLoading) {\n    view = <CircularProgress />\n  } else if (resultStructure.isError) {\n    uuidErrorMessage = `${resultStructure.error}`\n  }\n\n  return (\n    <>\n      <Grid container spacing={4} alignItems=\"center\">\n        <Grid item sm={6}>\n          <FormControl fullWidth>\n            <InputLabel id=\"optimade-provider-view-select-label\">Provider</InputLabel>\n            <Select\n              id=\"optimade-provider-view-select\"\n              value={provider || ''}\n              onChange={(event: React.ChangeEvent<{ value: unknown | string }>) => {\n                setProvider(!event.target.value ? '' : (event.target.value as string))\n              }}\n            >\n              {providerItems}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item sm={6}>\n          <TextField\n            label=\"Structure ID\"\n            value={id}\n            onChange={(\n              event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n            ) => {\n              setID(event.target.value)\n            }}\n            error={!!uuidErrorMessage}\n            helperText={uuidErrorMessage}\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n      {view}\n    </>\n  )\n}\n\nfunction StructurePanelBase({ node }: { node: IStructureDataAttrs }): JSX.Element {\n  // Structure viewer variables\n  const [boundingBox, setboundingBox] = useState(true)\n  const [aImages, setaImages] = useState(1)\n  const [bImages, setbImages] = useState(1)\n  const [cImages, setcImages] = useState(1)\n  const images = [] as [number, number, number][]\n  for (const an of Array.from(Array(aImages).keys())) {\n    for (const bn of Array.from(Array(bImages).keys())) {\n      for (const cn of Array.from(Array(cImages).keys())) {\n        images.push([an, bn, cn])\n      }\n    }\n  }\n\n  // TODO set the initial width to the width of the container (and change on window resize)\n  // possibly using useLayoutEffect, but how not to get into infinite feedback loop?\n  const [viewerSize, setviewerSize] = useState({ height: 200, width: 200 })\n  const viewerContainer = useRef() as any\n\n  const cell = node.cell\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <RepeatSlider name={'a'} value={aImages} setter={setaImages} />\n        <RepeatSlider name={'b'} value={bImages} setter={setbImages} />\n        <RepeatSlider name={'c'} value={cImages} setter={setcImages} />\n      </Grid>\n      <div style={{ marginTop: 10, marginBottom: undefined }} ref={viewerContainer}>\n        <ResizableBox\n          width={viewerSize.width}\n          height={viewerSize.height}\n          maxConstraints={[\n            viewerContainer?.current?.offsetWidth\n              ? viewerContainer.current.offsetWidth\n              : Infinity,\n            Infinity\n          ]}\n          resizeHandles={['s', 'e', 'se']}\n          onResize={(\n            e: React.SyntheticEvent<Element, Event>,\n            data: ResizeCallbackData\n          ) => {\n            setviewerSize({\n              width: data.size.width,\n              height: data.size.height\n            })\n          }}\n        >\n          <Structure3DViewer\n            data={node}\n            images={images}\n            withBox={boundingBox}\n            width={viewerSize.width}\n            height={viewerSize.height}\n          />\n        </ResizableBox>\n      </div>\n      <Grid container alignItems=\"center\">\n        <Grid item sm={6}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                checked={boundingBox}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setboundingBox(event.target.checked)\n                }}\n              />\n            }\n            label=\"Bounding box\"\n            labelPlacement=\"end\"\n          />\n        </Grid>\n        <Grid item sm={6}>\n          <Typography align=\"right\">\n            A: {vectorLength(cell[0])}; B: {vectorLength(cell[1])}; C:{' '}\n            {vectorLength(cell[2])}\n          </Typography>\n        </Grid>\n      </Grid>\n      <StructureTable data={node} />\n    </>\n  )\n}\n\nfunction RepeatSlider(props: {\n  name: string\n  value: number\n  setter: any\n}): JSX.Element {\n  return (\n    <Grid item sm={4}>\n      <Typography>\n        repeat <i>{props.name}</i>\n      </Typography>\n      <Slider\n        defaultValue={props.value}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={1}\n        max={8}\n        onChange={(event: React.ChangeEvent<unknown>, value: number | number[]) => {\n          props.setter(value as number)\n        }}\n      />\n    </Grid>\n  )\n}\n","import React, { useState } from 'react'\n\nimport {\n  Box,\n  Checkbox,\n  CircularProgress,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Tooltip\n} from '@material-ui/core'\nimport { Launch } from '@material-ui/icons'\nimport { Alert, Pagination } from '@material-ui/lab'\n\nimport { useQuery } from 'react-query'\n\nimport { useStyles } from '../styles'\nimport OptimadeClient, { formulaPattern } from '../clients/optimadeClient'\nimport { Types } from 'optimade'\n\nexport function OptimadePanel(): JSX.Element {\n  const classes = useStyles()\n  const resultProviders = useQuery(['optimade', 'providers'], () =>\n    new OptimadeClient().getStructureProviders()\n  )\n\n  const [provider, setProvider] = useState(undefined as undefined | string)\n  const [formulaFilter, setformulaFilter] = useState(null as null | string)\n  const [exactFilter, setexactFilter] = useState(false)\n  const [page, setPage] = useState(1)\n  const pageLimit = 10\n  const resultStructures = useQuery(\n    ['optimade', 'structures', provider, formulaFilter, exactFilter, page],\n    () =>\n      new OptimadeClient().getStructures(\n        provider,\n        formulaFilter,\n        exactFilter,\n        page,\n        pageLimit\n      ),\n    { keepPreviousData: true }\n  )\n\n  let items = [] as JSX.Element[]\n  if (resultProviders.data) {\n    items = resultProviders.data.map(value => (\n      <MenuItem value={value.id}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Tooltip title={<p>{value.attributes.description}</p>}>\n            <span>{value.attributes.name} </span>\n          </Tooltip>\n          {value.attributes.homepage ? (\n            <a href={value.attributes.homepage} target=\"_blank\" rel=\"noopener\">\n              <Launch />\n            </a>\n          ) : null}\n        </Box>\n      </MenuItem>\n    ))\n  }\n\n  // Note: minHeight stops a scroll bar from appearing\n  let tableElement = (\n    <div style={{ minHeight: 100 }}>\n      <CircularProgress />\n    </div>\n  ) as undefined | JSX.Element\n  let pages = 1\n  if (resultStructures.data) {\n    pages = Math.ceil((resultStructures.data.total || pageLimit) / pageLimit)\n    if (!resultStructures.isPreviousData) {\n      tableElement = <OptimadeTable data={resultStructures.data.structures} />\n    }\n  } else if (resultStructures.isError) {\n    const error = resultStructures.error as { message: string }\n    tableElement = <Alert severity=\"error\">{error.message}</Alert>\n  }\n\n  return (\n    <Grid container alignItems=\"center\">\n      <Grid item xs={12}>\n        <FormControl fullWidth>\n          <InputLabel id=\"optimade-provider-select-label\">Provider</InputLabel>\n          <Select\n            id=\"optimade-provider-select\"\n            value={provider || ''}\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n              setProvider(event.target.value as string)\n              setPage(1)\n            }}\n          >\n            {items}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item sm={8}>\n        <TextField\n          label=\"Chemical Formula\"\n          value={formulaFilter || ''}\n          fullWidth\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setformulaFilter(event.target.value)\n          }}\n          error={formulaFilter ? !formulaPattern.test(formulaFilter) : false}\n          helperText={\n            formulaFilter && !formulaPattern.test(formulaFilter)\n              ? 'Disallowed formula pattern'\n              : undefined\n          }\n          style={{ paddingBottom: 10 }}\n        />\n      </Grid>\n      <Grid item sm={4}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              color=\"primary\"\n              checked={exactFilter}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setexactFilter(event.target.checked)\n              }}\n            />\n          }\n          label=\"Exact match\"\n          labelPlacement=\"start\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.overflowAuto}>\n        <Pagination\n          disabled={resultStructures.isPreviousData}\n          className={classes.pagination}\n          color=\"primary\"\n          count={pages}\n          page={page}\n          onChange={(event: React.ChangeEvent<unknown>, value: number) => {\n            setPage(value)\n          }}\n        />\n        {tableElement}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport function OptimadeTable({ data }: { data: Types.Structure[] }): JSX.Element {\n  return (\n    <Table className=\"optimade-table\">\n      <TableHead>\n        <TableRow key=\"_head\">\n          <TableCell>ID</TableCell>\n          <TableCell>Formula</TableCell>\n          <TableCell>Dimensions</TableCell>\n          <TableCell>Sites</TableCell>\n          <TableCell>Modified</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {(data || []).map(row => (\n          <TableRow key={row.id}>\n            <TableCell>{row.id}</TableCell>\n            <TableCell>{row.attributes?.chemical_formula_descriptive}</TableCell>\n            <TableCell>{row.attributes?.dimension_types}</TableCell>\n            <TableCell>{row.attributes?.nsites}</TableCell>\n            <TableCell>{row.attributes?.last_modified}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n","import React from 'react'\n\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Grid,\n  Paper\n} from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nimport { useStyles } from './styles'\nimport { PageKeys } from './constants'\nimport { LinkInternal } from './hooks'\nimport { StructurePanel } from './components/structurePanel'\nimport { OptimadePanel } from './components/optimadePanel'\n\nexport function PageStructures(): JSX.Element {\n  const classes = useStyles()\n  return (\n    <Grid container spacing={2} className={classes.mainGrid} direction=\"row-reverse\">\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <Accordion defaultExpanded>\n            <AccordionSummary\n              classes={{ content: classes.accordSumContent }}\n              expandIcon={<ExpandMoreIcon />}\n            >\n              <h2>Structure Visualisation</h2>\n            </AccordionSummary>\n            <AccordionDetails>\n              <div>\n                <p>\n                  This panel allows you to visualise structures within your database.\n                </p>\n                <p>\n                  Simply enter a <code>StructureData</code> UUID (you can copy one from\n                  the{' '}\n                  <LinkInternal to={PageKeys.nodeExplorer}>Node explorer</LinkInternal>\n                  ). Then you can resize the viewer, zoom in/out, rotate (left-click)\n                  and pan (right-click).\n                </p>\n                <p>\n                  You can also search for and visualise structures from an{' '}\n                  <a href=\"https://www.optimade.org\" target=\"_blank\" rel=\"noopener\">\n                    Optimade compliant database\n                  </a>\n                  . It is intended that eventually you will be able to import these\n                  structures directly into your AiiDA database.\n                </p>\n              </div>\n            </AccordionDetails>\n          </Accordion>\n          <Accordion defaultExpanded>\n            <AccordionSummary\n              classes={{ content: classes.accordSumContent }}\n              expandIcon={<ExpandMoreIcon />}\n            >\n              <h2>Optimade Explorer</h2>\n            </AccordionSummary>\n            <AccordionDetails>\n              <OptimadePanel />\n            </AccordionDetails>\n          </Accordion>\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <StructurePanel />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n","import React, { useContext, useState } from 'react'\n\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Avatar,\n  Button,\n  CircularProgress,\n  Collapse,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Paper,\n  Typography\n} from '@material-ui/core'\nimport { useTheme } from '@material-ui/core/styles'\nimport * as MuiIcons from '@material-ui/icons'\nimport { Alert } from '@material-ui/lab'\n\nimport { useQuery } from 'react-query'\n\nimport { LocalStorageKeys } from './constants'\nimport { useStyles } from './styles'\nimport { AiidaSettingsContext, getGroups, getNode } from './clients/aiidaClient'\nimport { AiidaNodeListItem } from './components/aiidaListItems'\n\nexport function PageGroups(): JSX.Element {\n  const classes = useStyles()\n  return (\n    <Grid container spacing={2} className={classes.mainGrid} direction=\"row-reverse\">\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <Accordion defaultExpanded>\n            <AccordionSummary\n              classes={{ content: classes.accordSumContent }}\n              expandIcon={<MuiIcons.ExpandMore />}\n            >\n              <h2>Node Bookmarks</h2>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Bookmarks />\n            </AccordionDetails>\n          </Accordion>\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <Accordion defaultExpanded>\n            <AccordionSummary\n              classes={{ content: classes.accordSumContent }}\n              expandIcon={<MuiIcons.ExpandMore />}\n            >\n              <h2>Node Groups</h2>\n            </AccordionSummary>\n            <AccordionDetails>\n              <div>\n                <p>\n                  Here you can view the <code>Groups</code> in your database.\n                </p>\n                <p>\n                  the REST API does not yet support retrieving the nodes in a{' '}\n                  <code>Group</code>. It is envisaged this will be implemented soon,\n                  alongside <code>Group</code> creation/deletion and adding nodes to\n                  groups.\n                </p>\n              </div>\n            </AccordionDetails>\n            <GroupTree />\n          </Accordion>\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nfunction Bookmarks(): JSX.Element {\n  const [openWipeDialog, setOpenWipeDialog] = useState(false)\n  const result = useQuery(\n    ['bookmarks'],\n    () =>\n      JSON.parse(\n        window.localStorage.getItem(LocalStorageKeys.aiidaUUIDbookmarks) || '[]'\n      ) as string[]\n  )\n  let bookmarkTable = (\n    <List>\n      <Divider />\n    </List>\n  )\n  if (result.data) {\n    bookmarkTable = (\n      <List>\n        <Divider />\n        {result.data.map(val => (\n          <BookmarkItem uuid={val} />\n        ))}\n      </List>\n    )\n  } else if (result.isFetching) {\n    bookmarkTable = <CircularProgress />\n  }\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12}>\n        <p>This is a list of nodes that you have previously bookmarked.</p>\n        <p>\n          Currently these are held in your local browser storage, but eventually they\n          will be directly created as a <code>Group</code> on your database.\n        </p>\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            setOpenWipeDialog(true)\n          }}\n        >\n          Wipe Bookmarks\n        </Button>\n        <Dialog\n          open={openWipeDialog}\n          onClose={() => {\n            setOpenWipeDialog(false)\n          }}\n        >\n          <DialogTitle>Wipe Bookmarks</DialogTitle>\n          <DialogContent>Are you sure?</DialogContent>\n          <DialogActions>\n            {' '}\n            <Button\n              onClick={() => {\n                window.localStorage.removeItem(LocalStorageKeys.aiidaUUIDbookmarks)\n                result.refetch()\n                setOpenWipeDialog(false)\n              }}\n              color=\"primary\"\n            >\n              YES\n            </Button>\n            <Button\n              onClick={() => {\n                setOpenWipeDialog(false)\n              }}\n              color=\"primary\"\n              autoFocus\n            >\n              NO\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n      <Grid item xs={12}>\n        {bookmarkTable}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport function BookmarkItem({\n  uuid,\n  initialOpen\n}: {\n  uuid: string\n  initialOpen: boolean\n}): JSX.Element {\n  const theme = useTheme()\n  const classes = useStyles()\n  const [childOpen, setchildOpen] = useState(initialOpen)\n  const handleChildrenOpen = () => {\n    setchildOpen(!childOpen)\n  }\n  return (\n    <>\n      <ListItem button onClick={handleChildrenOpen}>\n        <ListItemText className={classes.nodeListItem} primary={uuid} />\n        {childOpen ? (\n          <MuiIcons.ExpandMore style={{ marginLeft: theme.spacing(1) }} />\n        ) : (\n          <MuiIcons.ExpandLess style={{ marginLeft: theme.spacing(1) }} />\n        )}\n      </ListItem>\n      <Collapse in={childOpen} timeout=\"auto\" mountOnEnter>\n        <BookmarkNodeItem uuid={uuid} />\n      </Collapse>\n      <Divider />\n    </>\n  )\n}\n\nBookmarkItem.defaultProps = {\n  initialOpen: false\n}\n\nexport function BookmarkNodeItem({ uuid }: { uuid: string }): JSX.Element {\n  const aiidaSettings = useContext(AiidaSettingsContext)\n  const result = useQuery(\n    [aiidaSettings.baseUrl, 'node', uuid],\n    () => getNode(aiidaSettings.baseUrl, uuid),\n    { enabled: aiidaSettings.baseUrl !== null }\n  )\n  if (result.data) {\n    return (\n      <AiidaNodeListItem\n        key={`aiida-tree-el-${result.data.uuid}`}\n        pk={result.data.id}\n        uuid={result.data.uuid}\n        mtime={result.data.mtime}\n        node_type={result.data.node_type}\n        process_type={result.data.process_type}\n        label={result.data.label}\n        indent={2}\n      />\n    )\n  } else if (result.isFetching) {\n    return <CircularProgress />\n  } else if (result.isError) {\n    return <Alert severity=\"error\">{`${result.error ? result.error : ''}`}</Alert>\n  }\n  return <Alert severity=\"info\">Disabled</Alert>\n}\n\nexport function GroupTree(): JSX.Element {\n  const theme = useTheme()\n  const classes = useStyles()\n\n  const aiidaSettings = useContext(AiidaSettingsContext)\n  const result = useQuery(\n    [aiidaSettings.baseUrl, 'groups'],\n    () => getGroups(aiidaSettings.baseUrl),\n    { enabled: aiidaSettings.baseUrl !== null }\n  )\n  let updateInfo = null\n  if (!!result.dataUpdatedAt) {\n    const date = new Date(result.dataUpdatedAt)\n    updateInfo = (\n      <Typography display=\"inline\" noWrap>\n        Updated: {date.toLocaleString()}\n      </Typography>\n    )\n  }\n  let groupTable = (\n    <List>\n      <Divider />\n    </List>\n  )\n  if (result.data) {\n    groupTable = (\n      <List>\n        <Divider />\n        {result.data.map(val => {\n          const icon = <MuiIcons.Group />\n          const title = `${val.id} ${val.label}`\n          let info = `${val.time}, ${val.type_string}`\n          if (val.description) {\n            info = info + `, ${val.description}`\n          }\n          return (\n            <>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>{icon}</Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  className={classes.nodeListItem}\n                  primary={title}\n                  secondary={info}\n                />\n              </ListItem>\n              <Divider />\n            </>\n          )\n        })}\n      </List>\n    )\n  } else if (result.isFetching) {\n    groupTable = <CircularProgress />\n  } else if (result.isError) {\n    groupTable = <Alert severity=\"error\">{`${result.error ? result.error : ''}`}</Alert>\n  }\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        color=\"default\"\n        style={{ marginRight: theme.spacing(1) }}\n        startIcon={<MuiIcons.Refresh />}\n        onClick={() => {\n          result.refetch()\n        }}\n      >\n        Refresh\n      </Button>\n      {updateInfo}\n      {groupTable}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport clsx from 'clsx'\n\nimport { ThemeProvider } from '@material-ui/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n  AppBar,\n  Divider,\n  Drawer,\n  Grid,\n  IconButton,\n  InputAdornment,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Paper,\n  TextField,\n  Toolbar,\n  Tooltip,\n  Typography,\n  useMediaQuery\n} from '@material-ui/core'\nimport * as MuiIcons from '@material-ui/icons'\nimport { Omit } from '@material-ui/types'\n\nimport {\n  Switch,\n  Route,\n  Link as RouterLink,\n  LinkProps as RouterLinkProps,\n  Redirect,\n  useLocation\n} from 'react-router-dom'\nimport { QueryClientProvider, useQuery } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nimport {\n  AiidaSettingsContext,\n  defaultRestUrl,\n  isConnected,\n  queryAiidaClient,\n  urlPattern\n} from './clients/aiidaClient'\nimport { useStyles } from './styles'\nimport { AiiDAIcon200, GitBranchIcon, OptimadeIcon } from './icons'\nimport { PageKeys, LocalStorageKeys } from './constants'\nimport { PageHome } from './PageHome'\nimport { PageNodeExplorer } from './PageNodeExplorer'\nimport { PageProvenanceGraph } from './PageProvenanceGraph'\nimport { PageStructures } from './PageStructures'\nimport { PageGroups } from './PageGroups'\nimport { SnackbarProvider, useLocalStorage } from './hooks'\n\ninterface ListItemLinkProps {\n  icon?: React.ReactElement\n  primary: string\n  to: string\n  onClick: React.MouseEventHandler<HTMLAnchorElement>\n}\n\nfunction ListItemLink(props: ListItemLinkProps) {\n  const { icon, primary, to, onClick } = props\n  const location = useLocation()\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  )\n\n  return (\n    <li>\n      <ListItem\n        button\n        component={renderLink}\n        selected={to === location.pathname}\n        onClick={onClick}\n      >\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  )\n}\n\nexport function App({ showDevTools = true }: { showDevTools?: boolean }): JSX.Element {\n  // style hooks\n  const classes = useStyles()\n\n  const [darkMode, setDarkMode] = useState(false)\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: darkMode ? 'dark' : 'light'\n        }\n      }),\n    [darkMode]\n  )\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode)\n  }\n\n  // component state for the left menu\n  const [drawerOpen, setDrawerOpen] = useState(false)\n  const handleDrawerClose = () => {\n    setDrawerOpen(false)\n  }\n\n  // component state for the AiiDA REST URL\n  // the URL is is stored, so that it persists between sessions and page refreshes\n  // we also validate to only allow http/https schema, and no ? which start the query string\n  // TODO better URL validation (to guard against attacks)\n  const [restUrlBase, setRestUrlBase] = useLocalStorage(\n    LocalStorageKeys.restUrlBase,\n    defaultRestUrl\n  )\n\n  const tabs = (\n    <List>\n      <ListItemLink\n        to={PageKeys.home}\n        primary=\"Home\"\n        icon={<MuiIcons.Home />}\n        onClick={handleDrawerClose}\n      />\n      <ListItemLink\n        to={PageKeys.nodeExplorer}\n        primary=\"Node Explorer\"\n        icon={<MuiIcons.Explore />}\n        onClick={handleDrawerClose}\n      />\n      <ListItemLink\n        to={PageKeys.provenanceGraph}\n        primary=\"Provenance Graph\"\n        icon={<GitBranchIcon />}\n        onClick={handleDrawerClose}\n      />\n      <ListItemLink\n        to={PageKeys.groups}\n        primary=\"Node Groups\"\n        icon={<MuiIcons.Bookmarks />}\n        onClick={handleDrawerClose}\n      />\n      <ListItemLink\n        to={PageKeys.structures}\n        primary=\"Structure Explorer\"\n        icon={<OptimadeIcon />}\n        onClick={handleDrawerClose}\n      />\n    </List>\n  )\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper>\n        <QueryClientProvider client={queryAiidaClient}>\n          <SnackbarProvider\n            SnackbarProps={{\n              autoHideDuration: 4000,\n              anchorOrigin: { vertical: 'bottom', horizontal: 'right' }\n            }}\n          >\n            <TopBar\n              restUrlBase={restUrlBase}\n              setRestUrlBase={setRestUrlBase}\n              drawerOpen={drawerOpen}\n              setDrawerOpen={setDrawerOpen}\n            />\n            {/* TODO use the temporary drawer on mobile */}\n            <Drawer\n              variant=\"permanent\"\n              className={clsx(classes.drawer, {\n                [classes.drawerOpen]: drawerOpen,\n                [classes.drawerClose]: !drawerOpen\n              })}\n              classes={{\n                paper: clsx({\n                  [classes.drawerOpen]: drawerOpen,\n                  [classes.drawerClose]: !drawerOpen\n                })\n              }}\n            >\n              <div className={classes.toolbar}>\n                <Tooltip title=\"Toggle light/dark theme\">\n                  <IconButton onClick={toggleDarkMode}>\n                    {darkMode ? <MuiIcons.Brightness4 /> : <MuiIcons.BrightnessHigh />}\n                  </IconButton>\n                </Tooltip>\n                <IconButton onClick={handleDrawerClose}>\n                  {theme.direction === 'rtl' ? (\n                    <MuiIcons.ChevronRight />\n                  ) : (\n                    <MuiIcons.ChevronLeft />\n                  )}\n                </IconButton>\n              </div>\n              <Divider />\n              {tabs}\n            </Drawer>\n\n            <AiidaSettingsContext.Provider\n              value={{ baseUrl: urlPattern.test(restUrlBase) ? restUrlBase : null }}\n            >\n              <Switch>\n                <Route exact path={PageKeys.home} component={PageHome} />\n                <Route path={PageKeys.nodeExplorer} component={PageNodeExplorer} />\n                <Route\n                  path={PageKeys.provenanceGraph}\n                  component={PageProvenanceGraph}\n                />\n                <Route path={PageKeys.structures} component={PageStructures} />\n                <Route path={PageKeys.groups} component={PageGroups} />\n\n                <Route path={PageKeys.unknown} component={NotFound} />\n                <Redirect to={PageKeys.unknown} />\n              </Switch>\n            </AiidaSettingsContext.Provider>\n\n            {showDevTools ? <ReactQueryDevtools initialIsOpen={false} /> : null}\n          </SnackbarProvider>\n        </QueryClientProvider>\n      </Paper>\n    </ThemeProvider>\n  )\n}\n\nfunction TopBar({\n  restUrlBase,\n  setRestUrlBase,\n  drawerOpen,\n  setDrawerOpen\n}: {\n  restUrlBase: string\n  setRestUrlBase: React.Dispatch<React.SetStateAction<string>>\n  drawerOpen: boolean\n  setDrawerOpen: React.Dispatch<React.SetStateAction<boolean>>\n}): JSX.Element {\n  const classes = useStyles()\n  const theme = useTheme()\n  const isDesktop = useMediaQuery(theme.breakpoints.up('sm'))\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true)\n  }\n  const handleUrlChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRestUrlBase(event.target.value)\n  }\n\n  const title = isDesktop ? (\n    <Typography id=\"app-header\" variant=\"h6\" noWrap>\n      AiiDA Dashboard\n    </Typography>\n  ) : null\n\n  return (\n    <AppBar\n      position=\"sticky\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: drawerOpen\n      })}\n    >\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          onClick={handleDrawerOpen}\n          className={clsx(classes.menuButton, {\n            [classes.hide]: drawerOpen\n          })}\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n        >\n          <MuiIcons.Menu />\n        </IconButton>\n        <div className={classes.aiidaIcon}>\n          <AiiDAIcon200 width={40} height={40} arcColor={theme.palette.text.primary} />\n        </div>\n        {title}\n        <div className={classes.flexGrow} />\n        <TextField\n          id=\"rest-url\"\n          className={classes.inputRestUrl}\n          label=\"REST URL\"\n          value={restUrlBase}\n          error={!urlPattern.test(restUrlBase)}\n          helperText={urlPattern.test(restUrlBase) ? undefined : 'Invalid URL'}\n          onChange={handleUrlChange}\n          autoComplete={defaultRestUrl}\n          InputProps={{\n            className: classes.inputRestUrlText,\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <RestUrlConnection\n                  url={urlPattern.test(restUrlBase) ? restUrlBase : null}\n                />\n              </InputAdornment>\n            )\n          }}\n        />\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nfunction NotFound(): JSX.Element {\n  const classes = useStyles()\n  return (\n    <Grid container spacing={4} className={classes.mainGrid}>\n      <Grid item>\n        <div>\n          <h1>404 - Not Found!</h1>\n          <RouterLink to=\"/\">Go Home</RouterLink>\n        </div>\n      </Grid>\n    </Grid>\n  )\n}\n\n// TODO periodically update connection status\nfunction RestUrlConnection({\n  url,\n  className = undefined\n}: {\n  url: string | null\n  className?: string\n}): JSX.Element {\n  const result = useQuery([url, 'connected'], () => isConnected(url))\n  // TODO hover over info/error?\n  if (result.data) {\n    return <MuiIcons.CheckCircle className={className} />\n  }\n  return <MuiIcons.Cancel color=\"error\" className={className} />\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport { HashRouter } from 'react-router-dom'\nimport { App } from './App'\n\nimport './index.css'\nimport './reactResizable.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}