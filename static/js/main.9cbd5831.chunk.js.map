{"version":3,"sources":["aiidaClient.ts","styles.ts","PageHome.tsx","icons.tsx","nodeTree.tsx","PageNodes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["queryClient","QueryClient","defaultRestUrl","urlPattern","RegExp","AiidaSettingsContext","React","createContext","baseUrl","a","fetch","response","ok","nodeType","page","perPage","totalCount","parseInt","headers","get","json","responseJson","nodes","data","uuidPattern","uuid","test","TypeError","undefined","Object","values","drawerWidth","useStyles","makeStyles","theme","createStyles","root","flexGrow","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","spacing","title","inputRestUrlIcon","inputRestUrl","minWidth","inputRestUrlText","color","hide","display","overflowAuto","overflow","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","mainGrid","paddingTop","paddingLeft","paddingRight","paper","palette","text","secondary","formControl","margin","InlineIcon","verticalAlign","padTop","PageHome","classes","Grid","container","className","item","xs","sm","md","Paper","variant","IntroBox","GettingStartedBox","DetailedBox","href","language","type","id","AiiDAIcon200","height","viewBox","xmlns","preserveAspectRatio","fill","y","x","transform","d","RocketIcon","SvgIcon","fillRule","GitBranchIcon","fill-rule","tree","maxWidth","backgroundColor","background","refresh","pagination","paddingBottom","listChip","marginBottom","float","nested","initialMouseState","mouseX","mouseY","AiidaXNodeTree","nodePrefix","useState","setPage","aiidaSettings","useContext","result","useQuery","getNodes","enabled","element","CircularProgress","pages","isIdle","Alert","severity","icon","Math","ceil","List","component","aria-label","map","value","AiidaXElement","pk","elementName","node_type","split","slice","join","info","mtime","process_type","tooltip","procLabel","attributes","process_label","procState","process_state","procExit","exit_status","isError","error","message","updateInfo","dataUpdatedAt","date","Date","toLocaleString","Button","startIcon","onClick","refetch","Pagination","count","onChange","event","ElementIconMap","props","key","open","setOpen","contextPosition","setContextPosition","handleContextClose","preventDefault","stopPropagation","Tooltip","Fragment","includes","Chip","label","ListItem","button","onContextMenu","clientX","clientY","ListItemAvatar","Avatar","ListItemText","primary","keepMounted","onClose","anchorReference","anchorPosition","top","left","MenuItem","copy","Collapse","in","timeout","disablePadding","ListItemIcon","Divider","light","PageProcesses","setnodePrefix","nodeFieldsUUID","setnodeFieldsUUID","direction","Accordion","defaultExpanded","AccordionSummary","expandIcon","AccordionDetails","NodeExplorerIntroduction","NodeExplorerFilters","NodeExplorerAttributes","nodePrefixesDefault","getNodeStatistics","nodePrefixes","types","FormControl","InputLabel","Select","labelId","target","entries","sort","name","getNode","view","src","collapseStringsAfterLength","isFetching","TextField","helperText","fullWidth","ListItemLink","to","renderLink","useMemo","forwardRef","itemProps","ref","App","showDevTools","useTheme","setDrawerOpen","localStorage","getItem","restUrlBase","setRestUrlBase","QueryClientProvider","client","AppBar","position","clsx","Toolbar","IconButton","edge","Typography","RestUrlConnection","url","setItem","autoComplete","InputProps","Drawer","Provider","exact","path","NotFound","initialIsOpen","isConnected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cbd5831.chunk.js","sourcesContent":["import React from 'react';\nimport { QueryClient } from 'react-query'\n\nexport const queryClient = new QueryClient()\nexport const defaultRestUrl = \"http://127.0.0.1:5000/api/v4\"\n// TODO move validation to aiidaClient functions?\nexport const urlPattern = new RegExp('^https?:\\\\/\\\\/[^\\\\?]+$')\nexport const AiidaSettingsContext = React.createContext({baseUrl: defaultRestUrl} as {baseUrl: null | string})\n\nexport interface IAiidaRestResponse {\n    // The base attributes for the rest response\n    data: any\n    id: null\n    method: \"GET\" | \"POST\"\n    path: string\n    query_string: string\n    resource_type: string\n    url: string\n    url_root: string\n}\n\nexport interface IAiidaRestNode {\n    ctime: string\n    full_type: string\n    id: number\n    label: string\n    mtime: string\n    node_type: string\n    process_type: string\n    user_id: number\n    uuid: string\n    attributes: {\n        process_state?:\n        | 'created'\n        | 'running'\n        | 'waiting'\n        | 'finished'\n        | 'excepted'\n        | 'killed'\n        process_label?: string\n        exit_status?: number\n    }\n}\n\nexport interface IAiidaRestResponseNode extends IAiidaRestResponse  {\n    data: { nodes: IAiidaRestNode[] }\n}\n\nexport interface IAiidaRestNodeStatistics {\n    total: number\n    ctime_by_day: {[key: string]: number}\n    types: {[key: string]: number}\n}\n\nexport interface IAiidaRestResponseNodeStatistics extends IAiidaRestResponse  {\n    data: IAiidaRestNodeStatistics\n}\n\n\nexport async function isConnected(baseUrl: string | null): Promise<boolean> {\n    if (baseUrl === null) {\n        return false\n    }\n    const response = await fetch(`${baseUrl}`)\n    return response.ok\n}\n\n\nexport async function getNodes(baseUrl: string | null, nodeType: string, page: number): Promise<null | { nodes: IAiidaRestNode[], totalCount: number, perPage: number }> {\n    if (baseUrl === null) {\n        return null\n    }\n    const perPage = 20\n    // TODO better url join?\n    const response = await fetch(`${baseUrl}/nodes/page/${page}?perpage=${perPage}&orderby=-mtime&node_type=like=%22${nodeType}%%22&attributes=true&attributes_filter=process_label,process_state,exit_status`)\n    // TODO handle errors\n    const totalCount = parseInt(response.headers.get('x-total-count') || '0')\n    const responseJson = (await response.json()) as IAiidaRestResponseNode\n    return { nodes: responseJson.data.nodes, totalCount, perPage }\n}\n\n\nexport async function getNodeStatistics(baseUrl: string | null): Promise<null | IAiidaRestNodeStatistics> {\n    if (baseUrl === null) {\n        return null\n    }\n    const response = await fetch(`${baseUrl}/nodes/statistics/`)\n    const responseJson = (await response.json()) as IAiidaRestResponseNodeStatistics\n    return responseJson.data\n}\n\nconst uuidPattern = new RegExp('^[-a-zA-Z0-9]+$')\n\nexport async function getNode(baseUrl: string | null, uuid: string | null): Promise<null | IAiidaRestNode> {\n    if (baseUrl === null || !uuid) {\n        return null\n    }\n    if (!uuidPattern.test(uuid)) {\n        throw new TypeError('UUID does not match required format')\n    }\n    const response = await fetch(`${baseUrl}/nodes/${uuid}?attributes=true&extras=true`)\n    const responseJson = (await response.json()) as IAiidaRestResponse\n    return responseJson.data?.nodes === undefined ? null : Object.values(responseJson.data?.nodes)[0] as IAiidaRestNode\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\n// TODO use a spacer component instead of margins etc\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    inputRestUrlIcon: {\n      marginRight: theme.spacing(1)\n    },\n    inputRestUrl: {\n      marginRight: theme.spacing(2),\n      minWidth: 200,\n    },\n    inputRestUrlText: {\n      color: \"white\"\n    },\n    hide: {\n      display: 'none',\n    },\n    overflowAuto: {\n      overflow: 'auto',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    mainGrid: {\n      paddingTop: theme.spacing(1),\n      paddingLeft: theme.spacing(10),\n      paddingRight: theme.spacing(10)\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 200,\n    },\n    InlineIcon: {\n      verticalAlign: 'middle',\n      display: 'inline-flex',\n    },\n    padTop: {\n      paddingTop: theme.spacing(2),\n    }\n  }),\n);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport * as MuiIcons from '@material-ui/icons';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n\nimport { useStyles } from './styles';\n\n\nexport function PageHome(): JSX.Element {\n  const classes = useStyles();\n  return (\n    <Grid container spacing={2} className={classes.mainGrid}>\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <IntroBox />\n        </Paper>\n      </Grid>\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <GettingStartedBox />\n        </Paper>\n      </Grid>\n      <Grid item xs={12} sm={12} md={12}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <DetailedBox />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport function IntroBox(): JSX.Element {\n  return (\n    <div>\n      <h2>Introduction</h2>\n      <p>\n        This is a demonstration of the AiiDA Dashboard:<br />\n        A web-based UI for interfacing with AiiDA, that can also act as an extension for JupyterLab.\n      </p>\n      <p>\n        AiiDA Dashboard uses industry leading libraries, to create a beautiful and responsive UI:\n      </p>\n      <ul>\n        <li><a href=\"https://reactjs.org/\">React</a>: A library for building user interfaces, maintained by Facebook and with users including Whatsapp, Dropbox, Uber and Netflix.</li>\n        <li><a href=\"https://material-ui.com\">Material-UI</a>: A React component library that implements <a href=\"https://material.io/design\">Google’s Material Design</a> guidelines.</li>\n        <li><a href=\"https://react-query.tanstack.com/\">react-query</a>: A React component for synchronizing server data (from AiiDA) with the UI.</li>\n      </ul>\n      <p>\n        AiiDA Dashboard can be used as a standalone Web UI, or it also provides React components and facilitates wrapping into a JupyterLab <a href=\"https://jupyterlab.readthedocs.io/en/stable/extension/virtualdom.html\">extension widget</a>.\n      </p>\n    </div>\n  )\n}\n\nexport function GettingStartedBox(): JSX.Element {\n  const classes = useStyles();\n  return (\n    <div>\n      <h2>Getting Started</h2>\n      <p>\n        To use this application, you need to be able to connect to a running AiiDA REST API server.\n      </p>\n      <p>\n        You must have aiida installed with the REST dependencies:\n      </p>\n      <SyntaxHighlighter language=\"bash\">\n        {\"$ pip install aiida-core[rest]~=1.6.3\"}\n      </SyntaxHighlighter>\n      <p>\n        Then (after setting up a profile) you can start your REST server:\n      </p>\n      <SyntaxHighlighter language=\"bash\">\n        {\"$ verdi -p myprofile restapi\\n * REST API running on http://127.0.0.1:5000/api/v4\"}\n      </SyntaxHighlighter>\n      <p>\n        Take this URL and paste it into the \"REST URL\" box at the top-right of this page.\n        If a connection is available, then you should see the icon turn to:  <MuiIcons.CheckCircle className={classes.InlineIcon} />\n      </p>\n      <p>\n        Now try the tabs on the left of this page!\n      </p>\n    </div>\n  )\n}\n\nexport function DetailedBox(): JSX.Element {\n  return (\n    <div>\n      <h2>Project Discussion</h2>\n      <p>\n        Source repository: <a href=\"https://github.com/chrisjsewell/react-aiida-app\">https://github.com/chrisjsewell/react-aiida-app</a>\n      </p>\n      <p>This project is a continuation of <a href=\"https://github.com/chrisjsewell/jlab_aiidatree\">jlab_aiidatree</a>, in which we built a working prototype for a JupyterLab extension to interact with AiiDA.</p>\n      <p>During development of <code>jlab_aiidatree</code> it was noted that you can embed <a href=\"https://reactjs.org/\">React components</a> inside of JupyterLab (see <a href=\"https://jupyterlab.readthedocs.io/en/stable/extension/virtualdom.html\">JupyterLab/React</a>).</p>\n      <p>The goal, therefore, is that we can develop this package as a standalone app (which could also be utilised directly via a web server), but also use it as a dependency to generate most of the JupyterLab extension, via React components.</p>\n      <p>The benefit of also using th app within JupyterLab, is:</p>\n      <ol type=\"1\">\n        <li>It provides a platform within which to run the app locally, without having to host it directly</li>\n        <li>It allows us an alternate route to interface with AiiDA: via the “private” REST API interface between the JupyterLab backend and frontend. Using this REST API, will allow us easy access to parts of the AiiDA API that are yet to be exposed in REST, whilst maintaining that formal protocol (enforcing separation of concerns). We can then use this to essentially prototype additions to the AiiDA REST API.</li>\n        <li>It provides the possible to integrate with other aspects of the Jupyter framework (e.g. Notebooks)</li>\n      </ol>\n      <h3 id=\"about-react\">About React</h3>\n      <p>React is an industry leading library, for creating beautiful and responsive UIs, maintained by Facebook and with users including Whatsapp, Dropbox, Uber and Netflix. We also utilise other “best-practice” React components:</p>\n      <ul>\n        <li><a href=\"https://material-ui.com\">Material-UI</a>: A React component library that implements Google’s <a href=\"https://material.io/design\">Material Design guidelines</a></li>\n        <li><a href=\"https://react-query.tanstack.com/\">react-query</a>: A React component for synchronizing server data (from AiiDA) with the UI.</li>\n      </ul>\n      <p>React itself is really user-friendly to get started with, even with only a small familiarity with HTML and JavaScript, see <a href=\"https://reactjs.org/tutorial/tutorial.html\">https://reactjs.org/tutorial/tutorial.html</a>. Once learned, it is also incredibly intuitive to generate web elements with, using the <a href=\"https://reactjs.org/docs/introducing-jsx.html\"><code>.jsx</code> file format</a>. For example a simple React component would look like:</p>\n      <SyntaxHighlighter language=\"jsx\">\n        {\n          `function MyComponent(props) {\n  return (\n    <div>\n      <h1>Hello, world!</h1>\n      <p>Here is a dynamic value: {props.value}</p>\n    </div>\n  )\n}`\n        }\n      </SyntaxHighlighter>\n      <h3 id=\"this-app-vs-materials-cloud-explore\">This app vs Materials Cloud Explore</h3>\n      <p>Note, initial features of this app are quite similar to <a href=\"https://www.materialscloud.org/explore/connect\">https://www.materialscloud.org/explore/connect</a>: using the AiiDA REST API as a backend for visualising its data. However, this is built with <a href=\"https://angularjs.org/\">https://angularjs.org/</a> which, although also well used in industry, has two major drawbacks for our use case:</p>\n      <ol type=\"1\">\n        <li>You cannot integrate it with JupyterLab (see benefits above)</li>\n        <li>It does not have the re-usable component infrastructure of React, which should allow us to eventually build an extensible app with “pluggable” extensions.</li>\n      </ol>\n      <h3 id=\"this-app-vs-aiidalab\">This app vs AiiDALab</h3>\n      <p><a href=\"https://www.materialscloud.org/work/aiidalab\">AiiDALab</a> uses the Jupyter Notebook server to build its frontend, via <a href=\"https://ipywidgets.readthedocs.io\">ipywidgets</a>, which dynamically generates the HTML/Javascript from python code cells, and appmode/voila which executes the Notebook on page load, then converts the notebook interface to look more like a web app (hiding code cells, etc). Note, despite its name, it does not use JupyterLab per se.</p>\n      <p>The benefits of this approach, is that:</p>\n      <ol type=\"1\">\n        <li>You can code everything in Python/Jupyter Notebooks, which is obviously the background of many working on AiiDA (being a Python package), albeit that, if you want to do anything substantial with these apps you inevitably have to learn some HTML/JavaScript.</li>\n        <li>You can interface directly with the AiiDA Python API</li>\n      </ol>\n      <p>The disadvantage though is that the apps which it creates are substantially limited in the user interfaces (UI) and user experience (UX) they can create.</p>\n      <ol type=\"1\">\n        <li>On every page load you need to first execute the notebook, then render it, meaning loads times are extremely poor by web standards.</li>\n        <li>You are restricted by the semantics/layout of the Notebook, i.e. each app has to be a set of separate pages and in each page you have a set of vertically sequential cells.</li>\n        <li>You are restricted by the semantics/functionality of ipywidgets, by industry standard, a very niche/bespoke tool. In practice, you end up taking a lot of time to learn/create a lot of HTML widgets that have little to no practical reusability, rather than being able to utilise the massive React ecosystem of libraries and components.</li>\n      </ol>\n\n    </div>\n  )\n}","// From https://primer.style/octicons\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport function AiiDAIcon200({width = 200, height = 200}): JSX.Element {\n    return (<svg width={width} height={height} viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid meet\">\n        {/* <!-- created using https://editor.method.ac --> */}\n        <g>\n            <title>background</title>\n            <rect fill=\"none\" id=\"canvas_background\" height=\"402\" width=\"582\" y=\"-1\" x=\"-1\" />\n        </g>\n        <g>\n            <title>Layer 1</title>\n            <g id=\"svg_1\" fill=\"#000000\" transform=\"translate(0, 200) scale(0.1, -0.1)\">\n                <path fill=\"#84D3DB\" id=\"svg_2\" d=\"m1369.99536,994.72168c-75,-21.00024 -101,-34.00024 -161,-80.00024c-68,-51.99976 -135,-150.99976 -153,-222.99976l-6,-28l150,0l150,0l0,60c0,33 4,60 9,60c5,0 43,-20 85,-45c42,-24 106,-61 143,-81c81,-45.00006 143,-83.00006 143,-88.00006c0,-3 -24,-18 -52,-33c-71,-39 -116,-65 -225,-129c-51,-30 -94,-54 -97,-54c-3,0 -6,29 -6,65l0,65l-151,0c-166,0 -152,6 -133,-61c14,-50 82,-144.99988 135,-188.99988c87,-72 151,-94 279,-95c88,0 115,4 163,23c119,48 224,165.99988 261,290.99988c30,102 13,250.00006 -36,323.00006c-10,14 -18,31 -18,36c0,16 -127,129.99976 -168,150.99976c-49,24 -158,51.00024 -208,50.00024c-21,0 -68,-8 -104,-18z\" />\n            </g>\n            <g id=\"svg_4\" fill=\"#000000\" transform=\"rotate(-120, 96.4437, 55.2508) translate(0, 200) scale(0.1, -0.1)\">\n                <path fill=\"#FFB27C\" id=\"svg_3\" d=\"m849.99731,1866.47681c-75,-21 -101,-34 -161,-80c-68,-52 -135,-150.99988 -153,-222.99988l-6,-28l150,0l150,0l0,60c0,33 4,59.99988 9,59.99988c5,0 43,-19.99988 85,-44.99988c42,-24 105.99805,-61 142.99805,-81c81,-45 143,-83 143,-88c0,-3 -24,-18 -52,-33c-71,-39 -116,-65 -224.99805,-129c-51,-30 -94,-54 -97,-54c-3,0 -6,29 -6,65l0,65l-151,0c-166,0 -152,6 -133,-61c14,-50 82,-145 135,-189c87,-72 151,-93.99939 279,-94.99939c87.99805,0 114.99805,4 162.99805,22.99939c119,48 224,166 261,291c30,102 13,250 -36,322.99988c-10,14 -18,31 -18,36c0,16 -127,130 -168,151c-49,24 -158,51 -207.99805,50c-21,0 -68,-8 -104,-18z\" />\n            </g>\n            <g id=\"svg_6\" fill=\"#000000\" transform=\"rotate(120, 50.1463, 142.426) translate(0, 200) scale(0.1, -0.1)\">\n                <path fill=\"#A0D58A\" id=\"svg_5\" d=\"m387.00516,994.72168c-75,-21.00024 -101,-34.00024 -161,-80.00024c-68,-51.99976 -135,-150.99976 -153,-222.99976l-6,-28l150,0l150,0l0,60c0,33 4,60 9,60c5,0 43,-20 85,-45c42,-24 105.99997,-61 142.99997,-81c81,-45.00006 143,-83.00006 143,-88.00006c0,-3 -24,-18 -52,-33c-71,-39 -116,-65 -224.99997,-129c-51,-30 -94,-54 -97,-54c-3,0 -6,29 -6,65l0,65l-151,0c-166,0 -152,6 -133,-61c14,-50 82,-144.99988 135,-188.99988c87,-72 151,-94 279,-95c87.99997,0 114.99997,4 162.99997,23c119,48 224,165.99988 261,290.99988c30,102 13,250.00006 -36,323.00006c-10,14 -18,31 -18,36c0,16 -127,129.99976 -168,150.99976c-49,24 -158,51.00024 -207.99997,50.00024c-21,0 -68,-8 -104,-18z\" />\n            </g>\n        </g>\n    </svg>\n    )\n}\n\nexport function RocketIcon(): JSX.Element {\n    return (\n        <SvgIcon>\n            <path fillRule=\"evenodd\" d=\"M20.322.75a10.75 10.75 0 00-7.373 2.926l-1.304 1.23A23.743 23.743 0 0010.103 6.5H5.066a1.75 1.75 0 00-1.5.85l-2.71 4.514a.75.75 0 00.49 1.12l4.571.963c.039.049.082.096.129.14L8.04 15.96l1.872 1.994c.044.047.091.09.14.129l.963 4.572a.75.75 0 001.12.488l4.514-2.709a1.75 1.75 0 00.85-1.5v-5.038a23.741 23.741 0 001.596-1.542l1.228-1.304a10.75 10.75 0 002.925-7.374V2.499A1.75 1.75 0 0021.498.75h-1.177zM16 15.112c-.333.248-.672.487-1.018.718l-3.393 2.262.678 3.223 3.612-2.167a.25.25 0 00.121-.214v-3.822zm-10.092-2.7L8.17 9.017c.23-.346.47-.685.717-1.017H5.066a.25.25 0 00-.214.121l-2.167 3.612 3.223.679zm8.07-7.644a9.25 9.25 0 016.344-2.518h1.177a.25.25 0 01.25.25v1.176a9.25 9.25 0 01-2.517 6.346l-1.228 1.303a22.248 22.248 0 01-3.854 3.257l-3.288 2.192-1.743-1.858a.764.764 0 00-.034-.034l-1.859-1.744 2.193-3.29a22.248 22.248 0 013.255-3.851l1.304-1.23zM17.5 8a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm-11 13c.9-.9.9-2.6 0-3.5-.9-.9-2.6-.9-3.5 0-1.209 1.209-1.445 3.901-1.49 4.743a.232.232 0 00.247.247c.842-.045 3.534-.281 4.743-1.49z\"></path>\n        </SvgIcon>\n    )\n}\n\nexport function GitBranchIcon(): JSX.Element {\n    return (\n        <SvgIcon>\n            <path fillRule=\"evenodd\" d=\"M5.75 21a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM2.5 19.25a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zM5.75 6.5a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM2.5 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zM18.25 6.5a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM15 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0z\"></path><path fill-rule=\"evenodd\" d=\"M5.75 16.75A.75.75 0 006.5 16V8A.75.75 0 005 8v8c0 .414.336.75.75.75z\"></path><path fill-rule=\"evenodd\" d=\"M17.5 8.75v-1H19v1a3.75 3.75 0 01-3.75 3.75h-7a1.75 1.75 0 00-1.75 1.75H5A3.25 3.25 0 018.25 11h7a2.25 2.25 0 002.25-2.25z\"></path>\n        </SvgIcon >\n    )\n}","import React, { useContext } from 'react'\n\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Divider from '@material-ui/core/Divider';\nimport * as MuiIcons from '@material-ui/icons';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import Typography from '@material-ui/core/Typography';\n\nimport Alert from '@material-ui/lab/Alert';\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Chip from '@material-ui/core/Chip';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useQuery } from 'react-query'\nimport copy from 'copy-to-clipboard';\n\nimport { AiidaSettingsContext, getNodes } from './aiidaClient'\nimport { GitBranchIcon, RocketIcon } from './icons'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        tree: {\n            width: '100%',\n            maxWidth: 520,\n            backgroundColor: theme.palette.background.paper,\n        },\n        refresh: {\n            marginRight: theme.spacing(1),\n        },\n        pagination: {\n            paddingTop: theme.spacing(2),\n            paddingBottom: theme.spacing(1)\n        },\n        listChip: {\n            marginLeft: theme.spacing(1),\n            marginBottom: theme.spacing(1),\n            float: \"right\"\n        },\n        item: {\n            maxWidth: 480,\n            overflow: \"hidden\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n    }),\n);\n\n\nconst initialMouseState = {\n    mouseX: null,\n    mouseY: null\n} as { mouseX: null | number; mouseY: null | number }\n\n\ninterface IAiidaXElementProps {\n    pk: number\n    uuid: string\n    elementName?: string\n    info?: string\n    tooltip?: string\n    procLabel?: string\n    procState?:\n    | 'created'\n    | 'running'\n    | 'waiting'\n    | 'finished'\n    | 'excepted'\n    | 'killed'\n    procExit?: number\n}\n\n\nexport function AiidaXNodeTree({ nodePrefix }: { nodePrefix: string }): JSX.Element {\n    /**\n     * a React component housing a list of AiiDA elements\n    */\n\n    const classes = useStyles();\n    const [page, setPage] = React.useState(1);\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n        setPage(value);\n    };\n    const aiidaSettings = useContext(AiidaSettingsContext)\n    // TODO usePaginationQuery\n    const result = useQuery([aiidaSettings.baseUrl, 'nodes', nodePrefix, page], () => getNodes(aiidaSettings.baseUrl, nodePrefix, page), {enabled: aiidaSettings.baseUrl !== null})\n\n    let element = <CircularProgress />\n    let pages = 1\n    if (result.isIdle || result.data === null) {\n        element = <Alert severity=\"info\" icon={<MuiIcons.SyncDisabled />}>Disabled</Alert>\n    } else if (result.data !== undefined) {\n        pages = Math.ceil(result.data.totalCount / result.data.perPage)\n        element = (\n            <List component=\"nav\" aria-label=\"main aiida tree\">\n                {result.data.nodes.map((value) => {\n                    return <AiidaXElement\n                        pk={value.id}\n                        uuid={value.uuid}\n                        elementName={value.node_type.split(\".\").slice(0, 2).join(\".\")}\n                        info={`${value.mtime}, ${value.node_type}, ${value.process_type || ''}`}\n                        tooltip={`UUID: ${value.uuid}`}\n                        procLabel={value.attributes?.process_label}\n                        procState={value.attributes?.process_state}\n                        procExit={value.attributes?.exit_status}\n                    />\n                })}\n            </List>\n        )\n    } else if (result.isError) {\n        const error = result.error as { message: string }\n        element = <Alert severity=\"error\">{error.message}</Alert>\n    }\n    let updateInfo = <span></span>\n    if (!!result.dataUpdatedAt) {\n        const date = new Date(result.dataUpdatedAt)\n        updateInfo = <span>Updated: {date.toLocaleString()}</span>\n    }\n\n    return (\n        <div className={classes.tree}>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.refresh}\n                startIcon={<MuiIcons.Refresh />}\n                onClick={() => { result.refetch() }}\n            >\n                Refresh\n            </Button>\n            {updateInfo}\n            <Pagination\n                className={classes.pagination}\n                color=\"primary\"\n                count={pages} page={page}\n                onChange={handlePageChange}\n            />\n            {element}\n        </div>\n    )\n}\n\n// TODO better value type, custom icons (https://primer.style/octicons/packages/react)\nconst ElementIconMap: { [key: string]: JSX.Element } = {\n    'default': <MuiIcons.DeviceUnknown />,\n    'folder': <MuiIcons.Inbox />,\n    'data.array': <MuiIcons.GridOn />,\n    'data.bool': <MuiIcons.CheckCircle />,\n    'data.cif': <MuiIcons.ScatterPlot />,\n    'data.code': <MuiIcons.Code />,\n    'data.dict': <MuiIcons.ViewList />,\n    'data.float': <MuiIcons.AllInclusive />,\n    'data.folder': <MuiIcons.Inbox />,\n    'data.int': <MuiIcons.LooksOne />,\n    'data.list': <MuiIcons.List />,\n    'data.numeric': <MuiIcons.PlusOne />,\n    'data.orbital': <MuiIcons.BlurOn />,\n    'data.remote': <MuiIcons.OpenInNew />,\n    'data.str': <MuiIcons.FormatColorText />,\n    'data.structure': <MuiIcons.Grain />,\n    'process.calculation': <RocketIcon />,\n    'process.process': <RocketIcon />,\n    'process.workflow': <GitBranchIcon />,  // <MuiIcons.Share />,\n}\n\n\nfunction AiidaXElement(props: IAiidaXElementProps): JSX.Element {\n\n    const classes = useStyles();\n\n    const key = props.elementName === undefined ? 'default' : props.elementName\n    let icon = ElementIconMap[key] || <MuiIcons.DeviceUnknown />\n\n    const [open, setOpen] = React.useState(false);\n    const handleClick = () => {\n        setOpen(!open);\n    };\n    const [contextPosition, setContextPosition] = React.useState<{\n        mouseX: null | number;\n        mouseY: null | number;\n    }>(initialMouseState);\n\n    // TODO currently if you right-click a second time,\n    // it will simply move the current open menu,\n    // not close it and open the \"correct\" context-menu for the position on the screen\n    const handleRightClick = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setContextPosition({\n            mouseX: event.clientX - 2,\n            mouseY: event.clientY - 4,\n        });\n    };\n\n    const handleContextClose = (event: React.MouseEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        setContextPosition(initialMouseState);\n    };\n    const copyUUIDtoClipboard = (event: React.MouseEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        setContextPosition(initialMouseState);\n        copy(`${props.uuid}`)\n    }\n\n    // TODO react-markdown for tooltip\n    if (props.tooltip !== undefined) {\n        icon = (\n            <Tooltip title={\n                <React.Fragment>\n                    <p>{props.tooltip}</p>\n                </React.Fragment>\n            }>\n                <span>{icon}</span>\n            </Tooltip>\n        )\n    }\n\n    let title = <span>{props.pk} {props.procLabel || ''}</span>\n    if (['excepted', 'killed'].includes(props.procState || '')) {\n        title = <span>{props.pk} {props.procLabel || ''}<Chip className={classes.listChip} label={`${props.procState} [${props.procExit}]`} variant=\"outlined\" color=\"secondary\" /></span>\n    } else if (!!props.procState) {\n        title = <span>{props.pk} {props.procLabel || ''}<Chip className={classes.listChip} label={`${props.procState} [${props.procExit}]`} variant=\"outlined\" color=\"primary\" /></span>\n    }\n\n    return (\n        <React.Fragment>\n            <ListItem key={props.pk} button onClick={handleClick} onContextMenu={handleRightClick} >\n                <ListItemAvatar>\n                    <Avatar>\n                        {icon}\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                    className={classes.item}\n                    primary={title}\n                    secondary={props.info}\n                />\n                {/* TODO context menu does not close on a right-click not over the node */}\n                <Menu\n                    keepMounted\n                    open={contextPosition.mouseY !== null}\n                    onClose={handleContextClose}\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={\n                        contextPosition.mouseY !== null && contextPosition.mouseX !== null\n                            ? { top: contextPosition.mouseY, left: contextPosition.mouseX }\n                            : undefined\n                    }\n                >\n                    <ListItem><b>PK {props.pk} Menu</b></ListItem>\n                    <MenuItem onClick={copyUUIDtoClipboard}>Copy UUID to Clipboard</MenuItem>\n                    <MenuItem onClick={handleContextClose}>Close</MenuItem>\n                    {/* <MenuItem onClick={handleContextClose}>Open Data</MenuItem>\n                    <MenuItem onClick={handleContextClose}>Add to Group</MenuItem> */}\n                </Menu>\n                {open ? <MuiIcons.ExpandMore /> : <MuiIcons.ExpandLess />}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\">\n                <List component=\"div\" disablePadding>\n                    <ListItem button className={classes.nested}>\n                        <ListItemIcon>\n                            <MuiIcons.Inbox />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Repository\" />\n                    </ListItem>\n                    <ListItem button className={classes.nested}>\n                        <ListItemIcon>\n                            <MuiIcons.ArrowForward />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Incoming\" />\n                    </ListItem>\n                    <ListItem button className={classes.nested}>\n                        <ListItemIcon>\n                            <MuiIcons.ArrowBack />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Outgoing\" />\n                    </ListItem>\n                </List>\n            </Collapse>\n            <Divider light />\n        </React.Fragment>\n    )\n}\n","import React, { useContext } from 'react'\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n// import Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\n\nimport { useQuery } from 'react-query'\nimport ReactJson from 'react-json-view'\n\nimport { AiidaXNodeTree } from './nodeTree';\nimport { useStyles } from './styles';\nimport { AiidaSettingsContext, getNodeStatistics, getNode } from './aiidaClient'\n\n\nexport function PageProcesses(): JSX.Element {\n  const classes = useStyles();\n  const [nodePrefix, setnodePrefix] = React.useState(\"process.\");\n  const [nodeFieldsUUID, setnodeFieldsUUID] = React.useState(null as string | null);\n\n  return (\n    <Grid container spacing={2} className={classes.mainGrid} direction=\"row-reverse\">\n\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n\n          <Accordion defaultExpanded>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}><h3>AiiDA Node Explorer</h3></AccordionSummary>\n            <AccordionDetails><NodeExplorerIntroduction /></AccordionDetails>\n          </Accordion>\n          <Accordion>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}><h3>Filters</h3></AccordionSummary>\n            <AccordionDetails>\n              <NodeExplorerFilters nodePrefix={nodePrefix} setnodePrefix={setnodePrefix} />\n            </AccordionDetails>\n          </Accordion>\n          <Accordion>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}><h3>Database Fields</h3></AccordionSummary>\n            <AccordionDetails className={classes.overflowAuto}><NodeExplorerAttributes nodeFieldsUUID={nodeFieldsUUID} setnodeFieldsUUID={setnodeFieldsUUID} /></AccordionDetails>\n          </Accordion>\n          <Accordion>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}><h3>File Contents</h3></AccordionSummary>\n            <AccordionDetails>a</AccordionDetails>\n          </Accordion>\n\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <AiidaXNodeTree nodePrefix={nodePrefix} />\n        </Paper>\n      </Grid>\n\n    </Grid>\n  );\n}\n\n\nexport function NodeExplorerIntroduction(): JSX.Element {\n  return (\n    <React.Fragment>\n      <div>\n        <p>The node explorer allows you to visualise the nodes in your AiiDA profile as a filtered tree.</p>\n        <p>Use the filter section below to select which node type you want to explore.</p>\n        <p>\n          You can right-click on a node to see additional actions, \n          including copying its UUID to the clipboard.\n          You can use this to show all of if its content in the \"Database Fields\" section.\n          </p>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst nodePrefixesDefault = {\n  \"data.\": null, \"data.array.\": null, \"data.bool.\": null, \"data.cif.\": null, \"data.code.\": null, \"data.dict.\": null,\n  \"data.float.\": null, \"data.folder.\": null, \"data.int.\": null, \"data.list.\": null, \"data.numeric.\": null,\n  \"data.orbital.\": null, \"data.remote.\": null, \"data.structure.\": null,\n  \"process.\": null, \"process.calculation.\": null, \"process.workflow.\": null\n} as { [key: string]: null | number }\n\nexport function NodeExplorerFilters({ nodePrefix, setnodePrefix }: { nodePrefix: string, setnodePrefix: React.Dispatch<React.SetStateAction<string>> }): JSX.Element {\n  const classes = useStyles();\n  const aiidaSettings = useContext(AiidaSettingsContext)\n  const result = useQuery([aiidaSettings.baseUrl, 'statistics'], () => getNodeStatistics(aiidaSettings.baseUrl), { enabled: aiidaSettings.baseUrl !== null })\n\n  let nodePrefixes = nodePrefixesDefault\n  if (result.data) {\n    nodePrefixes = result.data.types\n    // TODO do this programmatically\n    nodePrefixes[\"data.\"] = null\n    nodePrefixes[\"process.\"] = null\n    nodePrefixes[\"process.calculation.\"] = null\n    nodePrefixes[\"process.workflow.\"] = null\n  }\n\n  return (\n    <React.Fragment>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"node-prefix-select-label\">Node Type Prefix</InputLabel>\n        <Select\n          labelId=\"node-prefix-select-label\"\n          id=\"node-prefix-select\"\n          value={nodePrefix}\n          onChange={(event: React.ChangeEvent<{ value: unknown }>) => { setnodePrefix(event.target.value as string); }}\n        >\n          {Object.entries(nodePrefixes).sort().map(([name, count]) => (\n            <MenuItem value={name}>\n              {count === null ? name : `${name} (${count})`}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </React.Fragment>\n  )\n}\n\nexport function NodeExplorerAttributes({ nodeFieldsUUID, setnodeFieldsUUID }: { nodeFieldsUUID: null | string, setnodeFieldsUUID: React.Dispatch<React.SetStateAction<string | null>> }): JSX.Element {\n  const classes = useStyles();\n  const aiidaSettings = useContext(AiidaSettingsContext)\n  const result = useQuery([aiidaSettings.baseUrl, 'node', nodeFieldsUUID], () => getNode(aiidaSettings.baseUrl, nodeFieldsUUID), { enabled: aiidaSettings.baseUrl !== null })\n  const handleUUIDChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setnodeFieldsUUID(event.target.value);\n  }\n  let view = null as null | JSX.Element\n  if (result.data) {\n    view = <ReactJson src={result.data} collapseStringsAfterLength={40} />\n  } else if (result.isFetching) {\n    view = <CircularProgress />\n  }\n  return (\n    <Grid container>\n      <Grid xs={12}>\n        <TextField \n        label=\"UUID\" \n        value={nodeFieldsUUID} \n        onChange={handleUUIDChange} \n        error={!!result.error}\n        helperText={!result.error ? undefined : `${result.error}`}\n        fullWidth \n        />\n      </Grid>\n      <Grid xs={12} className={classes.padTop}>\n          {view}\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport * as MuiIcons from '@material-ui/icons';\nimport { Omit } from '@material-ui/types';\n\nimport { HashRouter as Router, Switch, Route, Link as RouterLink, LinkProps as RouterLinkProps, Redirect } from 'react-router-dom';\nimport { QueryClientProvider, useQuery } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nimport { AiidaSettingsContext, defaultRestUrl, isConnected, queryClient, urlPattern } from './aiidaClient';\nimport { PageHome } from './PageHome';\nimport { PageProcesses } from './PageNodes';\nimport { useStyles } from './styles';\nimport { AiiDAIcon200 } from './icons'\n\ninterface ListItemLinkProps {\n  icon?: React.ReactElement;\n  primary: string;\n  to: string;\n}\n\nfunction ListItemLink(props: ListItemLinkProps) {\n  const { icon, primary, to } = props;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink} >\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\n\nexport function App({ showDevTools = true }): JSX.Element {\n\n  // style hooks\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // component state for the left menu\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  // component state for the AiiDA REST URL\n  // the URL is is stored, so that it persists between sessions and page refreshes\n  // we also validate to only allow http/https schema, and no ? which start the query string\n  // TODO better URL validation (to guard against attacks)\n  let [restUrlBase, setRestUrlBase] = React.useState(localStorage.getItem('react-aiida-rest-url') || defaultRestUrl);\n  const handleUrlChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    localStorage.setItem('react-aiida-rest-url', event.target.value)\n    setRestUrlBase(event.target.value);\n  };\n\n  return (\n    <Router>\n\n      <div className={classes.root}>\n        <QueryClientProvider client={queryClient}>\n\n          <AppBar\n            position=\"sticky\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: drawerOpen,\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                onClick={handleDrawerOpen}\n                className={clsx(classes.menuButton, {\n                  [classes.hide]: drawerOpen,\n                })}\n                color=\"inherit\"\n                aria-label=\"open drawer\">\n                <MuiIcons.Menu />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title} id=\"app-header\">AiiDA Dashboard</Typography>\n              {/* TODO periodically update connection status */}\n              <RestUrlConnection url={urlPattern.test(restUrlBase) ? restUrlBase: null } className={classes.inputRestUrlIcon} />\n              <TextField\n                id=\"rest-url\"\n                className={classes.inputRestUrl}\n                label=\"REST URL\"\n                value={restUrlBase}\n                error={!urlPattern.test(restUrlBase)}\n                helperText={urlPattern.test(restUrlBase) ? undefined : 'Invalid URL'}\n                onChange={handleUrlChange}\n                autoComplete={defaultRestUrl}\n                InputProps={{\n                  className: classes.inputRestUrlText\n                }}\n              />\n              <AiiDAIcon200 width={40} height={40} />\n            </Toolbar>\n          </AppBar>\n\n          <Drawer\n            variant=\"permanent\"\n\n            className={clsx(classes.drawer, {\n              [classes.drawerOpen]: drawerOpen,\n              [classes.drawerClose]: !drawerOpen,\n            })}\n            classes={{\n              paper: clsx({\n                [classes.drawerOpen]: drawerOpen,\n                [classes.drawerClose]: !drawerOpen,\n              }),\n            }}\n          >\n            <div className={classes.toolbar}>\n              <IconButton onClick={handleDrawerClose}>\n                {theme.direction === 'rtl' ? <MuiIcons.ChevronRight /> : <MuiIcons.ChevronLeft />}\n              </IconButton>\n            </div>\n            <Divider />\n\n            {/* TODO signify which page is selected */}\n            <List>\n              <ListItemLink to=\"/\" primary=\"Home\" icon={<MuiIcons.Home />} />\n              <ListItemLink to=\"/process\" primary=\"Node Explorer\" icon={<MuiIcons.Explore />} />\n            </List>\n\n          </Drawer>\n\n          <AiidaSettingsContext.Provider value={{ baseUrl: urlPattern.test(restUrlBase) ? restUrlBase : null }}>\n\n            <Switch>\n              <Route exact path=\"/\" component={PageHome} />\n              <Route path=\"/process\" component={PageProcesses} />\n              <Route path=\"/404\" component={NotFound} />\n              <Redirect to=\"/404\" />\n            </Switch>\n\n          </AiidaSettingsContext.Provider>\n\n          {showDevTools ? <ReactQueryDevtools initialIsOpen={false} /> : null}\n        </QueryClientProvider>\n\n      </div>\n\n    </Router>\n  );\n}\n\nfunction NotFound(): JSX.Element {\n  // TODO Offset\n  return (\n    <div>\n      <h1>404 - Not Found!</h1>\n      <RouterLink to=\"/\">\n        Go Home\n      </RouterLink>\n    </div>\n  )\n}\n\n\n\nfunction RestUrlConnection({url, className = undefined}: {url: string | null, className?: string}): JSX.Element {\n\n  const result = useQuery([url, 'connected'], () => isConnected(url))\n  // TODO hover over info/error?\n  if (result.data) {\n    return < MuiIcons.CheckCircle className={className} />\n  }\n  return < MuiIcons.Cancel color=\"error\" className={className} />\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}