{"version":3,"sources":["aiidaClient.ts","styles.ts","PageHome.tsx","icons.tsx","nodeTree.tsx","PageNodes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["queryClient","QueryClient","AiidaSettingsContext","React","createContext","baseUrl","a","fetch","response","ok","nodeType","page","perPage","totalCount","parseInt","headers","get","json","responseJson","nodes","data","drawerWidth","useStyles","makeStyles","theme","createStyles","root","flexGrow","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","spacing","title","inputRestUrlIcon","inputRestUrl","inputRestUrlText","color","hide","display","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","mainGrid","paddingTop","paddingLeft","paddingRight","paper","palette","text","secondary","formControl","margin","minWidth","PageHome","classes","Grid","container","className","item","xs","Paper","variant","InfoBox","href","AiiDAIcon200","height","viewBox","xmlns","preserveAspectRatio","fill","id","y","x","transform","d","RocketIcon","SvgIcon","fillRule","GitBranchIcon","fill-rule","tree","maxWidth","backgroundColor","background","refresh","pagination","paddingBottom","listChip","marginBottom","float","overflow","nested","initialMouseState","mouseX","mouseY","AiidaXNodeTree","nodePrefix","useState","setPage","aiidaSettings","useContext","result","useQuery","fetchNodes","enabled","element","CircularProgress","pages","isIdle","Alert","severity","icon","undefined","Math","ceil","List","component","aria-label","map","value","AiidaXElement","pk","elementName","node_type","split","slice","join","info","mtime","process_type","tooltip","label","procLabel","attributes","process_label","procState","process_state","procExit","exit_status","isError","error","message","updateInfo","dataUpdatedAt","date","Date","toLocaleString","Button","startIcon","onClick","refetch","Pagination","count","onChange","event","ElementIconMap","props","key","open","setOpen","contextPosition","setContextPosition","handleContextClose","preventDefault","stopPropagation","Tooltip","Fragment","includes","Chip","ListItem","button","onContextMenu","clientX","clientY","ListItemAvatar","Avatar","ListItemText","primary","hidden","keepMounted","onClose","anchorReference","anchorPosition","top","left","MenuItem","Collapse","in","timeout","unmountOnExit","disablePadding","ListItemIcon","Divider","light","PageProcesses","setnodePrefix","direction","sm","md","FormControl","InputLabel","Select","labelId","target","name","ListItemLink","to","renderLink","useMemo","forwardRef","itemProps","ref","App","showDevTools","useTheme","setDrawerOpen","urlPattern","RegExp","localStorage","getItem","restUrlBase","setRestUrlBase","QueryClientProvider","client","AppBar","position","clsx","Toolbar","IconButton","edge","Typography","RestUrlConnection","url","test","TextField","helperText","setItem","autoComplete","InputProps","Drawer","Provider","exact","path","NotFound","initialIsOpen","isConnected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ae89c89.chunk.js","sourcesContent":["import React from 'react';\nimport { QueryClient } from 'react-query'\n\nexport const queryClient = new QueryClient()\nexport const AiidaSettingsContext = React.createContext({baseUrl: \"http://0.0.0.0:5000\"} as {baseUrl: null | string})\n\n\nexport interface IAiidaRestNode {\n    ctime: string\n    full_type: string\n    id: number\n    label: string\n    mtime: string\n    node_type: string\n    process_type: string\n    user_id: number\n    uuid: string\n    attributes: {\n        process_state?:\n        | 'created'\n        | 'running'\n        | 'waiting'\n        | 'finished'\n        | 'excepted'\n        | 'killed'\n        process_label?: string\n        exit_status?: number\n    }\n}\n\nexport interface IAiidaRestResponse {\n    data: { nodes: IAiidaRestNode[] }\n    id: null\n    method: \"GET\" | \"POST\"\n    path: string\n    query_string: string\n    resource_type: string\n    url: string\n    url_root: string\n}\n\nexport async function isConnected(baseUrl: string | null): Promise<boolean> {\n    if (baseUrl === null) {\n        return false\n    }\n    const response = await fetch(`${baseUrl}/api/v4`)\n    return response.ok\n}\n\n\nexport async function fetchNodes(baseUrl: string | null, nodeType: string, page: number): Promise<null | { nodes: IAiidaRestNode[], totalCount: number, perPage: number }> {\n    if (baseUrl === null) {\n        return null\n    }\n    const perPage = 20\n    // TODO better url join?\n    const response = await fetch(`${baseUrl}/api/v4/nodes/page/${page}?perpage=${perPage}&orderby=-mtime&node_type=like=%22${nodeType}%%22&attributes=true&attributes_filter=process_label,process_state,exit_status`)\n    // TODO handle errors\n    const totalCount = parseInt(response.headers.get('x-total-count') || '0')\n    const responseJson = (await response.json()) as IAiidaRestResponse\n    return { nodes: responseJson.data.nodes, totalCount, perPage }\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\n// TODO use a spacer component instead of margins etc\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    inputRestUrlIcon: {\n      marginRight: theme.spacing(1)\n    },\n    inputRestUrl: {\n      marginRight: theme.spacing(2)\n    },\n    inputRestUrlText: {\n      color: \"white\"\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    mainGrid: {\n      paddingTop: theme.spacing(1),\n      paddingLeft: theme.spacing(10),\n      paddingRight: theme.spacing(10)\n    },\n    paper: {\n      padding: theme.spacing(2),\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 200,\n    },\n  }),\n);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useStyles } from './styles';\n\n\nexport function PageHome(): JSX.Element {\n  const classes = useStyles();\n  return (\n    <Grid container spacing={2} className={classes.mainGrid}>\n      <Grid item xs={12}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <InfoBox />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport function InfoBox(): JSX.Element {\n  return (\n    <aside>\n      <h2>Introduction</h2>\n      <p>\n        This is a demonstration of the AiiDA Dashboard:<br />\n        A web-based UI for interfacing with AiiDA.\n      </p>\n      <p>\n        AiiDA Dashboard uses industry leading libraries, to create a beautiful and responsive UI:\n      </p>\n      <ul>\n        <li><a href=\"https://reactjs.org/\">React</a>: A library for building user interfaces, maintained by Facebook and with users including Whatsapp, Dropbox and Netflix.</li>\n        <li><a href=\"https://material-ui.com\">Material-UI</a>: A React component library that implements <a href=\"https://material.io/design\">Google’s Material Design</a> guidelines.</li>\n        <li><a href=\"https://react-query.tanstack.com/\">react-query</a>: A React component for synchronizing server data (from AiiDA) with the UI.</li>\n      </ul>\n      <p>\n        AiiDA Dashboard can be used as a standalone Web UI, or it also provides React components and facilitates wrapping into a JupyterLab <a href=\"https://jupyterlab.readthedocs.io/en/stable/extension/virtualdom.html\">extension widget</a>.\n      </p>\n    </aside>\n  )\n}\n","// From https://primer.style/octicons\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport function AiiDAIcon200({width = 200, height = 200}): JSX.Element {\n    return (<svg width={width} height={height} viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid meet\">\n        {/* <!-- created using https://editor.method.ac --> */}\n        <g>\n            <title>background</title>\n            <rect fill=\"none\" id=\"canvas_background\" height=\"402\" width=\"582\" y=\"-1\" x=\"-1\" />\n        </g>\n        <g>\n            <title>Layer 1</title>\n            <g id=\"svg_1\" fill=\"#000000\" transform=\"translate(0, 200) scale(0.1, -0.1)\">\n                <path fill=\"#84D3DB\" id=\"svg_2\" d=\"m1369.99536,994.72168c-75,-21.00024 -101,-34.00024 -161,-80.00024c-68,-51.99976 -135,-150.99976 -153,-222.99976l-6,-28l150,0l150,0l0,60c0,33 4,60 9,60c5,0 43,-20 85,-45c42,-24 106,-61 143,-81c81,-45.00006 143,-83.00006 143,-88.00006c0,-3 -24,-18 -52,-33c-71,-39 -116,-65 -225,-129c-51,-30 -94,-54 -97,-54c-3,0 -6,29 -6,65l0,65l-151,0c-166,0 -152,6 -133,-61c14,-50 82,-144.99988 135,-188.99988c87,-72 151,-94 279,-95c88,0 115,4 163,23c119,48 224,165.99988 261,290.99988c30,102 13,250.00006 -36,323.00006c-10,14 -18,31 -18,36c0,16 -127,129.99976 -168,150.99976c-49,24 -158,51.00024 -208,50.00024c-21,0 -68,-8 -104,-18z\" />\n            </g>\n            <g id=\"svg_4\" fill=\"#000000\" transform=\"rotate(-120, 96.4437, 55.2508) translate(0, 200) scale(0.1, -0.1)\">\n                <path fill=\"#FFB27C\" id=\"svg_3\" d=\"m849.99731,1866.47681c-75,-21 -101,-34 -161,-80c-68,-52 -135,-150.99988 -153,-222.99988l-6,-28l150,0l150,0l0,60c0,33 4,59.99988 9,59.99988c5,0 43,-19.99988 85,-44.99988c42,-24 105.99805,-61 142.99805,-81c81,-45 143,-83 143,-88c0,-3 -24,-18 -52,-33c-71,-39 -116,-65 -224.99805,-129c-51,-30 -94,-54 -97,-54c-3,0 -6,29 -6,65l0,65l-151,0c-166,0 -152,6 -133,-61c14,-50 82,-145 135,-189c87,-72 151,-93.99939 279,-94.99939c87.99805,0 114.99805,4 162.99805,22.99939c119,48 224,166 261,291c30,102 13,250 -36,322.99988c-10,14 -18,31 -18,36c0,16 -127,130 -168,151c-49,24 -158,51 -207.99805,50c-21,0 -68,-8 -104,-18z\" />\n            </g>\n            <g id=\"svg_6\" fill=\"#000000\" transform=\"rotate(120, 50.1463, 142.426) translate(0, 200) scale(0.1, -0.1)\">\n                <path fill=\"#A0D58A\" id=\"svg_5\" d=\"m387.00516,994.72168c-75,-21.00024 -101,-34.00024 -161,-80.00024c-68,-51.99976 -135,-150.99976 -153,-222.99976l-6,-28l150,0l150,0l0,60c0,33 4,60 9,60c5,0 43,-20 85,-45c42,-24 105.99997,-61 142.99997,-81c81,-45.00006 143,-83.00006 143,-88.00006c0,-3 -24,-18 -52,-33c-71,-39 -116,-65 -224.99997,-129c-51,-30 -94,-54 -97,-54c-3,0 -6,29 -6,65l0,65l-151,0c-166,0 -152,6 -133,-61c14,-50 82,-144.99988 135,-188.99988c87,-72 151,-94 279,-95c87.99997,0 114.99997,4 162.99997,23c119,48 224,165.99988 261,290.99988c30,102 13,250.00006 -36,323.00006c-10,14 -18,31 -18,36c0,16 -127,129.99976 -168,150.99976c-49,24 -158,51.00024 -207.99997,50.00024c-21,0 -68,-8 -104,-18z\" />\n            </g>\n        </g>\n    </svg>\n    )\n}\n\nexport function RocketIcon(): JSX.Element {\n    return (\n        <SvgIcon>\n            <path fillRule=\"evenodd\" d=\"M20.322.75a10.75 10.75 0 00-7.373 2.926l-1.304 1.23A23.743 23.743 0 0010.103 6.5H5.066a1.75 1.75 0 00-1.5.85l-2.71 4.514a.75.75 0 00.49 1.12l4.571.963c.039.049.082.096.129.14L8.04 15.96l1.872 1.994c.044.047.091.09.14.129l.963 4.572a.75.75 0 001.12.488l4.514-2.709a1.75 1.75 0 00.85-1.5v-5.038a23.741 23.741 0 001.596-1.542l1.228-1.304a10.75 10.75 0 002.925-7.374V2.499A1.75 1.75 0 0021.498.75h-1.177zM16 15.112c-.333.248-.672.487-1.018.718l-3.393 2.262.678 3.223 3.612-2.167a.25.25 0 00.121-.214v-3.822zm-10.092-2.7L8.17 9.017c.23-.346.47-.685.717-1.017H5.066a.25.25 0 00-.214.121l-2.167 3.612 3.223.679zm8.07-7.644a9.25 9.25 0 016.344-2.518h1.177a.25.25 0 01.25.25v1.176a9.25 9.25 0 01-2.517 6.346l-1.228 1.303a22.248 22.248 0 01-3.854 3.257l-3.288 2.192-1.743-1.858a.764.764 0 00-.034-.034l-1.859-1.744 2.193-3.29a22.248 22.248 0 013.255-3.851l1.304-1.23zM17.5 8a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zm-11 13c.9-.9.9-2.6 0-3.5-.9-.9-2.6-.9-3.5 0-1.209 1.209-1.445 3.901-1.49 4.743a.232.232 0 00.247.247c.842-.045 3.534-.281 4.743-1.49z\"></path>\n        </SvgIcon>\n    )\n}\n\nexport function GitBranchIcon(): JSX.Element {\n    return (\n        <SvgIcon>\n            <path fillRule=\"evenodd\" d=\"M5.75 21a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM2.5 19.25a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zM5.75 6.5a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM2.5 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zM18.25 6.5a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM15 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0z\"></path><path fill-rule=\"evenodd\" d=\"M5.75 16.75A.75.75 0 006.5 16V8A.75.75 0 005 8v8c0 .414.336.75.75.75z\"></path><path fill-rule=\"evenodd\" d=\"M17.5 8.75v-1H19v1a3.75 3.75 0 01-3.75 3.75h-7a1.75 1.75 0 00-1.75 1.75H5A3.25 3.25 0 018.25 11h7a2.25 2.25 0 002.25-2.25z\"></path>\n        </SvgIcon >\n    )\n}","import React, { useContext } from 'react'\n\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Divider from '@material-ui/core/Divider';\nimport * as MuiIcons from '@material-ui/icons';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import Typography from '@material-ui/core/Typography';\n\nimport Alert from '@material-ui/lab/Alert';\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Chip from '@material-ui/core/Chip';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { useQuery } from 'react-query'\n\nimport { AiidaSettingsContext, fetchNodes } from './aiidaClient'\nimport { GitBranchIcon, RocketIcon } from './icons'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        tree: {\n            width: '100%',\n            maxWidth: 520,\n            backgroundColor: theme.palette.background.paper,\n        },\n        refresh: {\n            marginRight: theme.spacing(1),\n        },\n        pagination: {\n            paddingTop: theme.spacing(2),\n            paddingBottom: theme.spacing(1)\n        },\n        listChip: {\n            marginLeft: theme.spacing(1),\n            marginBottom: theme.spacing(1),\n            float: \"right\"\n        },\n        item: {\n            maxWidth: 480,\n            overflow: \"hidden\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n    }),\n);\n\n\nconst initialMouseState = {\n    mouseX: null,\n    mouseY: null\n} as { mouseX: null | number; mouseY: null | number }\n\n\ninterface IAiidaXElementProps {\n    pk: number\n    elementName?: string\n    info?: string\n    tooltip?: string\n    procLabel?: string\n    procState?:\n    | 'created'\n    | 'running'\n    | 'waiting'\n    | 'finished'\n    | 'excepted'\n    | 'killed'\n    procExit?: number\n}\n\n\nexport function AiidaXNodeTree({ nodePrefix }: { nodePrefix: string }): JSX.Element {\n    /**\n     * a React component housing a list of AiiDA elements\n    */\n\n    const classes = useStyles();\n    const [page, setPage] = React.useState(1);\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\n        setPage(value);\n    };\n    const aiidaSettings = useContext(AiidaSettingsContext)\n    // TODO usePaginationQuery\n    const result = useQuery([aiidaSettings.baseUrl, 'nodes', nodePrefix, page], () => fetchNodes(aiidaSettings.baseUrl, nodePrefix, page), {enabled: aiidaSettings.baseUrl !== null})\n\n    let element = <CircularProgress />\n    let pages = 1\n    if (result.isIdle || result.data === null) {\n        element = <Alert severity=\"info\" icon={<MuiIcons.SyncDisabled />}>Disabled</Alert>\n    } else if (result.data !== undefined) {\n        pages = Math.ceil(result.data.totalCount / result.data.perPage)\n        element = (\n            <List component=\"nav\" aria-label=\"main aiida tree\">\n                {result.data.nodes.map((value) => {\n                    return <AiidaXElement\n                        pk={value.id}\n                        elementName={value.node_type.split(\".\").slice(0, 2).join(\".\")}\n                        info={`${value.mtime}, ${value.node_type}, ${value.process_type || ''}`}\n                        tooltip={`${value.label}`}\n                        procLabel={value.attributes?.process_label}\n                        procState={value.attributes?.process_state}\n                        procExit={value.attributes?.exit_status}\n                    />\n                })}\n            </List>\n        )\n    } else if (result.isError) {\n        const error = result.error as { message: string }\n        element = <Alert severity=\"error\">{error.message}</Alert>\n    }\n    let updateInfo = <span></span>\n    if (!!result.dataUpdatedAt) {\n        const date = new Date(result.dataUpdatedAt)\n        updateInfo = <span>Updated: {date.toLocaleString()}</span>\n    }\n\n    return (\n        <div className={classes.tree}>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.refresh}\n                startIcon={<MuiIcons.Refresh />}\n                onClick={() => { result.refetch() }}\n            >\n                Refresh\n            </Button>\n            {updateInfo}\n            <Pagination\n                className={classes.pagination}\n                color=\"primary\"\n                count={pages} page={page}\n                onChange={handlePageChange}\n            />\n            {element}\n        </div>\n    )\n}\n\n// TODO better value type, custom icons (https://primer.style/octicons/packages/react)\nconst ElementIconMap: { [key: string]: JSX.Element } = {\n    'default': <MuiIcons.DeviceUnknown />,\n    'folder': <MuiIcons.Inbox />,\n    'data.array': <MuiIcons.GridOn />,\n    'data.bool': <MuiIcons.CheckCircle />,\n    'data.cif': <MuiIcons.ScatterPlot />,\n    'data.code': <MuiIcons.Code />,\n    'data.dict': <MuiIcons.ViewList />,\n    'data.float': <MuiIcons.AllInclusive />,\n    'data.folder': <MuiIcons.Inbox />,\n    'data.int': <MuiIcons.LooksOne />,\n    'data.list': <MuiIcons.List />,\n    'data.numeric': <MuiIcons.PlusOne />,\n    'data.orbital': <MuiIcons.BlurOn />,\n    'data.remote': <MuiIcons.OpenInNew />,\n    'data.str': <MuiIcons.FormatColorText />,\n    'data.structure': <MuiIcons.Grain />,\n    'process.calculation': <RocketIcon />,\n    'process.process': <RocketIcon />,\n    'process.workflow': <GitBranchIcon />,  // <MuiIcons.Share />,\n}\n\n\nfunction AiidaXElement(props: IAiidaXElementProps): JSX.Element {\n\n    const classes = useStyles();\n\n    const key = props.elementName === undefined ? 'default' : props.elementName\n    let icon = ElementIconMap[key] || <MuiIcons.DeviceUnknown />\n\n    const [open, setOpen] = React.useState(false);\n    const handleClick = () => {\n        setOpen(!open);\n    };\n    const [contextPosition, setContextPosition] = React.useState<{\n        mouseX: null | number;\n        mouseY: null | number;\n    }>(initialMouseState);\n\n    // TODO currently if you right-click a second time,\n    // it will simply move the current open menu,\n    // not close it and open the \"correct\" context-menu for the position on the screen\n    const handleRightClick = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        setContextPosition({\n            mouseX: event.clientX - 2,\n            mouseY: event.clientY - 4,\n        });\n    };\n\n    const handleContextClose = (event: React.MouseEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        setContextPosition(initialMouseState);\n    };\n\n    // TODO react-markdown for tooltip\n    if (props.tooltip) {\n        icon = (\n            <Tooltip title={\n                <React.Fragment>\n                    <p>{props.tooltip}</p>\n                </React.Fragment>\n            }>\n                {icon}\n            </Tooltip>\n        )\n    }\n\n    let title = <span>{props.pk} {props.procLabel || ''}</span>\n    if (['excepted', 'killed'].includes(props.procState || '')) {\n        title = <span>{props.pk} {props.procLabel || ''}<Chip className={classes.listChip} label={`${props.procState} [${props.procExit}]`} variant=\"outlined\" color=\"secondary\" /></span>\n    } else if (!!props.procState) {\n        title = <span>{props.pk} {props.procLabel || ''}<Chip className={classes.listChip} label={`${props.procState} [${props.procExit}]`} variant=\"outlined\" color=\"primary\" /></span>\n    }\n\n\n    return (\n        <React.Fragment>\n            <ListItem key={props.pk} button onClick={handleClick} onContextMenu={handleRightClick} >\n                <ListItemAvatar>\n                    <Avatar>\n                        {icon}\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                    className={classes.item}\n                    primary={title}\n                    secondary={props.info}\n                />\n                <Menu\n                    hidden\n                    keepMounted\n                    open={contextPosition.mouseY !== null}\n                    onClose={handleContextClose}\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={\n                        contextPosition.mouseY !== null && contextPosition.mouseX !== null\n                            ? { top: contextPosition.mouseY, left: contextPosition.mouseX }\n                            : undefined\n                    }\n                >\n                    <ListItem><b>PK {props.pk} Menu</b></ListItem>\n                    <MenuItem onClick={handleContextClose}>Open Data</MenuItem>\n                    <MenuItem onClick={handleContextClose}>Add to Group</MenuItem>\n                </Menu>\n                {open ? <MuiIcons.ExpandMore /> : <MuiIcons.ExpandLess />}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <ListItem button className={classes.nested}>\n                        <ListItemIcon>\n                            <MuiIcons.Inbox />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Repository\" />\n                    </ListItem>\n                    <ListItem button className={classes.nested}>\n                        <ListItemIcon>\n                            <MuiIcons.ArrowForward />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Incoming\" />\n                    </ListItem>\n                    <ListItem button className={classes.nested}>\n                        <ListItemIcon>\n                            <MuiIcons.ArrowBack />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Outgoing\" />\n                    </ListItem>\n                </List>\n            </Collapse>\n            <Divider light />\n        </React.Fragment>\n    )\n}\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport { AiidaXNodeTree } from './nodeTree';\nimport { useStyles } from './styles';\n\n\nexport function PageProcesses(): JSX.Element {\n  const classes = useStyles();\n  const [nodePrefix, setnodePrefix] = React.useState(\"process.\");\n\n  // TODO generate dynamically (also with number for each)\n  const nodePrefixes = [\n    \"data.\", \"data.array.\", \"data.bool.\", \"data.cif.\", \"data.code.\", \"data.dict.\",\n    \"data.float.\", \"data.folder.\", \"data.int.\", \"data.list.\", \"data.numeric.\",\n    \"data.orbital.\", \"data.remote.\", \"data.structure.\",\n    \"process.\", \"process.calculation.\", \"process.process.\", \"process.workflow.\"\n  ]\n  return (\n    <Grid container spacing={2} className={classes.mainGrid} direction=\"row-reverse\">\n\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <h2>AiiDA Node Explorer</h2>\n\n          <Grid container>\n\n            <Grid item xs={12}>\n              <Paper variant=\"outlined\" className={classes.paper}>\n\n                <h3>Filters</h3>\n                <FormControl className={classes.formControl}>\n                  <InputLabel id=\"node-prefix-select-label\">Node Type Prefix</InputLabel>\n                  <Select\n                    labelId=\"node-prefix-select-label\"\n                    id=\"node-prefix-select\"\n                    value={nodePrefix}\n                    onChange={(event: React.ChangeEvent<{ value: unknown }>) => { setnodePrefix(event.target.value as string); }}\n                  >\n                    {nodePrefixes.map((name) => (\n                      <MenuItem value={name}>\n                        {name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Paper variant=\"outlined\" className={classes.paper}>\n                <h3>Database Fields</h3>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Paper variant=\"outlined\" className={classes.paper}>\n                <h3>File Contents</h3>\n              </Paper>\n            </Grid>\n\n          </Grid>\n\n        </Paper>\n      </Grid>\n\n      <Grid item xs={12} sm={12} md={6}>\n        <Paper variant=\"outlined\" className={classes.paper}>\n          <AiidaXNodeTree nodePrefix={nodePrefix} />\n        </Paper>\n      </Grid>\n\n    </Grid>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport * as MuiIcons from '@material-ui/icons';\nimport { Omit } from '@material-ui/types';\n\nimport { HashRouter as Router, Switch, Route, Link as RouterLink, LinkProps as RouterLinkProps, Redirect } from 'react-router-dom';\nimport { QueryClientProvider, useQuery } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nimport { AiidaSettingsContext, isConnected, queryClient } from './aiidaClient';\nimport { PageHome } from './PageHome';\nimport { PageProcesses } from './PageNodes';\nimport { useStyles } from './styles';\nimport { AiiDAIcon200 } from './icons'\n\ninterface ListItemLinkProps {\n  icon?: React.ReactElement;\n  primary: string;\n  to: string;\n}\n\nfunction ListItemLink(props: ListItemLinkProps) {\n  const { icon, primary, to } = props;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink} >\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\n\nexport function App({ showDevTools = true }): JSX.Element {\n\n  // style hooks\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // component state for the left menu\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  // component state for the AiiDA REST URL\n  // the URL is is stored, so that it persists between sessions and page refreshes\n  // we also validate to only allow http/https schema, and no ? which start the query string\n  // TODO better URL validation (to guard against attacks)\n  const urlPattern = new RegExp('^https?:\\\\/\\\\/[^\\\\?]+$')\n  let [restUrlBase, setRestUrlBase] = React.useState(localStorage.getItem('react-aiida-rest-url') || 'http://0.0.0.0:5000');\n  const handleUrlChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    localStorage.setItem('react-aiida-rest-url', event.target.value)\n    setRestUrlBase(event.target.value);\n  };\n\n  return (\n    <Router>\n\n      <div className={classes.root}>\n        <QueryClientProvider client={queryClient}>\n\n          <AppBar\n            position=\"sticky\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: drawerOpen,\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                onClick={handleDrawerOpen}\n                className={clsx(classes.menuButton, {\n                  [classes.hide]: drawerOpen,\n                })}\n                color=\"inherit\"\n                aria-label=\"open drawer\">\n                <MuiIcons.Menu />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>AiiDA Dashboard</Typography>\n              <RestUrlConnection url={urlPattern.test(restUrlBase) ? restUrlBase: null } className={classes.inputRestUrlIcon} />\n              <TextField\n                id=\"rest-url\"\n                className={classes.inputRestUrl}\n                label=\"REST URL\"\n                value={restUrlBase}\n                error={!urlPattern.test(restUrlBase)}\n                helperText={urlPattern.test(restUrlBase) ? undefined : 'Invalid URL'}\n                onChange={handleUrlChange}\n                autoComplete=\"http://0.0.0.0:5000\"\n                InputProps={{\n                  className: classes.inputRestUrlText\n                }}\n              />\n              <AiiDAIcon200 width={40} height={40} />\n            </Toolbar>\n          </AppBar>\n\n          <Drawer\n            variant=\"permanent\"\n\n            className={clsx(classes.drawer, {\n              [classes.drawerOpen]: drawerOpen,\n              [classes.drawerClose]: !drawerOpen,\n            })}\n            classes={{\n              paper: clsx({\n                [classes.drawerOpen]: drawerOpen,\n                [classes.drawerClose]: !drawerOpen,\n              }),\n            }}\n          >\n            <div className={classes.toolbar}>\n              <IconButton onClick={handleDrawerClose}>\n                {theme.direction === 'rtl' ? <MuiIcons.ChevronRight /> : <MuiIcons.ChevronLeft />}\n              </IconButton>\n            </div>\n            <Divider />\n\n            {/* TODO signify which page is selected */}\n            <List>\n              <ListItemLink to=\"/\" primary=\"Home\" icon={<MuiIcons.Home />} />\n              <ListItemLink to=\"/process\" primary=\"Node Explorer\" icon={<MuiIcons.Explore />} />\n            </List>\n\n          </Drawer>\n\n          <AiidaSettingsContext.Provider value={{ baseUrl: urlPattern.test(restUrlBase) ? restUrlBase : null }}>\n\n            <Switch>\n              <Route exact path=\"/\" component={PageHome} />\n              <Route path=\"/process\" component={PageProcesses} />\n              <Route path=\"/404\" component={NotFound} />\n              <Redirect to=\"/404\" />\n            </Switch>\n\n          </AiidaSettingsContext.Provider>\n\n          {showDevTools ? <ReactQueryDevtools initialIsOpen={false} /> : null}\n        </QueryClientProvider>\n\n      </div>\n\n    </Router>\n  );\n}\n\nfunction NotFound(): JSX.Element {\n  // TODO Offset\n  return (\n    <div>\n      <h1>404 - Not Found!</h1>\n      <RouterLink to=\"/\">\n        Go Home\n      </RouterLink>\n    </div>\n  )\n}\n\n\n\nfunction RestUrlConnection({url, className = undefined}: {url: string | null, className?: string}): JSX.Element {\n\n  const result = useQuery([url, 'connected'], () => isConnected(url))\n  // TODO hover over info/error?\n  if (result.data) {\n    return < MuiIcons.CheckCircle color=\"primary\" className={className} />\n  }\n  return < MuiIcons.Cancel color=\"error\" className={className} />\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}